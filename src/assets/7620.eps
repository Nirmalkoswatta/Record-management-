%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Modern hospital for cats and dogs.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 8/1/2020
%%BoundingBox: 0 0 3400 2000
%%HiResBoundingBox: 0 0 3400 2000
%%CropBox: 0 0 3400 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Modern hospital for cats and dogs</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Modern hospital for cats and dogs isolated flat vector illustration. Cartoon veterinary office or clinic interior. Pet, animal and vet medicine concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>cat</rdf:li>
               <rdf:li>clinic</rdf:li>
               <rdf:li>dog</rdf:li>
               <rdf:li>hospital</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>interior</rdf:li>
               <rdf:li>office</rdf:li>
               <rdf:li>veterinary</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>male</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>Pet</rdf:li>
               <rdf:li>animal</rdf:li>
               <rdf:li>vet</rdf:li>
               <rdf:li>medicine</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>reception</rdf:li>
               <rdf:li>appointment</rdf:li>
               <rdf:li>doctor</rdf:li>
               <rdf:li>nurse</rdf:li>
               <rdf:li>plant</rdf:li>
               <rdf:li>clock</rdf:li>
               <rdf:li>checking</rdf:li>
               <rdf:li>uniform</rdf:li>
               <rdf:li>consult</rdf:li>
               <rdf:li>drug</rdf:li>
               <rdf:li>injury</rdf:li>
               <rdf:li>problem</rdf:li>
               <rdf:li>service</rdf:li>
               <rdf:li>veterinarian</rdf:li>
               <rdf:li>visit</rdf:li>
               <rdf:li>monitor</rdf:li>
               <rdf:li>room</rdf:li>
               <rdf:li>treating</rdf:li>
               <rdf:li>sick</rdf:li>
               <rdf:li>specialist</rdf:li>
               <rdf:li>care</rdf:li>
               <rdf:li>treatment</rdf:li>
               <rdf:li>healthcare</rdf:li>
               <rdf:li>examination</rdf:li>
               <rdf:li>health</rdf:li>
               <rdf:li>help</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-08-01T13:39:01+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-08-01T13:39:02+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-08-01T13:39:02+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYqoXt2lrB6hUu7EJFEvV3booyeOHEaYzlwhLLibhJGmp6kbaecVjtoKKoH+tRm&#xA;PzqMuEhyhG/M7/sDDgJFylXy/tKuPrtvGLm1uDf2tOTRtxZyvcxugFT7HH0yNSHCfxzCNxuDxBMI&#xA;Jo54UmiblHIoZG8Qcx5RINFtBsWEruL24F7dq14lpb2/pgF0DVMi16kjMmOMcI9PETbTKZs70Apf&#xA;pJP+r3B/yLT/AJqyXhf0CjxP6QRFs9zdBjbapHKEpy4RKaV+TZCYjHnAj4soknlJdP8AW7cAz6pF&#xA;EG+zzjRa08Ktgjwy5QJ+Kmxzk3Cl9MnOHUo5U6ckiVhUe4bBIxGxifmkCR5SUb25mseH1rVEi9Sv&#xA;CsFa8aV6E+OTxwE/phfxYzkY85fYhf05b/8AV5j/AOkc/wBct/Ln+Z9rDxh/O+xGaZfyT3YQXS3U&#xA;DRM6usfp0ZXC0/HKs2MRjy4Tfezxzs87CPvLtLWAysCxqFSNftM7GiqPnlGOBkabZSoWl9yZIohc&#xA;arqS2EbGixo6RICQSFMkgqxoPbJyywjyA95RDFOff7gvX67DCt1aXP6QtGAfg3FmZDvyikQAN7A9&#xA;fHDGUJ9OHzHJEoyh5+XVMIJ4p4UmiblHIAyt7HKpRMTRZggiwvyKXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYqpz3ENvE00ziONftMclGJkaCDIAWUIuo3cg5QWErR/ss7JGT8lY8vvy3wojnIfe18ZPIKltqM&#xA;UsvoSRvb3NKiGUAEgdSrAlW+g5GeIgWNwyjks1yKLypmgLuh1awVvshZ3Uf5YCgf8KzZfD+7l8Gq&#xA;X1D4pTMEOu6fId7g3F0spPUBQBGPl6fEj5175kx/upDpUf2/a0n6x32U2tpbddXu7aJwGMccskQ7&#xA;OxYMfmV41/tzGlE8AJ8w3xI4iHaMAsE6L/dpcTLGOwHMmn31xz8wf6IRi5H3lKdYUM+qA/z23ZD+&#xA;wf59sysB2h/nNOX+L4JD6C+H/CW39czOL8epxq/Gyf8AlmaG2iuOfKrsvFUjVmNAa/DDyO2YWriZ&#xA;Efj73J05AB/H3J1bSrNdyyKrhRHGoMkbx71cmnML7ZhyFRA/HRyImypLcLb3l16iS0kKMhSKRwQE&#xA;AO6Kw7ZLh4oiq+YRdEpV5omSVLR42bifUG0y2xqOOxEgqf4ZlaONXfl0v7mjUG6/XSQb/wA0n/Sd&#xA;D/TM38fQXG/H1BkHlv8A3oj3J/cSfakWY/3i/trtmDq+R946V0crBz+CZagGfUrCOtFImYN4OEAU&#xA;/MBjlGLaEj7m2f1D4vPDc3bLJNLNKwgHqVQNI1SQtQKj+brmy1maGDHx8NuPodNPUZOAS4b70Zp7&#xA;3MOpQwm6eLjMqogWWpHIchxAIBp1U/TmJqu0MUAImJ9cb+bdh0OWZlIHaBo7s50egjuY1/u47mVY&#xA;x2A5VIHyYnMfPzB/ohli6+9HkgCp6ZQ2pe2o3Uqu9nb84UrSZzQNTrxUCpzBOqnIE443EdT19wcg&#xA;YYjaR3VIb9/XFvdQmCV/7s15I9PBh39ssx6g8XDMcJPLuLGWIVcTYRmZTS7FXYq7FXYq7FXYq7FX&#xA;Yqld1JG+oSST722mxCYr2Mjcjyp34qu3zzJgCIADnM18GmR9W/KLi9969s892tu0pbjZhKg/ASFZ&#xA;+tRTfpjUaNC66rcrFmvJBgTXsfp+s7TQwmSVnC1iuVc8eJUCm4YH/Jplu0DdbE/Mfivi17y+X2p1&#xA;ZXH1mzguKU9VFcjwLCtMxMkeGRHc5EJWAVPULWSeNHgYLcwN6kDHpWlCrezA0OSxTAO/I80TjfLm&#xA;Eg1G1s7vV7S/vL2fS5rYcZLWioslCSf33GpB6fC3TwywY8o+g3H4H7DyUZcdVKPq79xXyVrq0029&#xA;CJpURN0rAi9j5KF8WeU7v95OXQnOH1n0937OjRKMZfTz7/2p7Z2qWtskCEkIN2PViTVmPuSa5h5J&#xA;mRtyIxoUkGsIXfVFAZjzttkjEp+wf2SRmdgNCH+d1pxso+r4JD9Ul/31P/0hR/8ANWZnGO8f6YuN&#xA;w+//AEqdeWreeGZ7gQysFUxlGhSBvjKkEfFRgOG++YmrkCKsfO3I08SDf6Kb85+e08r6Y19Ppd3d&#xA;BSAVi9Ki1ViC5Dmi/AakA0zFx6fjOxDfLLXRJfyp/Mm684WGoSXVv/ptrOKwQ8AqQSIPT3dlLfEj&#xA;1yzUaYQI3Y4spl0T/XrC7nSBlgdmLyuUVI5CobjTly2B27ZPTZIxvfu7wwzQJrZKP0Pf/wDLJN/y&#xA;IgzL8ePePmXH8KXcfkE60C3lguo45EaNvQkPFlVDvIvZdsw9TISjY7/0ORhjR+CbahaSTxo0LBLm&#xA;BvUgY9OQFCrezA0OYuKYid+R5t843y5hKEg8tI9bq2Fjc1+JJC6CvfgwIUj5ZlmWY/SeINAGPqKL&#xA;lttGLr+iLVZ7lTVJhzMUbdObMTx28BvlGXDxkSy9Pn+Pe248vCDHH1+Sd2VqtrbJApLcd2c9WYmr&#xA;MfmTlWSfEbZwjwilLVzINNuOH2uBr8v2vwzC1pPhSrucjT1xi1SIOtmgi4sQg9Omykdu57ZZAEYx&#xA;w1y2YS3luhNXqLKMxjk4kQxMT8QfkKbeJ3zG1v8Adiudivfbdp/qN9yZZnuM7FXYq7FXYq7FXYq7&#xA;FXYqlV/HHHeSeseNpqEQgkk/kkWvGvhyDbe4zJxkmIr6om/g0zFHflLZbNC8skL3enm4urc/BKnp&#xA;GN9iASXIYDetOx8cMZUDwyoH3oIurFkL5Weys5AeL6heuxSNOhkcUAH+SgAqcAqch/Nj937Un0j+&#xA;kUfZ24trWG3BqIkVK+PEUrlE5cUie9sjGgAq5Fk7FXEgddsVdiqUCytb3UdTguU9SImAlakbhDTd&#xA;SDmV4koQiRz3aOASlIHyb/wpoH/LL/yUk/5qx/O5e/7Av5aHchNS1nyf5OhDXk62Iud0j/eSu/Dw&#xA;Uc225demIGXOe+l9GLyeeeXfOXmPzla+b7aaCP6lcafKsdGCm3V43REWilpKgsenUdq5najTQxCG&#xA;+9/Nx8WWU+J4v5P85a35T1X9I6VIodl9OeGQco5Y6g8WHXqOoNcyMuKMxRa4TMTYfWvlPzNp/mbQ&#xA;bXWLE/urhfjjJ+KOQbPG3up/rmjy4zCVF2MJCQtN8rZIE/8AHbX/AJhm/wCTgy7/ACf+d+hr/j+C&#xA;OylscQCKEVB7HFXYq7FXMoZSrCqkUIPQg4CL2UFLvqWoW49O0mQwAgqktaqAa8QwrUfPMLwMsNsZ&#xA;HD59Pi5PiQlvIb+SpDZTvMs95IrtHvFFGCI1J/a33JycMEjISyG65AcgxlkAFRH60bmW0OxV2Kux&#xA;V2KuxV2KoSW/arehF6iISrzMSqAjqAQHJp32p75aMfeWsz7l0F4XdYp4jDK45ICaqwHXidtx4EA4&#xA;JY6Fg2EiXQq8kccsbRyKHjYUZWFQR7jIAkGwyItBDSAg4wXdxDH2jV1ZR8vUVyPvy7x75gH8eTX4&#xA;VciVa1063t3Mo5SzsKNPKxdyPCp6D2GQnlMhXIdzKMAN+qUeePOWn+UdE/Sl6rOJJo7aCNQTyllN&#xA;FrQE0ABJwQgZGgxzZDCJIFnuQ3k7z1D5ikaD0PSlWL1lkRucbpUCoNBT7Q8cEo04ei1/jSMTHhkE&#xA;91fVIdM0+W7loeAPpxk8eb0PFK0NOR74ceMzNBz5y4RbCNXe7vtA0C5bV55Z21TTUuQq23FZvWTn&#xA;xpCv2WO3bMrFDhlIf0Zfc0SNxB8wyHQdYafWb60e9kubdFjFm0oiHqMAzTMvpRxbCoWjeBI2yrJp&#xA;5xjxEM4ZQZEWh9d802HlyXUbu5Vpppnt4LO0j+3NM0ZKovh0qW7DJGHFCPcLWJ9Z+CUaR+aF1/iK&#xA;y0XXbCK0OqFl0+7tpTLGZF/3VIrqjA7ijDqT0yjFw5ImUL9PO3K1GGeGQE69XKnnn55Xfred/RDV&#xA;FraxRlfAsWk/U4zfdmRrF7y6fVn1p5+Smp+X9MimhmuPU1LVZEjW2RGd1ESyNuAK8afjlHaUJy3r&#xA;0xbdJKI95Y1r/wCVEcfki51G2sp4NUi1O5+owtFMJp7EsRErRKrFWovJeQHh4ZXDU+uidq+1lLD6&#xA;b82P/lt5384+Utd/Q1jYG4GplTNZ3KuixEf8fBAoy/CCD4gewyOuOPh4ieX4plpITlMQiOf4t9H+&#xA;T/Mz69YztcW4tb6ymNvdwq3NOXFXWSNiFJR0cHcbGo7VzVCQIBHIudlxyhIxlzCYH/jtr/zDN/yc&#xA;GX/5P/O/Q0fx/BHZS2OxV1QCATuemKoLWtYs9H0ybUbvl6MPEcEALu7sEREBIBZ3YKKnqcVYfp/5&#xA;t6f+n4dH120Gim9UnTbuSdZIZnVgpiZgqem/xDrsfHxGOQmLj0ZZ8csMgJir5M9wsXYq7FXYq7FX&#xA;Yq7FXYq0/LieP2qGnzwhUtYn/DwELemfRCliASppR617jeuZA/vd+9p/ye3cq3DM1tZ8v96GkhK1&#xA;2NQQX2/1OWQiKMu6j+z7WUuQ79kdlLY7FUm8xa/HpqRwRkG9uK+kp34qOrkfgPfCA4eq1QxgAfUW&#xA;D+YNVbWILXT9TMTi2uYruGaTin7xeSrXoo4k1qKY+KYTFDiiefuZaLNCcJnLMQlGuE8t9/1dGc+W&#xA;9C/RVvIZeLXMxHNk6BV+ytSB75LLwcZMBQLlCcjECW5ApKvzS0vUNT8n3Fnp8D3Ny8sRWJBUkK4J&#xA;yrJEyxyA5kfpDkaPJGGaMpchf+5LFND0690vyLocGoQtbTDXbSYo9B+79dX5/wCrxFa+GXaMeHGp&#xA;7Hgl+lHaB8bLeP1C49Pchfy18va5Z+f7u9urGaG0dbgLO6EJV2DLv7ruMxcWKUck5HlK6/0wc3Wa&#xA;iE8EIA+qJF/6Uof887PXE8y+XbnTY3ZGkaTn1jE0ZQUalKDh4nffNrgyx8IiXIPP54+ob/Vt+hg3&#xA;5l6xrS6rAbaUQQ6a8c8LxMRKs2xWQntxP2cj2bOExZHql9yNViGDIcMZE8NH8fN7L+XVz/jDyZY6&#xA;pqF7JNeNzhvEBiZVkicjdSh4llCvT3yWbJ4cyBEfb+tsxw442SWT2/lu3tq/V7qeGvX0/SX9UY8M&#xA;pOpvnGP2/rZjDXUsG/OPz1/gHQIpoLy5udY1Bmj0+CR09McAC8slEBKpyXYHckZbhImfpjX482rN&#xA;6BzNvJfKVr5pTXpfNGvX8lxd6lHHJJHuDJG8dVEisq8eNV406UzS9o9oQl6Ij6SfwHqexeyZgeLK&#xA;X1AV+33PSPydsfMEvmDzf+lJp7YSS2dxaNAVETwyRyKnHkrfZSNQ3vmdps8DhjwgHvvv6uk1uOf5&#xA;ifETz293R6taaYLe4Nw1xNPIU9MeqVIAJB24qvhlk83EKoD3NEcdG7JRmUtjsVSPzQjxx2t8kzxf&#xA;V5VD8f5X2J+YzH1Aqj3OfoCCZQIuwx785lnn8nNFYXUUWqQT297aW8jU9c28gfhSvenfbMqIB2PI&#xA;un1GpjhqRNSBBHweG/m1b+Zr02TQwE2EEC3EqR8S8c5Lct68yAvhtlXZ0YgE9bpyu39Z64QJq4iV&#xA;eZt7t+Un5kt570Ge9ms/qd5ZyiC5RCWiYlQwaMncVr9k9PE5fkhwlow5eMWznK252KuxV2KuxV2K&#xA;uxV2KoWWwRmdo5GiEm8sYCsjHxKsDv8ALLRl792Bgugs1jf1HdppQOId6fCPBVUKo+7IyyWK5BIj&#xA;W6IyDJA61rFppGnyXtyfhQURB1dz0UfPCBbRqM8cUDKTyOLWLrU/MDXt21ZJuQA/ZUU+FV9hllbP&#xA;KjPLJl4pcylXn26kt/RCAj1kKh+wod/p3xDZlhcgXrfnLz5pflTQo9ZvoZ5rWUqB6Cq1OS8hUsyq&#xA;K9t98oJ3Arm9hCIlEysARFpN5R/NWy84yG30vTryBJIuX16RU9FGLBeDFWNHpyZdqHicsxUZG/4W&#xA;OWBEIyHKY2/Smnn2CNtN0m3pSJ9VsISo/keUIw/4E5bigJmXF/Nl9zHxZY6Mdtx97X6I1nTZpzos&#xA;/KKNgTZymtVKggiu3iOx2zCyY5RAMDtXL4uxxajFkJGUbk/UPcGC+ZB5qjvrjUNdhieO8rFpoevK&#xA;3RKM3pIrfBUsBVqk0+WXYt4783le2jLFkNESjfpPdy5efn5PNPNtjftDdXBid0naNY5N25sWXYdy&#xA;dsytHKIyiI6I0+LNOPjSBMZD6j1PL9D2b8ifKereX/Kk0mqRtb3Goz+ulq+zJGECqXX9lm3NPCmH&#xA;WZRKW3R2mCBA3T+887PDdTQpaBljcoGL0J4mlaAZfDs+4g20y1dGqeafmv5cu/P99odzDAFXSpSb&#xA;+HmPis5HQzOtQPiRUrTuMc2LwMUpA719q4j4+SMa6u8zTWdzenhGVkgIifkhCsvBXVlJABHxldu4&#xA;zhfDlCr67vo3Zt8MgRsD+hl35d+Yrez025jvpGARlEFAWJABqu3hXvmw0GQQErdZ2xojPIDAe9ll&#xA;rqetXd5G8VmYtNkIHqSgB6CpJ41r8WbCOScjsPS6eeDFCJBlc/Lk8V1P/nKvULO/udPl8qLb3llN&#xA;Jb3UUl6XKyRMUYbQJ0ZTnQ4uyozF8f2fteeydoGJrh+1GeVP+cnZNY8y6bpN5okVnb39wlu10Lgv&#xA;wMp4qaGNRTkRXfHN2TwwMhK68lxdo8UgCOb27VrD6/p01rUK0gHFj0DAgj8RmjyQ4okO50+Xw5iX&#xA;c8984eTGsdNk1V7pri4DxrIpFFCU4bVJJ345PADEUd3Q9u6eE5SzRFXW32JBaW41mFbS0s2Opxq8&#xA;012ZSecaKTwEdOK9QBvkwBAbcnWGc9ZKiOLL/OJ+yuQekfl5pmnad5VtbaxtorVQXM8cIoGlLfE7&#xA;E7lmAH6htlYyie4epx6aeGIhOuIDoyTCydirsVdirsVdirsVdirsVdirsVeM+c/MFxq2ryqWItLZ&#xA;2jtox0oDQv8ANqZbEU8h2hqjlyH+aOSA8v2L3+tWdoj+mZZBVx1Cr8TEe9BhLRpcfHkjHvL0DXPI&#xA;f1iB4kC3du/WGSiuPcHYbeO2ViT0GXQH+Hd4/wCYE1KDVLzy/rrXslk1IoYLqSRlaNTRGArxI+H4&#xA;WXpk9Vpp+CMmOQsbl2vYuLHHMY5xKQkOEc6v8cj0ZF+XNx5S8qw37Sz3X1r0U9KJWV19OFweSJ8A&#xA;5pyqa9VB981Ok1m5lLn970XaXZZAjDGfSNt+n4/tek+cJ/X0zQptv3mraa2243nU7Hw8M3mAVKQ/&#xA;oy+55fIbA94ZC9P0hFw+36beqP8AIqONf9l0+nKB9JbD9TBfP+q6XqUMEcbMyWsh5zgfCSwpxB67&#xA;8fwzE8ck1AWWzW9mYuAT1MuCAPLqfJZ+XFzpT6lJGGMdyiEW0bUoyndyD/MPDww48EonikbJYQ7Y&#xA;wZYjBhjwQjyvr+PmXo2XMnl2o/8AHQuv+M0n/EjnSYvoHudPk+o+9MfKkSTaqYXFUkhkRh7MKHMX&#xA;tAXiIb9HIxyAjol3nOw8v6ZfwWpLzO6FpgeLNGKjgKjh13zk82juQEe7q9N/og8DGZz/AJwj6fME&#xA;9T5fanP5dRaLdwXE0Ch5bSQRiN0UFKqHDjdvtV6+2X6fS+H9VW4c+2hqxcLA631/YzjMtxnyd+c/&#xA;kFLP81L6+hurCKDVuNxb2093BEwuZIxzMyyOpRGkDPyb4d6Z0Ggzfu979LpdbiPHQ/iKQ6d+SX5r&#xA;3SxahpunQXsLN6kF9aX9k8bMp+0jibsw+/Lz2jjG0vuP6msaKfOP3h9i6VLfS6XZy6hD9Wv5II2u&#xA;7cMrenMyAyJyUlTxaoqDTOamBZrk72N1vzY9+aGo2dh5OuXum4iaWCKL/XaVT/xEE/LJ4cZnKg4m&#xA;ux8eIx5XX3sI8jXsCa39U0/ULZtQvIWjiPLnxUEO9KVHKi7DKskMxiSIGIHUsuzuzcOmnxZMkZkj&#xA;6Y/rep6NpKaZamFZGlZ2Lux2HIgDYdumV4sfAKdlqdQcsrqkfljjuxV2KuxV2KuxV2KuxV2KobUr&#xA;6OwsZruRS6QjkVWlTvTauWYsZnIRHVhOfCLWR6pbTaSdShNYPSaUE9uIJIPypQ4MmMxkYnmg5Rwc&#xA;Q5U8GJJJJNSdycseGTnybPFB5msJZWCRq5DMxAAqhG5PzwEE7BzOz5AZokvYf0vpP/LbB/yNT+uD&#xA;wJ/zT8nrvFj3hgXm6PS9U8wXUs8he2trBEglhq1ZzLVVWgPLZzyp0GYUtBLLnqcZCNc6Pe7vT9pD&#xA;T6X0SiZmZ2scq97Ap/LqW09yIInnjj+FpWUszB92C7AuKmnwg5harQZRkkIQnwA7bF3Gh7TwHFE5&#xA;JwEyN9x+t6Xqt9b3Hlvy0qugmivdLknhVgWjWORC5Za1UKBvXp3zf6LHkomUSDwHp1p43XTx+IRE&#xA;gx4/stk9nqmlhZZHvIBJJI5YmRKlVYqnfpxAyOTDPYcJ5dzXHJHvDA/znubKDyak2lSRKVv4WnNs&#xA;ydHSRKtx9yMu0OADJUo7HyatdIZoeo8VfF5n+Xt7q1x520aKO4ck3KFwx5Axr8Ugof8AIBza6rDj&#xA;jjkaHJ12nwxGQUA+mLiX0YJJacvTVm49K8RXOdAd4XzXN+ctvczz3B0v0eTNKUa6ToW6Asicjv0A&#xA;zo4emIHc6iQs2n35e/mvb3vm6w09NMNb1zAJ/rAISv7VAh59P5hmLqvXise9uwx4Z0VbzTcTT+Y9&#xA;RlkqW+sSJQ9QqNwUfQqjOdzccJicRYqi2aY6fU4c2DNMY8gyccSeWw4a/HwePfmJAbmFrwD4oJSK&#xA;/wCQ3w/rC5ttNKpU6XSGtmAZnOe7FXYq7FXYq7FWQy+StSXypaeY4mE1vcuUaBQeafvWhU/5XJ1p&#xA;t4jJ8Bq0Xu+1dN1S1sPKthLIwMkdlbsIagOaxqBt169808cMpzrzdocgjG/JHaFqT6lpsd26CMuz&#xA;igrSiuVqK/LHUYhjmYhOKfFG0flDY7FXYq7FXYq7FXYqxzzrc3kVnGkdPqs/JJ6iu+xXf6Dmw0EI&#xA;mRJ5hxNXIgeRefLe3cUUloZpBasrRNErGnFjU7dOubeeGMxuN3WkkgxvYvNPMnnK40nzNe6TFbpJ&#xA;FbiMxyMSGIeJHNabdXzW/lY8ZjbiDQRPUs+/KSxTzha3l7PJ9UlsZlQRxjmGDrUE1IPXKsoGGQPN&#xA;ytN2ZG74js9H/wABxf8ALY3/AAA/5qyX8on+a7H8mO9j/n/TF8q+UNS8wRyG7ewRHFuw4Bucix/a&#xA;Ban269Msx68ykBTHJpeEXbw3/lfl3/1Zo/8Ake3/ADRmX4ri0nXk383LjzF5m0/Rn01Ldb6eOAzC&#xA;UuV9R1SvEqK05eOPi7E9wJTGNkB7x/gOL/lsb/gB/wA1Zgfyif5rl/kx3sV/Nbyoth+Xmr3CTmZo&#xA;jbyBCoH2bhATWvZWOTxavxMkRVLLT8ETuxD8jLJLjzqZ2p/odrLKh/ymKxbf7GQ5l9pyrFXeWjSC&#xA;5vfL/wD3huf+MT/8ROaCPN2Z5Pi3y5o1lrXmPT9MvTIILhpatEwVgUhdxuQ38udERbqSnP5RxxR/&#xA;mHoccJJiS9ZYyevEFwK/RlGf+6LZh+oPXvP9l9X81XIQbXASVQPF1AP/AAwOaiPJ0vaePhznz3eY&#xA;+etEFjqGs6QTzFu8qRk7kj7UZPvTiclA0QW6cPDyV3F5PwT+UfdmZxFzLVY7GeReUduzqejKhI+8&#xA;DK5ZgDRl9rdDBkkLjGRHuKm0QVirJRhsQRQg5MTvq1EEGi1wT+Ufdh4ii3cE/lH3Y8RW10SwCVDI&#xA;nKMMC6jYla7gHHiK2+krDTdHttFtI9KjC6bT1bZKllAkPqgjkSftHlm1xVWyJJkl3WA1ryRQoJ+V&#xA;BkuHdbZj5AmuksJ5rqfhYoRHbq5CqGqWYitP5s1PaMQZARHq6udpCeEknZmOatznYq7FXYq7FXYq&#xA;snnhgheaZwkUYq7noBhjEk0EEgCywzzd5j0y6toIbWcyguxfh9kcdviBoe+xzbaLTTjImQcDU5oy&#xA;AALDblKzgruHoR+rNpHk4ReJeb4pLv8AMLVAlW9PkzmnRYbcV6f6tMwLvKzjzezf84yIv1XzBJT4&#xA;udsoPtSQ5i9oHkHP0o5vb81rlsX/ADP0CbzB5C1jSIZVgkuYl4yuCVHpyLIagf6mXaf+8DVmHoL5&#xA;l/5ULq//AFdLf/gHzd+EXV2nHk78q9Q8t+b9C1Oe+iuI11G0j9NFYGrzoK1OCWOoS/qn7mWM+oe8&#xA;PqrOfdulfmjRl1ry5qWkk0N7byQo3g7KeDfQ1Dk8c+GQPcxnGwQ+T/L+ranYXC3dnI9tfWLAequx&#xA;U7jce9KEHbOnHDOPCXUG4mw+mfKHm+HzT5RkvqKl7FG8V9CvRZQh3Ff2XHxD7u2c/qdOcWSunR2e&#xA;LLxxt8g5u3Xss/Kn/wAmLoP/ADFD/iJyjU/3ZbMX1B7h52UX3nuytANwLeBv9lIWr9z5pY8nXdo+&#xA;vVRj/VH2vK/zOJt/O3midjVfWDgHoONtGPxpkxvTPW75qSHy5+Wuh3HkVvNes3l1HEFlk9C1WOvp&#xA;xuY/261JZfbMHUdo5Bn8KAHxd1g0EDh8WZPwTibyR5NE4tl1PVYzBd2mlgR+kFMt0gaNun2aN8R/&#xA;DMOOpy1ZjA2JS+TnTEdoic48PDDY/j4us/y68k67qFosd7qKT6jbyXMQYQgBLZxA3I0b4mbfD+ez&#xA;YYEVGomuvXdjk0+LUZBImVyHl/D6XmfmfRG0PzBfaSZPV+qSlFkI4ll6qSPdSM3umzeLjE+8Oj1G&#xA;Lw5mPclmXNKc6P5Q13V7c3Nlb+pbqaM4dK9aH4SwNR1plsMMpCwtvoOyRV0uO14ojwRqpWMcU+Ed&#xA;VHYHwzZxjwrdqlrCroxbpUbfLJSKAE60m1mu7yC3WNpoQ4aSMEhQtQGJ8Nsxc8xGJPIt2OJkQHpg&#xA;AAoNgOgznnbuxV2KuxV2KuxV3XFXj35seh5dvLH9GxBTeLI0qvyZRwKgcd61PI13zY4+0MgFbF02&#xA;vAxkcPVgq+c9UUqfSgPHcAq//NWT/lCfcPx8XA8csL0i7nvvNeu3Lxq8l4s9sRv8LTtwBSp7cdq4&#xA;BnIkD3uSJ/T5vbP+caI2Hl7WJP2Wu0UeNViBP/Esh2h9Q9zttLyL2PNe5KB1z/jj3n/GF/1Zdp/7&#xA;yPva830H3PNM6F1CGuf+Ohov/bVsf+T65DL9Ev6p+5nj+oe8PYs5t3DsVeF/l95dsrj80vPGlXdu&#xA;JNOlS4Voz0CyXSsgB7U7HtTNllzEY4SHNxYYxxSB5I7yz5b8weS/OF7Yt8ehX0MkYuXYKrjiWhIH&#xA;+/FY8D8z7YdXrMWSEbNTtlptHlBkYi4Dm+fM2Tgss/Kn/wAmLoP/ADFD/iJyjU/3ZbMX1B77cW4u&#xA;PzVQHdYlWRv9jBUfjTNJ0cSUOLXe7f7Hjv5+3CR+adb4neZ7aOvuLePl+CnLMI3XUC85/HRkOiWv&#xA;6R/La10SG2kks7i0EX1uEruxNWYAg/t1zl8+Uw1JmeYlye6waHFPTCPiCjFXk8ss909x9Tugz6ha&#xA;akF5JQPZoqKn2ejcd8gNYarb6ZR/0zYeysV34n8Ql8lTRtBl0q7sLmKzuZGsLae1jVmSjLPN61TR&#xA;eq9MGbVGYINeog/IUnF2ZigQRk+kEfM28i/N145PPF3MF9OaSOE3EJNSjiMKAfmiqfpzo+yL8AA9&#xA;5p5ftrHCGoPDLisC/f3MMzZupTby35g1TRr9JLGQKJGUSxNUo/UDmAVJpy8cshlMNwgvUR5t1UGo&#xA;EdR/kn+uR/lDJ5OJ40l0fnLWkXirR0/1BkDrci+PJ7F+UN8dS8vT30yAXYuGt5HFQGVFV1IHQf3l&#xA;Mx8+eU+buezzxQJ62zvMdz3Yq7FXYq7FXYq7FWFfmh5KvPM2nWg05IzqFrKeLyuY1ETj4waK1d1X&#xA;Jwrq4mr03igVzDzb/lSvnnwsv+R7f9U8s9Hf9n7XX/yZLvdpH5QfmVp2sWuoLBojx2snqCChj9Sh&#xA;qpleNEZmXqGPfEcHeXNOCR4bEfR8L9/eyTyD5X/Nnym7262miz6VM/qTwRPLBKWoF5K4VxWgHVT9&#xA;GMpRlzJLkDjvlGvJnv6S84/9WS1/6Tz/ANk+R4Yd/wBn7Wdy7lC/uPON1ZzW36GtU9ZCnL6+TSop&#xA;Wn1cZPGYRkDfLy/axmJEEUxj/CvnT/lhtP8ApLb/AKo5sf5Qh5uH+UkpSeTvOb3NlN9StB9Tu4Lv&#xA;j9aPxehIH4/3W3KlK5GWugYkb7imUdLIEFmf6S84/wDVktf+k8/9k+a3hh3/AGftcy5dyybUPO7R&#xA;sIdHs45D9l3vGkUfNRDHX/gshOIr0nf3ftbMRHF6x6fJK9HtfPlhe3d1cWVpdtd0LKLn0QpBJqD6&#xA;Uh75Rgw8JJlLn5OZrNVCcIxhEjh7yp69pPm7WriJrrTYBaQoeFql6VrIf2nf0KsOmwA+eHJpoTl6&#xA;pekdK/ajT66WGBEI+uXU9PcHmnl78h/NWmarFe3tvYalBGGBtJJSEYspUE8o3BpWvTNlrNR4uMxh&#xA;IwJ6/gh1eDFwS4pASHczfTvJOq2F9Be23lfSIZ7dw6SRTIjgg9mW2BGaeOmyAi88yO7f/inOOaFb&#xA;Y4j5fqRl7pv5mt5ifWLGCwt1ZFT6tLIZfhUAMC4SNjyIzMOOF3ZcOUsvICNeY3+bEPPP5TedfN13&#xA;PPeQWMXqSerGY5mV0PELSojo42/aByUKibBacsMs9qjXu3+fX4pz5I8h+cfLvlu20e4htrlrYycZ&#xA;UnKjjJI0lKGPsWzV63s/xspmJVfk7PSag4sYgRdJ9+hPNH/LDB/0k/8AXvMT+Rz/ADh8nJ/P/wBF&#xA;36E80f8ALDB/0k/9e8f5HP8AOHyX8/8A0Xkvmf8A5x68+a35gvtV9ezjF3KZFjaVmKr0VSePZRnQ&#xA;6bhxY4wvkHSajDLJMy70r/6Fg8+f8tVl/wAjH/5py/xotP5STh/zjD58BqLqyr/xkf8A5px8aK/l&#xA;JMnt/wAkvPYjRZ2s2cCjOsrbnxoUygmPe4p7MnexCr/ypPzl/Na/8jT/AM043HvX+TJ94eueRvL7&#xA;aD5atdOljWO4Tk1xwf1A0jMaty4p1FNqbdN+uVyq9naafD4cBFPsi3uxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FD6BEB25E3D3EA11BCD7C5230AF4E61A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FD6BEB25E3D3EA11BCD7C5230AF4E61A</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5a109cbf-5a8e-6b4c-afb4-df0da212e05d</stRef:instanceID>
            <stRef:documentID>xmp.did:958DFFFEF8B2EA119086F493C99EFE59</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:61bf44f6-56e8-4a42-9a07-d2dfdcede6ff</stEvt:instanceID>
                  <stEvt:when>2020-06-09T22:04:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35ec1cd4-f049-2e44-8f2e-1ac6b35f627c</stEvt:instanceID>
                  <stEvt:when>2020-06-14T17:10:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:958DFFFEF8B2EA119086F493C99EFE59</stEvt:instanceID>
                  <stEvt:when>2020-06-20T16:24:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5a109cbf-5a8e-6b4c-afb4-df0da212e05d</stEvt:instanceID>
                  <stEvt:when>2020-06-25T20:01:55+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2019 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD6BEB25E3D3EA11BCD7C5230AF4E61A</stEvt:instanceID>
                  <stEvt:when>2020-08-01T13:39:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3400.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=140 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=87 B=66</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>182</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=116 B=88</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=164 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=224 B=178</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=150 G=217 B=201 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=80 G=191 B=165</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>80</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>165</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=143 B=124 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=70 B=85 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=55 B=91</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=155 G=193 B=249</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>154</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=177 B=242 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=83 B=137 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=70 G=110 B=182 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>70</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3400 2000 li
3400 0 li
cp
clp
3400 2000 mo
0 2000 li
0 0 li
3400 0 li
3400 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1892.32 1651.15 mo
1697.85 1651.15 li
1697.85 1223.21 li
1892.32 1223.21 li
1892.32 1651.15 li
cp
.207843 .32549 .537255 rgb
f
1826.19 1380.83 mo
1763.92 1380.83 li
1763.92 1267.71 li
1826.19 1267.71 li
1826.19 1380.83 li
cp
.07451 .215686 .356863 rgb
f
1843.85 1223.21 mo
1743.07 1223.21 li
1724.84 1223.21 1710.05 1208.43 1710.05 1190.2 cv
1710.05 1039.17 li
1710.05 1020.94 1724.84 1006.16 1743.07 1006.16 cv
1843.85 1006.16 li
1862.09 1006.16 1876.87 1020.94 1876.87 1039.17 cv
1876.87 1190.2 li
1876.87 1208.43 1862.09 1223.21 1843.85 1223.21 cv
cp
.607843 .756863 .976471 rgb
f
1808.12 1380.83 mo
1781.99 1380.83 li
1778.82 1314.74 li
1811.29 1314.74 li
1808.12 1380.83 li
cp
f
1798.41 1294.78 mo
1788.51 1294.78 li
1788.51 1267.71 li
1798.41 1267.71 li
1798.41 1294.78 li
cp
.207843 .32549 .537255 rgb
f
1902.47 1650.22 mo
1774.34 1650.22 li
1782.26 1609.58 li
1894.54 1609.58 li
1902.47 1650.22 li
cp
.968627 .8 .498039 rgb
f
1783.56 1255.19 mo
1783.56 1258.98 1779.87 1262.05 1775.32 1262.05 cv
1770.76 1262.05 1767.07 1258.98 1767.07 1255.19 cv
1767.07 1251.4 1770.76 1248.33 1775.32 1248.33 cv
1779.87 1248.33 1783.56 1251.4 1783.56 1255.19 cv
cp
.52549 .694118 .94902 rgb
f
1819.99 1255.19 mo
1819.99 1258.98 1816.29 1262.05 1811.74 1262.05 cv
1807.18 1262.05 1803.49 1258.98 1803.49 1255.19 cv
1803.49 1251.4 1807.18 1248.33 1811.74 1248.33 cv
1816.29 1248.33 1819.99 1251.4 1819.99 1255.19 cv
cp
.717647 .341176 .258824 rgb
f
1165.14 932.335 mo
1189.86 978.924 1117 1023.88 1142.64 1076.03 cv
1152.5 1096.08 1172.33 1110.84 1176.52 1133.67 cv
1181.45 1160.56 1164.92 1186.66 1145.24 1203.37 cv
1142.56 1205.65 1146.43 1209.49 1149.1 1207.23 cv
1167.02 1192.01 1181.39 1170.35 1182.71 1146.3 cv
1185.09 1102.68 1135 1085.24 1143.33 1041.86 cv
1149.9 1007.63 1190.46 968.421 1169.85 929.581 cv
1168.21 926.479 1163.5 929.232 1165.14 932.335 cv
1165.14 932.335 li
cp
.607843 .756863 .976471 rgb
f
2456.12 1138.03 mo
2270.22 1132.9 li
2234.15 1010.46 li
2417.46 1006.83 li
2456.12 1138.03 li
cp
0 .247059 .54902 rgb
f
2270.22 1132.9 mo
2456.12 1138.03 li
2452.89 1127.08 li
2429.28 1125.62 2379.34 1119.81 2333.49 1096.8 cv
2293.53 1076.74 2264.2 1037.88 2248.15 1010.18 cv
2234.15 1010.46 li
2270.22 1132.9 li
cp
0 .184314 .411765 rgb
f
2345.57 1073.37 mo
2327.59 1093.74 2314.72 1126.08 2317.14 1168.57 cv
2290.13 1163.93 li
2297.48 1115.47 2319.25 1082.74 2342.11 1066.37 cv
2345.57 1073.37 li
cp
.137255 .454902 .721569 rgb
f
2376.62 1182.51 mo
2271.73 1182.51 li
2271.73 1160.35 li
2357.39 1160.35 li
2368.01 1160.35 2376.62 1170.27 2376.62 1182.51 cv
2376.62 1182.51 li
cp
0 .247059 .54902 rgb
f
2370.29 1182.51 mo
2265.4 1182.51 li
2265.4 1160.35 li
2348.14 1160.35 li
2360.38 1160.35 2370.29 1170.27 2370.29 1182.51 cv
2370.29 1182.51 li
cp
0 .184314 .411765 rgb
f
2187.54 886.674 mo
1413.69 886.674 li
1413.69 352.113 li
2187.54 352.113 li
2187.54 886.674 li
cp
.607843 .756863 .976471 rgb
f
1431.87 868.493 mo
1431.87 370.295 li
2169.36 370.295 li
2169.36 868.493 li
1431.87 868.493 li
cp
1 1 1 rgb
f
605.376 1539.96 mo
605.376 1539.96 715.667 1458.1 730.781 1422.81 cv
745.895 1387.53 714.731 1391.52 714.731 1391.52 cv
714.731 1391.52 759.267 1328.42 747.446 1307.57 cv
735.625 1286.71 711.031 1313.34 711.031 1313.34 cv
711.031 1313.34 731.692 1227.98 713.729 1223.23 cv
680.27 1214.39 652.815 1306.26 652.815 1306.26 cv
652.815 1306.26 655.277 1268.12 634.335 1273.25 cv
602.752 1281 619.458 1363.12 619.458 1363.12 cv
619.458 1363.12 609.392 1348.56 592.071 1362.41 cv
560.995 1387.26 605.376 1539.96 605.376 1539.96 cv
cp
.52549 .694118 .94902 rgb
f
587.398 1364.53 mo
604.719 1350.68 619.458 1363.12 619.458 1363.12 cv
619.458 1363.12 602.752 1281 634.335 1273.25 cv
655.277 1268.12 652.815 1306.26 652.815 1306.26 cv
652.815 1306.26 680.27 1214.39 713.729 1223.23 cv
604.555 1539.7 li
599.673 1519.94 558.372 1387.75 587.398 1364.53 cv
cp
.607843 .756863 .976471 rgb
f
605.524 1537.12 mo
605.524 1537.12 726.114 1537 749.442 1517.41 cv
772.771 1497.82 736.589 1496.29 736.589 1496.29 cv
736.589 1496.29 790.605 1467.62 789.816 1448.5 cv
789.027 1429.38 770.717 1433.24 770.717 1433.24 cv
770.717 1433.24 808.051 1399.79 800.386 1383.58 cv
788.607 1358.67 735.212 1405.91 735.212 1405.91 cv
735.212 1405.91 739.295 1386.97 722.735 1383.01 cv
697.761 1377.04 672.422 1448.04 672.422 1448.04 cv
672.422 1448.04 684.367 1416.06 667.209 1419.61 cv
636.427 1425.99 605.524 1537.12 605.524 1537.12 cv
cp
f
600.83 1543.41 mo
600.83 1543.41 500.514 1457.81 488.274 1423.32 cv
476.034 1388.83 505.442 1394.52 505.442 1394.52 cv
505.442 1394.52 466.897 1331.78 479.408 1312.66 cv
491.918 1293.54 513.704 1320.36 513.704 1320.36 cv
513.704 1320.36 499.224 1237.89 516.602 1234.46 cv
548.973 1228.08 569.522 1317.15 569.522 1317.15 cv
569.522 1317.15 569.493 1280.71 589.106 1286.87 cv
618.686 1296.16 597.811 1373.27 597.811 1373.27 cv
597.811 1373.27 608.728 1344.44 624.368 1358.67 cv
652.427 1384.21 600.83 1543.41 600.83 1543.41 cv
cp
f
633.979 1341.99 mo
615.699 1331.37 604.611 1350.62 604.611 1350.62 cv
604.611 1350.62 618.686 1296.16 589.106 1286.87 cv
569.493 1280.71 569.522 1317.15 569.522 1317.15 cv
569.522 1317.15 548.973 1228.08 516.602 1234.46 cv
598.209 1560.66 li
604.052 1542.15 667.018 1361.19 633.979 1341.99 cv
cp
.52549 .694118 .94902 rgb
f
590.729 1531.12 mo
590.729 1531.12 480.531 1531.16 465.202 1529.38 cv
449.875 1527.6 466.809 1513.92 466.809 1513.92 cv
466.809 1513.92 432.52 1515.16 427.294 1506.82 cv
422.066 1498.48 436.072 1495.2 436.072 1495.2 cv
436.072 1495.2 401.923 1485.3 403.554 1478.04 cv
406.591 1464.51 444.306 1473.33 444.306 1473.33 cv
444.306 1473.33 430.297 1466.53 435.99 1460.21 cv
444.576 1450.68 481.244 1476.6 481.244 1476.6 cv
481.244 1476.6 468.663 1452.62 475.601 1447.26 cv
504.674 1424.81 590.729 1531.12 590.729 1531.12 cv
cp
f
511.178 1655.16 mo
694.584 1655.16 li
717.944 1633.83 732.176 1604.44 731.656 1572.21 cv
731.394 1555.93 728.044 1541.74 721.055 1527.8 cv
484.587 1530.46 li
478.051 1544.62 474.545 1560.17 474.807 1576.45 cv
475.302 1607.15 489.093 1634.84 511.178 1655.16 cv
cp
.235294 .560784 .486275 rgb
f
1053.01 1070.74 mo
1027.22 1076.09 li
1029.96 1087.61 1030.9 1093.91 1031.26 1105.96 cv
1048.57 1102.91 1063.99 1102.27 1063.99 1102.27 cv
1053.01 1070.74 li
cp
.956863 .54902 .498039 rgb
f
963.243 1077.24 mo
963.243 1077.24 954.295 1027.51 955.799 996.234 cv
957.303 964.958 948.412 943.758 948.412 943.758 cv
939.004 949.059 li
885.138 1005.47 li
885.138 1005.47 905.51 1112.1 916.027 1122.62 cv
920.391 1126.98 992.667 1114.98 1034.56 1107.59 cv
1034.2 1095.53 1032.19 1083.96 1029.45 1072.44 cv
963.243 1077.24 li
cp
.235294 .560784 .486275 rgb
f
1247.98 1653.29 mo
1048.9 1653.29 li
1048.9 1319.45 li
1247.98 1319.45 li
1247.98 1653.29 li
cp
.607843 .756863 .976471 rgb
f
1251.66 1440.94 mo
1041.55 1440.94 li
1041.55 1293.32 li
1251.66 1293.32 li
1251.66 1440.94 li
cp
.07451 .215686 .356863 rgb
f
2994.63 1650.22 mo
495.745 1650.22 li
491.821 1650.22 488.642 1652.74 488.642 1655.84 cv
488.642 1655.84 li
488.642 1658.94 491.821 1661.46 495.745 1661.46 cv
2994.63 1661.46 li
2998.56 1661.46 3001.74 1658.94 3001.74 1655.84 cv
3001.74 1655.84 li
3001.74 1652.74 2998.56 1650.22 2994.63 1650.22 cv
cp
.207843 .32549 .537255 rgb
f
1101.25 1021.35 mo
1101.25 1021.35 1112.97 1021.67 1116.3 1021.35 cv
1135.51 1019.51 1127.54 1047.9 1127.54 1047.9 cv
1127.54 1047.9 1118.16 1038.7 1114.39 1038.7 cv
1110.63 1038.7 1105.4 1039.72 1105.4 1039.72 cv
1101.25 1021.35 li
cp
.07451 .215686 .356863 rgb
f
1143.77 1187.35 mo
1143.77 1187.35 1156.2 1177.99 1151.44 1165.73 cv
1146.67 1153.47 1137.3 1132.19 1145.31 1129.12 cv
1153.31 1126.06 1159.78 1127.42 1161.14 1131.68 cv
1162.5 1135.93 1173.06 1167.43 1173.06 1183.95 cv
1173.06 1200.46 1160.97 1213.06 1160.97 1213.06 cv
1143.77 1187.35 li
cp
.717647 .341176 .258824 rgb
f
1184.87 1238.83 mo
1184.47 1229.1 1182.55 1218.33 1177.24 1209.14 cv
1163.64 1185.64 1106.26 1122.29 1097.73 1117.38 cv
1089.23 1112.42 1095.34 1093.37 1095.34 1093.37 cv
1061.32 1075 li
1043.6 1065.42 li
1043.6 1065.42 1003.43 1126.74 1000.36 1132.53 cv
997.281 1138.32 1002.73 1157.27 998.657 1168.94 cv
994.669 1180.58 998.818 1243.88 993.054 1250.83 cv
988.553 1255.33 984.357 1255.97 982.966 1258.68 cv
982.315 1259.91 981.53 1261.95 983.183 1264.07 cv
987.796 1269.99 1011.34 1265.02 1011.34 1265.02 cv
1011.51 1264.65 1021.21 1251.02 1019.7 1242.91 cv
1018.18 1235.07 1023 1187.85 1026.25 1187.85 cv
1029.1 1187.85 1042.67 1208.84 1048.08 1212.83 cv
1048.08 1212.87 li
1048.7 1213.3 1049.17 1213.55 1049.57 1213.55 cv
1053.47 1213.55 1078.6 1219.09 1084.13 1224.62 cv
1085.62 1226.1 1086.19 1230.08 1086.23 1235.07 cv
1086.3 1238.39 1086.12 1242.15 1085.83 1245.99 cv
1085.29 1253 1084.31 1260.2 1083.63 1264.93 cv
1089.59 1264.98 1095.59 1264.99 1101.56 1264.95 cv
1106.48 1256.08 1116.86 1249.96 1128.86 1249.96 cv
1140.17 1249.96 1150.03 1255.39 1155.25 1263.43 cv
1165.28 1262.89 1169.17 1267.79 1177.77 1266.97 cv
1178.24 1263.97 1185.01 1242.66 1184.87 1238.83 cv
cp
.956863 .454902 .345098 rgb
f
1138.86 1160.02 mo
1138.86 1160.02 li
1131.63 1151.75 1124.4 1143.75 1118.01 1136.95 cv
1118.01 1136.95 li
1118.01 1136.95 1126.18 1147.16 1118.01 1155.33 cv
1109.83 1163.51 1093.83 1165.04 1102.68 1183.09 cv
1111.53 1201.13 1138.86 1168.79 1138.86 1160.02 cv
cp
.717647 .341176 .258824 rgb
f
1104.67 1024.11 mo
1100.91 1020.49 1095.58 1018.91 1090.42 1019.72 cv
1087.61 1020.16 1083.54 1020.42 1077.99 1019.92 cv
1065.5 1018.78 1052.68 1019.8 1044.62 1027.86 cv
1036.56 1035.92 1035.54 1064.66 1044.62 1078.16 cv
1053.7 1091.66 1079.35 1095.06 1081.62 1101.19 cv
1083.89 1107.32 1106.14 1110.27 1109.32 1102.78 cv
1109.32 1102.78 1111.72 1104.4 1115.21 1103.41 cv
1123.54 1101.05 1126.57 1092.79 1123.62 1083.94 cv
1120.67 1075.08 1108.18 1056.92 1110.46 1040.58 cv
1111.51 1032.99 1108.35 1027.65 1104.67 1024.11 cv
cp
f
1099.44 1079.42 mo
1097.99 1080.9 1097.95 1083.27 1099.31 1084.84 cv
1101.97 1087.93 1106.53 1092.89 1109.83 1094.78 cv
1114.77 1097.61 1119.47 1085.62 1119.47 1080.25 cv
1119.47 1075.1 1108.15 1070.48 1099.44 1079.42 cv
cp
.094118 .27451 .333333 rgb
f
1094.35 1165.58 mo
1094.25 1162.97 1092.03 1160.95 1089.42 1161.1 cv
1089.4 1161.11 1089.37 1161.11 1089.34 1161.11 cv
1076.1 1161.92 1066.98 1173.98 1068.71 1187.13 cv
1068.81 1187.84 1068.8 1188.49 1068.68 1189.04 cv
1068.18 1191.37 1064.26 1199.16 1060.07 1207.11 cv
1068.01 1209.09 1075.94 1211.08 1083.88 1213.06 cv
1089.7 1202.98 1095.47 1193.58 1095.47 1193.58 cv
1094.35 1165.58 li
cp
.717647 .341176 .258824 rgb
f
1049.16 1227.19 mo
1049.16 1227.19 1040.16 1254.17 1037.58 1264.48 cv
1044.85 1268.66 1049.25 1260.46 1065.73 1265 cv
1066.17 1261.76 1071.98 1241.74 1071.98 1236.83 cv
1071.98 1234.43 1079.29 1223.18 1085.11 1213.24 cv
1085.54 1212.5 1085.16 1211.55 1084.33 1211.32 cv
1077.12 1209.32 1067.98 1205.62 1060.78 1203.63 cv
1059.87 1203.38 1058.91 1203.78 1058.48 1204.62 cv
1053.54 1214.41 1049.16 1227.19 1049.16 1227.19 cv
cp
.607843 .756863 .976471 rgb
f
1030.91 1261.84 mo
1032.69 1257.99 1037.93 1253.46 1045.66 1253.46 cv
1053.4 1253.46 1065.73 1265 1065.73 1265 cv
1065.73 1265 1062.06 1268.57 1051.99 1268.57 cv
1041.92 1268.57 1027.43 1269.34 1030.91 1261.84 cv
cp
.717647 .341176 .258824 rgb
f
1076.35 1260.22 mo
1078.14 1256.37 1083.38 1251.83 1091.11 1251.83 cv
1094.01 1251.83 1097.56 1253.46 1100.86 1255.48 cv
1106.13 1258.72 1103.92 1266.9 1097.74 1266.94 cv
1097.64 1266.95 1097.54 1266.95 1097.44 1266.95 cv
1087.37 1266.95 1072.88 1267.72 1076.35 1260.22 cv
cp
f
1148.86 1260.22 mo
1151 1256.37 1157.31 1251.83 1166.62 1251.83 cv
1170.1 1251.83 1174.37 1253.46 1178.34 1255.48 cv
1184.68 1258.72 1182.02 1266.9 1174.59 1266.94 cv
1174.47 1266.95 1174.35 1266.95 1174.23 1266.95 cv
1162.1 1266.95 1144.67 1267.72 1148.86 1260.22 cv
cp
f
1071.13 1030.02 mo
1067.47 1026.36 1069.75 1022.07 1071.74 1019.55 cv
1061.36 1019.32 1051.33 1021.15 1044.62 1027.86 cv
1036.56 1035.92 1035.54 1064.66 1044.62 1078.16 cv
1052.77 1090.28 1074.29 1094.26 1080.24 1099.38 cv
1086.4 1088.9 1076.97 1080.08 1074.76 1075.14 cv
1072.54 1070.2 1085.82 1057.77 1087.36 1047.9 cv
1088.89 1038.02 1076.69 1035.58 1071.13 1030.02 cv
cp
.094118 .27451 .333333 rgb
f
1053.65 1022.13 mo
1053.65 1022.13 1045.6 1024.92 1035.49 1021.33 cv
1025.38 1017.75 1015.33 1035.81 1015.33 1035.81 cv
1015.33 1035.81 1024.7 1056.07 1032.19 1061.01 cv
1039.69 1065.94 1053.65 1022.13 1053.65 1022.13 cv
cp
.717647 .341176 .258824 rgb
f
1618.72 937.369 mo
1624.98 906.879 1605.36 876.649 1577.86 865.301 cv
1578.05 847.95 1572.43 825.972 1560.58 814.093 cv
1537.21 790.661 1492.61 782.449 1475.42 812.321 cv
1452.72 825.164 1434.86 852.978 1441.63 878.315 cv
1419.63 901.103 1427.99 942.332 1460.06 961.802 cv
1459.56 987.369 1473.07 1012.78 1495.43 1023.71 cv
1500.8 1026.33 1509.19 1029.98 1510.26 1031.12 cv
1508.86 1029.79 1526.81 1079.8 1582.6 1056.91 cv
1639.53 1033.56 1655.83 967.823 1618.72 937.369 cv
cp
.207843 .32549 .537255 rgb
f
1519.67 961.667 mo
1529.28 951.042 1528.41 937.664 1526.59 935.062 cv
1526.59 935.062 1504.43 926.146 1486.59 927.795 cv
1468.75 929.444 1411.65 988.951 1394.32 996.848 cv
1376.98 1004.74 1325.61 971.308 1304.08 963.866 cv
1282.58 956.434 1261.98 941.179 1254.68 939.895 cv
1247.39 938.61 1234.56 940.231 1233.6 945.762 cv
1232.64 951.294 1241.53 977.487 1243.54 980.349 cv
1245.55 983.211 1269.97 984.317 1281.92 986.419 cv
1288.25 987.534 1315.91 1004.72 1342.15 1020.02 cv
1342.16 1019.99 1342.17 1019.96 1342.18 1019.93 cv
1363.72 1032.23 1388.28 1045.36 1392.76 1043.78 cv
1403.93 1039.82 1510.07 972.292 1519.67 961.667 cv
cp
.968627 .611765 .552941 rgb
f
1260.84 1650.22 mo
1242.47 1650.22 li
1242.47 752.708 li
1242.47 747.633 1246.58 743.52 1251.66 743.52 cv
1251.66 743.52 li
1256.73 743.52 1260.84 747.633 1260.84 752.708 cv
1260.84 1650.22 li
cp
.27451 .431373 .713726 rgb
f
1526.59 935.062 mo
1526.59 935.062 1504.43 926.146 1486.59 927.795 cv
1469.52 929.374 1416.5 983.932 1396.77 995.543 cv
1404.62 1007.39 1408.7 1020.46 1410.81 1033.86 cv
1444.55 1013.77 1512.1 970.043 1519.67 961.667 cv
1529.28 951.042 1528.41 937.664 1526.59 935.062 cv
cp
.235294 .560784 .486275 rgb
f
1508.34 1612.68 mo
1510.62 1596.48 1510.44 1566.57 1509.29 1535.02 cv
1523.42 1534.3 1535.37 1533.41 1549.49 1532.48 cv
1543.61 1572.77 1539.65 1614.26 1539.65 1614.26 cv
1540.62 1622.23 li
1541.14 1645.83 li
1461.18 1646.43 li
1461.18 1646.43 1478.03 1638.96 1501.6 1624.19 cv
1503.35 1623.1 1507.36 1619.62 1508.34 1612.68 cv
cp
.968627 .643137 .568627 rgb
f
1543.29 1650.9 mo
1458.98 1651.9 li
1455.92 1651.63 1455.18 1649.16 1456.24 1647.63 cv
1458.42 1644.5 1468.05 1642.2 1478.87 1637.21 cv
1497.86 1639.19 1537.58 1626.22 1540.58 1621.86 cv
1542.3 1630.59 1544.99 1650.53 1543.29 1650.9 cv
cp
.956863 .454902 .345098 rgb
f
1651.61 1595.99 mo
1645.01 1581.02 1629.1 1555.7 1611.48 1529.5 cv
1623.11 1521.44 1634.64 1513.24 1646.15 1505 cv
1662.39 1542.35 1679.06 1580.83 1679.06 1580.83 cv
1684.08 1587.09 li
1696.96 1606.88 li
1629.32 1649.53 li
1629.32 1649.53 1639.71 1634.3 1651.96 1609.32 cv
1652.86 1607.48 1654.44 1602.4 1651.61 1595.99 cv
cp
.968627 .643137 .568627 rgb
f
1700.49 1611.83 mo
1630.34 1655.34 li
1627.6 1656.72 1625.66 1655.01 1625.76 1653.16 cv
1625.96 1649.35 1632.93 1642.32 1639.5 1632.37 cv
1656.68 1624.04 1683.44 1591.88 1683.68 1586.6 cv
1689.75 1593.11 1701.73 1610.62 1700.49 1611.83 cv
cp
.956863 .454902 .345098 rgb
f
1506.87 1589.8 mo
1513.8 1551.39 1489.74 1456.16 1475.07 1414.28 cv
1459.81 1370.73 1450.1 1186.43 1450.1 1186.43 cv
1467.4 1166.21 li
1538.01 1161.98 li
1538.01 1161.98 1507.97 1254.28 1507.97 1286 cv
1507.97 1317.71 1522.59 1399.59 1539.75 1442.19 cv
1555.59 1481.49 1549.01 1563.89 1544.22 1590.99 cv
1531.45 1593.06 1519.34 1592.31 1506.87 1589.8 cv
cp
.207843 .32549 .537255 rgb
f
1555.86 1170.54 mo
1559.1 1173.78 1578.07 1196.25 1578.07 1211.96 cv
1578.07 1227.67 1542.3 1369.04 1550.89 1377.61 cv
1559.47 1386.18 1591.22 1407.63 1611.48 1437.52 cv
1628.55 1462.7 1667.7 1535.5 1675.17 1552.82 cv
1660.42 1563.09 1647.61 1567.76 1632.84 1572.71 cv
1630.47 1559.82 1514.83 1432.35 1501.63 1405.7 cv
1488.42 1379.04 1481.27 1257.18 1474.59 1241 cv
1467.91 1224.81 1450.1 1183.7 1450.1 1183.7 cv
1555.86 1170.54 li
cp
.27451 .431373 .713726 rgb
f
1541.51 926.352 mo
1541.51 926.352 1497.64 921.908 1474.75 936.506 cv
1451.86 951.104 1437.24 1003.15 1437.24 1025.36 cv
1437.24 1047.58 1453.74 1164.36 1447.39 1186.57 cv
1447.39 1186.57 1519.89 1183.4 1544.69 1183.4 cv
1569.48 1183.4 1574.57 1173.88 1574.57 1173.88 cv
1574.57 1173.88 1523.07 1123.1 1523.07 1100.89 cv
1523.07 1078.68 1541.51 926.352 1541.51 926.352 cv
cp
.313726 .74902 .647059 rgb
f
1559.31 947.296 mo
1556.13 933.333 1544.69 926.351 1541.51 926.351 cv
1541.51 926.351 1521.48 939.362 1512.58 954.911 cv
1503.68 970.462 1519.57 1051.38 1516.08 1070.11 cv
1512.58 1088.83 1455.7 1111.66 1437.24 1125.01 cv
1418.8 1138.33 1394.48 1146.43 1389.23 1151.66 cv
1383.99 1156.9 1377.95 1168.32 1381.92 1172.29 cv
1385.89 1176.26 1412.44 1184.03 1415.94 1184.03 cv
1419.43 1184.03 1434.38 1164.67 1442.96 1156.11 cv
1447.51 1151.56 1477.47 1138.8 1505.07 1126.12 cv
1505.05 1126.09 1505.03 1126.07 1505.01 1126.04 cv
1527.45 1115.48 1552.32 1102.92 1553.59 1098.35 cv
1556.77 1086.93 1562.49 961.258 1559.31 947.296 cv
cp
.968627 .611765 .552941 rgb
f
1558.09 1040.34 mo
1560 1001.15 1561.16 955.401 1559.31 947.296 cv
1556.13 933.332 1544.69 926.351 1541.51 926.351 cv
1541.51 926.351 1521.48 939.362 1512.58 954.911 cv
1506.13 966.184 1512.7 1011.8 1515.48 1043.19 cv
1529.13 1041.46 1543.91 1039.28 1558.09 1040.34 cv
cp
.235294 .560784 .486275 rgb
f
1518.73 887.188 mo
1518.73 887.188 1513.84 914.046 1514.82 924.64 cv
1515.8 935.233 1511.1 969.376 1490 969.489 cv
1468.9 969.602 1483.24 934.04 1485.22 923.659 cv
1487.21 913.277 1490.43 873.181 1490.43 873.181 cv
1518.73 887.188 li
cp
.968627 .643137 .568627 rgb
f
1489.13 888.385 mo
1489.46 879.594 1491.05 872.605 1491.05 872.605 cv
1518.73 887.188 li
1518.73 887.188 1517.73 892.68 1516.73 899.677 cv
1504.34 902.322 1494.5 896.531 1489.13 888.385 cv
cp
.956863 .454902 .345098 rgb
f
1517.47 809.17 mo
1517.47 809.17 1529.36 813.404 1535.83 826.329 cv
1542.3 839.254 1544.43 875.438 1518.35 889.337 cv
1492.28 903.236 1475.07 877.601 1476.69 854.629 cv
1478.31 831.658 1485.54 801.561 1517.47 809.17 cv
cp
.968627 .643137 .568627 rgb
f
1480.9 847.833 mo
1480.9 847.833 1506.88 856.646 1536.35 853.61 cv
1536.35 853.61 1531.56 868.286 1535.84 875.966 cv
1535.84 875.966 1525.91 895.339 1503.58 896.589 cv
1481.26 897.839 1474.47 867.121 1474.47 867.121 cv
1480.9 847.833 li
cp
.588235 .85098 .788235 rgb
f
1528.38 883.009 mo
1527.29 881.595 li
1533.62 876.707 1543.85 867.819 1544.33 864.779 cv
1544.95 860.888 1543.72 852.575 1541.96 851.022 cv
1541.77 850.859 1541.69 850.882 1541.66 850.893 cv
1539.51 851.518 1534.62 855.819 1532.81 857.52 cv
1526.91 866.481 li
1525.42 865.499 li
1531.43 856.364 li
1531.51 856.292 li
1532.18 855.655 1538.18 850.047 1541.16 849.178 cv
1545.42 847.937 1546.78 860.73 1546.1 865.058 cv
1545.35 869.796 1530.11 881.67 1528.38 883.009 cv
cp
f
1475.13 869.067 mo
1475.01 868.766 1472.1 861.644 1471.74 858.104 cv
1471.56 856.355 1471.81 838.615 1475.39 836.751 cv
1476.07 836.397 1476.84 836.524 1477.5 837.097 cv
1481.25 840.351 1483.53 850.717 1483.62 851.157 cv
1481.88 851.534 li
1481.26 848.674 1478.65 839.608 1476.19 838.35 cv
1474.08 839.833 1473.2 854.908 1473.51 857.921 cv
1473.85 861.208 1476.76 868.318 1476.79 868.39 cv
1475.13 869.067 li
cp
f
1468.94 849.314 mo
1468.26 855.269 1470.36 860.349 1473.65 860.661 cv
1476.93 860.972 1480.15 856.397 1480.84 850.443 cv
1481.52 844.488 1479.42 839.408 1476.13 839.096 cv
1472.85 838.785 1469.63 843.359 1468.94 849.314 cv
cp
.968627 .643137 .568627 rgb
f
1535.17 857.686 mo
1532.87 863.45 1534.01 869.502 1537.71 871.202 cv
1541.42 872.902 1546.27 869.607 1548.56 863.842 cv
1550.86 858.078 1549.72 852.026 1546.02 850.326 cv
1542.31 848.626 1537.46 851.921 1535.17 857.686 cv
cp
f
1203.29 937.018 mo
1135.11 937.018 li
1135.11 831.84 li
1203.29 831.84 li
1203.29 937.018 li
cp
.607843 .756863 .976471 rgb
f
2720.84 818.178 mo
2725.98 832.242 2739.39 834.204 2753.04 840.417 cv
2762.2 844.588 2765.22 861.472 2762.12 873.242 cv
2754.26 903.057 2779 893.988 2795.79 910.055 cv
2836.24 948.756 2769.33 985.14 2759.76 991.271 cv
2750.2 997.401 2714.23 1008.99 2707.86 1009.9 cv
2688.68 1012.65 2663.74 1002.39 2647.87 980.302 cv
2632.01 958.21 2645.82 942.3 2643.32 927.905 cv
2640.81 913.51 2622.93 914.246 2623.96 885.572 cv
2625.08 854.55 2634.67 829.416 2648.55 816.486 cv
2671.53 795.093 2704.23 799.422 2714.65 809.148 cv
2717.76 812.044 2719.71 815.109 2720.84 818.178 cv
cp
.0941176 .27451 .333333 rgb
f
2613.72 1592.88 mo
2614.63 1586.37 2612.59 1575.17 2607.49 1557.65 cv
2617.58 1557.68 2626.07 1553.21 2636.38 1553.36 cv
2639.2 1569.84 2643.56 1596.89 2643.56 1596.89 cv
2644.03 1618.27 li
2572.21 1618.81 li
2572.21 1618.81 2572.81 1619.12 2593.98 1605.74 cv
2595.55 1604.75 2612.84 1599.17 2613.72 1592.88 cv
cp
.968627 .643137 .568627 rgb
f
2644.38 1623.77 mo
2570.24 1623.77 li
2567.49 1623.52 2566.83 1621.28 2567.78 1619.9 cv
2569.73 1617.07 2584.19 1610.25 2593.92 1605.73 cv
2610.97 1607.52 2640.94 1600.5 2643.63 1596.55 cv
2648.31 1609.63 2645.9 1623.43 2644.38 1623.77 cv
cp
.235294 .560784 .486275 rgb
f
2703.18 1592.88 mo
2704.09 1586.37 2705.64 1578.22 2703.37 1556.51 cv
2713.47 1556.53 2723.07 1554.64 2733.38 1554.8 cv
2733.38 1571.74 2733.03 1596.89 2733.03 1596.89 cv
2733.5 1618.27 li
2661.68 1618.81 li
2661.68 1618.81 2662.27 1619.12 2683.45 1605.74 cv
2685.01 1604.75 2702.31 1599.17 2703.18 1592.88 cv
cp
.968627 .643137 .568627 rgb
f
2733.84 1623.77 mo
2659.7 1623.77 li
2656.96 1623.52 2656.29 1621.28 2657.24 1619.9 cv
2659.2 1617.07 2673.66 1610.25 2683.38 1605.73 cv
2700.43 1607.52 2730.4 1600.5 2733.09 1596.55 cv
2737.77 1609.63 2735.36 1623.43 2733.84 1623.77 cv
cp
.235294 .560784 .486275 rgb
f
2650.99 972.701 mo
2623.98 944.2 li
2623.98 944.2 2595.06 960.102 2561.35 975.297 cv
2552.09 959.168 2536.96 906.113 2536.15 903.583 cv
2535.33 901.044 2553.86 869.174 2549.72 868.375 cv
2545.57 867.576 2540.19 885.395 2535.81 883.589 cv
2531.43 881.784 2520.16 840.445 2517.53 842.701 cv
2512.59 846.922 2523.45 868.413 2520.85 869.978 cv
2518.25 871.543 2511.65 846.157 2506.63 847.239 cv
2501.61 848.322 2515.11 870.351 2513.63 872.469 cv
2512.15 874.586 2498.04 853.919 2495.12 858.707 cv
2493.54 861.305 2508.14 876.702 2505.14 878.424 cv
2502.13 880.147 2488.97 870.449 2487.4 873.591 cv
2485.83 876.733 2499.68 880.006 2503.53 887.957 cv
2507.37 895.906 2514.36 899 2516.68 914.031 cv
2519 929.047 2525.35 1009.4 2541.72 1015.85 cv
2556.02 1021.48 2650.99 972.701 2650.99 972.701 cv
cp
.968627 .643137 .568627 rgb
f
2633.54 1126.43 mo
2655.45 1138.64 li
2699.97 1206.73 li
2620.34 1394.17 li
2620.34 1394.17 2629.31 1422.36 2632.23 1436.44 cv
2635.29 1451.18 2642.79 1577.64 2642.79 1577.64 cv
2608.81 1578.22 li
2608.81 1578.22 2576.54 1443.58 2571.08 1399.88 cv
2564.44 1346.82 2604.85 1220.44 2604.85 1220.44 cv
2612.38 1194.66 2628.63 1141.61 2628.63 1141.61 cv
2628.63 1141.61 2632.6 1128.69 2633.54 1126.43 cv
cp
.207843 .32549 .537255 rgb
f
2709.79 1100.85 mo
2709.79 1100.85 2707.53 1116.87 2716.59 1135.14 cv
2722.11 1146.27 2731.65 1155 2738.48 1168.65 cv
2751.41 1194.47 2758.43 1231.14 2753.58 1254.71 cv
2753.58 1254.71 2726.85 1356.79 2727.91 1394.09 cv
2728.3 1407.85 2733.02 1432.63 2736.04 1449.39 cv
2738.71 1464.2 2739.61 1575.93 2739.61 1575.93 cv
2701.67 1574.79 li
2672.62 1394.55 li
2660.34 1234.34 li
2633.54 1126.43 li
2709.79 1100.85 li
cp
.27451 .431373 .713726 rgb
f
2621.47 990.605 mo
2609.38 996.194 2587.48 1004.58 2587.48 1004.58 cv
2575.03 965.188 li
2645.43 925.137 2639.91 931.599 2692.75 932.387 cv
2734.97 932.988 2752.66 924.926 2789.01 1023.06 cv
2789.01 1023.06 2761.34 1035.5 2751.43 1039.49 cv
2747.17 1027.36 2739.47 1003.16 2734.98 1016.96 cv
2728.2 1037.79 2723.23 1058.83 2719.89 1080.49 cv
2717.78 1093.33 2713.17 1109.76 2715.59 1122.84 cv
2715.59 1122.84 2686.84 1128.76 2664.88 1129.72 cv
2664.82 1129.72 2664.76 1129.73 2664.69 1129.72 cv
2654.08 1129.45 2643.21 1128.51 2633.54 1126.43 cv
2633.54 1126.43 2629.23 1035.39 2626.93 1031.59 cv
2624.38 1027.38 2613.63 1013.79 2622.78 993.47 cv
2624.4 989.877 2623.96 989.453 2621.47 990.605 cv
cp
.313726 .74902 .647059 rgb
f
2674.32 1148.62 mo
2673.82 1148.69 2671.58 1148.39 2669.74 1148.44 cv
2667.21 1148.49 2664.99 1148.87 2664.99 1148.87 cv
2664.99 1148.87 2663.99 1148.01 2662.09 1147.13 cv
2661.3 1146.76 2660 1146.63 2659.12 1146.22 cv
2658.22 1145.79 2657.45 1145.02 2656.59 1144.63 cv
2654.34 1143.66 2652.28 1143.43 2651.6 1144.61 cv
2651.04 1145.59 2663.52 1153.22 2663.52 1153.22 cv
2675.07 1153.29 2687.16 1159.17 2713.93 1141.71 cv
2729.22 1135.03 2803.47 1098.36 2804.96 1090.37 cv
2805.8 1085.88 2794.41 1051.16 2785.1 1024.8 cv
2777.92 1028.01 2762.65 1034.81 2754.11 1038.39 cv
2761.95 1054.99 2771.19 1077 2770.22 1079.7 cv
2769.97 1080.4 2769.04 1081.67 2718.85 1114.53 cv
2717.58 1115.35 2716.29 1116.21 2714.98 1117.07 cv
2711.44 1119.38 2707.66 1121.85 2703.65 1124.45 cv
2689.34 1122.96 li
2689.34 1122.96 2666.67 1124.52 2665.99 1127.1 cv
2665.69 1128.28 2667.57 1128.87 2669.88 1129.21 cv
2669.95 1129.21 li
2670.29 1129.26 2670.63 1129.3 2670.97 1129.35 cv
2670.99 1129.35 2671.01 1129.35 2671.01 1129.35 cv
2673.5 1129.64 2676.13 1129.69 2676.77 1129.91 cv
2677.49 1130.16 2678.94 1130.73 2680.19 1131.59 cv
2666.05 1137.36 2667.14 1135.3 2662.45 1135.01 cv
2661.27 1134.92 2660.03 1135.26 2658.92 1135.17 cv
2657.02 1135.01 2655.5 1133.88 2654.03 1133.79 cv
2651.88 1133.67 2650.13 1134.67 2649.75 1135.08 cv
2649.25 1135.58 2650.18 1136.3 2651.99 1137.11 cv
2662.9 1141.85 2671.94 1140.04 2674.84 1140.74 cv
2676.79 1141.21 2673.23 1141.94 2667.68 1141.35 cv
2666.3 1141.21 2664.49 1141.71 2662.66 1141.28 cv
2661.43 1141.01 2660.32 1140.22 2659.12 1139.92 cv
2658.01 1139.65 2656.88 1139.67 2655.95 1139.49 cv
2654.73 1139.27 2653.03 1138.34 2652.06 1138.22 cv
2648.43 1137.82 2646.67 1138.45 2646.26 1138.79 cv
2645.42 1139.54 2661.89 1145.86 2661.89 1145.86 cv
2661.89 1145.86 2673.23 1147.49 2675.77 1147.49 cv
2675.77 1147.49 2677.29 1148.17 2674.32 1148.62 cv
cp
.968627 .643137 .568627 rgb
f
2682.09 1005.17 mo
2720.37 1008.11 li
2721.8 989.539 li
2683.52 986.591 li
2682.09 1005.17 li
cp
1 1 1 rgb
f
2692.69 885.555 mo
2692.69 885.555 2693.91 913.461 2697.46 923.735 cv
2701 934.008 2690 971.277 2667.76 976.713 cv
2647.71 981.614 2662.18 946.797 2664.96 931.963 cv
2665.26 930.339 2661.38 878.667 2661.38 878.667 cv
2692.69 885.555 li
cp
.968627 .643137 .568627 rgb
f
2662.87 894.908 mo
2661.13 886.094 2659.5 878.786 2659.5 878.786 cv
2692.69 885.555 li
2692.69 885.555 2692.94 891.262 2693.54 898.463 cv
2681.1 904.216 2670.46 901.644 2662.87 894.908 cv
cp
.956863 .454902 .345098 rgb
f
2684.46 814.808 mo
2684.46 814.808 2696.79 818.246 2703.9 830.384 cv
2711.02 842.524 2714.56 877.387 2688.39 892.264 cv
2662.21 907.14 2643.63 883.305 2644.42 861.007 cv
2645.22 838.709 2651.48 809.213 2684.46 814.808 cv
cp
.968627 .643137 .568627 rgb
f
2642.14 853.461 mo
2644.03 858.947 2648.16 862.499 2651.35 861.396 cv
2654.55 860.292 2655.6 854.951 2653.71 849.466 cv
2651.81 843.981 2647.69 840.429 2644.5 841.532 cv
2641.3 842.636 2640.25 847.977 2642.14 853.461 cv
cp
f
2705.92 861.095 mo
2703.79 866.794 2705.19 872.582 2709.04 874.021 cv
2712.9 875.461 2717.75 872.007 2719.88 866.308 cv
2722 860.608 2720.61 854.821 2716.76 853.381 cv
2712.9 851.941 2708.05 855.395 2705.92 861.095 cv
cp
f
2049.33 1650.22 mo
2833.4 1650.22 li
2856.77 1171.38 li
2037.75 1171.38 li
2049.33 1650.22 li
cp
.094118 .27451 .333333 rgb
f
2031.68 1285.74 mo
2873.58 1285.74 li
2873.58 1171.3 li
2031.68 1171.3 li
2031.68 1285.74 li
cp
.07451 .215686 .356863 rgb
f
2887.31 1535.02 mo
2887.31 1535.02 2997.6 1453.16 3012.71 1417.88 cv
3027.83 1382.6 2996.67 1386.58 2996.67 1386.58 cv
2996.67 1386.58 3041.2 1323.48 3029.38 1302.63 cv
3017.56 1281.78 2992.96 1308.41 2992.96 1308.41 cv
2992.96 1308.41 3013.62 1223.04 2995.66 1218.29 cv
2962.2 1209.45 2934.75 1301.32 2934.75 1301.32 cv
2934.75 1301.32 2937.21 1263.18 2916.27 1268.32 cv
2884.68 1276.06 2901.39 1358.18 2901.39 1358.18 cv
2901.39 1358.18 2891.32 1343.62 2874 1357.47 cv
2842.93 1382.32 2887.31 1535.02 2887.31 1535.02 cv
cp
.52549 .694118 .94902 rgb
f
2869.33 1359.59 mo
2886.65 1345.74 2901.39 1358.18 2901.39 1358.18 cv
2901.39 1358.18 2884.68 1276.06 2916.27 1268.32 cv
2937.21 1263.18 2934.75 1301.32 2934.75 1301.32 cv
2934.75 1301.32 2962.2 1209.45 2995.66 1218.29 cv
2886.49 1534.76 li
2881.61 1515 2840.3 1382.81 2869.33 1359.59 cv
cp
.607843 .756863 .976471 rgb
f
2887.46 1532.18 mo
2887.46 1532.18 3000.48 1532.06 3023.81 1512.47 cv
3047.14 1492.88 3018.52 1491.36 3018.52 1491.36 cv
3018.52 1491.36 3072.54 1462.68 3071.75 1443.57 cv
3070.96 1424.45 3052.65 1428.3 3052.65 1428.3 cv
3052.65 1428.3 3089.98 1394.85 3082.32 1378.64 cv
3070.54 1353.73 3017.14 1400.98 3017.14 1400.98 cv
3017.14 1400.98 3021.23 1382.03 3004.67 1378.07 cv
2979.69 1372.1 2954.36 1443.11 2954.36 1443.11 cv
2954.36 1443.11 2966.3 1411.12 2949.14 1414.67 cv
2918.36 1421.05 2887.46 1532.18 2887.46 1532.18 cv
cp
f
2882.76 1538.47 mo
2882.76 1538.47 2782.45 1452.87 2770.21 1418.38 cv
2757.97 1383.9 2787.37 1389.58 2787.37 1389.58 cv
2787.37 1389.58 2748.83 1326.84 2761.34 1307.72 cv
2773.85 1288.6 2795.64 1315.43 2795.64 1315.43 cv
2795.64 1315.43 2781.16 1232.95 2798.54 1229.53 cv
2830.91 1223.14 2851.46 1312.21 2851.46 1312.21 cv
2851.46 1312.21 2851.43 1275.78 2871.04 1281.93 cv
2900.62 1291.22 2879.74 1368.33 2879.74 1368.33 cv
2879.74 1368.33 2890.66 1339.51 2906.3 1353.74 cv
2934.36 1379.27 2882.76 1538.47 2882.76 1538.47 cv
cp
f
2915.91 1337.06 mo
2897.63 1326.43 2886.54 1345.69 2886.54 1345.69 cv
2886.54 1345.69 2902.24 1278.16 2872.66 1268.87 cv
2853.05 1262.71 2849.07 1303.03 2849.07 1303.03 cv
2849.07 1303.03 2830.91 1223.14 2798.54 1229.53 cv
2880.14 1555.72 li
2885.98 1537.21 2948.95 1356.26 2915.91 1337.06 cv
cp
.52549 .694118 .94902 rgb
f
2872.66 1526.18 mo
2872.66 1526.18 2762.46 1526.22 2747.14 1524.44 cv
2731.81 1522.66 2748.74 1508.98 2748.74 1508.98 cv
2748.74 1508.98 2714.45 1510.23 2709.23 1501.89 cv
2704 1493.55 2718 1490.26 2718 1490.26 cv
2718 1490.26 2683.86 1480.36 2685.49 1473.1 cv
2688.52 1459.58 2726.24 1468.39 2726.24 1468.39 cv
2726.24 1468.39 2712.23 1461.59 2717.92 1455.27 cv
2726.51 1445.74 2763.18 1471.66 2763.18 1471.66 cv
2763.18 1471.66 2750.59 1447.68 2757.53 1442.32 cv
2786.61 1419.87 2872.66 1526.18 2872.66 1526.18 cv
cp
f
2793.11 1650.22 mo
2976.52 1650.22 li
2999.88 1628.89 3014.11 1599.5 3013.59 1567.27 cv
3013.33 1550.99 3007.09 1536.12 3000.1 1522.18 cv
2766.52 1525.52 li
2759.98 1539.68 2756.48 1555.23 2756.74 1571.51 cv
2757.24 1602.22 2771.03 1629.9 2793.11 1650.22 cv
cp
.235294 .560784 .486275 rgb
f
2361.42 1438.9 mo
2347.17 1438.9 li
2347.17 1391.03 li
2347.17 1389.62 2346.02 1388.47 2344.61 1388.47 cv
2266.79 1388.47 li
2265.38 1388.47 2264.24 1389.62 2264.24 1391.03 cv
2264.24 1438.9 li
2249.99 1438.9 li
2249.99 1391.03 li
2249.99 1381.76 2257.53 1374.22 2266.79 1374.22 cv
2344.61 1374.22 li
2353.88 1374.22 2361.42 1381.76 2361.42 1391.03 cv
2361.42 1438.9 li
cp
.717647 .341176 .258824 rgb
f
2145.32 1554.31 mo
2159.58 1650.22 li
2456.63 1650.22 li
2471.85 1554.31 li
2145.32 1554.31 li
cp
.968627 .8 .498039 rgb
f
2476.96 1555.4 mo
2140.53 1555.4 li
2157.52 1441.13 li
2158.81 1432.47 2166.24 1426.07 2174.99 1426.07 cv
2441.37 1426.07 li
2450.05 1426.07 2457.45 1432.38 2458.8 1440.96 cv
2476.96 1555.4 li
cp
f
2311.73 1534.1 mo
2311.73 1534.1 li
2306.54 1534.1 2302.33 1529.89 2302.33 1524.7 cv
2302.33 1456.77 li
2302.33 1451.58 2306.54 1447.37 2311.73 1447.37 cv
2311.73 1447.37 li
2316.93 1447.37 2321.13 1451.58 2321.13 1456.77 cv
2321.13 1524.7 li
2321.13 1529.89 2316.93 1534.1 2311.73 1534.1 cv
cp
.094118 .27451 .333333 rgb
f
2266.45 1534.1 mo
2266.45 1534.1 li
2261.25 1534.1 2257.05 1529.89 2257.05 1524.7 cv
2257.05 1456.77 li
2257.05 1451.58 2261.25 1447.37 2266.45 1447.37 cv
2266.45 1447.37 li
2271.64 1447.37 2275.85 1451.58 2275.85 1456.77 cv
2275.85 1524.7 li
2275.85 1529.89 2271.64 1534.1 2266.45 1534.1 cv
cp
f
2222.44 1534.1 mo
2222.44 1534.1 li
2217.25 1534.1 2213.04 1529.89 2213.04 1524.7 cv
2213.04 1456.77 li
2213.04 1451.58 2217.25 1447.37 2222.44 1447.37 cv
2222.44 1447.37 li
2227.63 1447.37 2231.84 1451.58 2231.84 1456.77 cv
2231.84 1524.7 li
2231.84 1529.89 2227.63 1534.1 2222.44 1534.1 cv
cp
f
2395.05 1534.1 mo
2395.05 1534.1 li
2389.86 1534.1 2385.65 1529.89 2385.65 1524.7 cv
2385.65 1456.77 li
2385.65 1451.58 2389.86 1447.37 2395.05 1447.37 cv
2395.05 1447.37 li
2400.24 1447.37 2404.45 1451.58 2404.45 1456.77 cv
2404.45 1524.7 li
2404.45 1529.89 2400.24 1534.1 2395.05 1534.1 cv
cp
f
2351.04 1534.1 mo
2351.04 1534.1 li
2345.85 1534.1 2341.64 1529.89 2341.64 1524.7 cv
2341.64 1456.77 li
2341.64 1451.58 2345.85 1447.37 2351.04 1447.37 cv
2351.04 1447.37 li
2356.23 1447.37 2360.44 1451.58 2360.44 1456.77 cv
2360.44 1524.7 li
2360.44 1529.89 2356.23 1534.1 2351.04 1534.1 cv
cp
f
2483.46 1571.4 mo
2134.45 1571.4 li
2134.45 1547.05 li
2483.46 1547.05 li
2483.46 1571.4 li
cp
.956863 .454902 .345098 rgb
f
787.474 1264.33 mo
780.441 1322.32 li
1443.95 1322.32 li
1435.28 1264.33 li
787.474 1264.33 li
cp
.607843 .756863 .976471 rgb
f
746.368 1597.82 mo
746.368 1597.82 744.683 1627.59 744.672 1627.65 cv
744.053 1631.43 741.614 1640.77 741.614 1644.21 cv
741.614 1657.12 799.053 1633.25 786.18 1627.53 cv
785.014 1627.01 778.91 1623.09 778.527 1618.7 cv
777.937 1611.93 776.439 1598.24 776.439 1598.24 cv
746.368 1597.82 li
cp
.968627 .643137 .568627 rgb
f
786.037 1627.41 mo
786.037 1627.41 772.552 1631.36 765.645 1632.34 cv
758.738 1633.33 749.632 1625.02 744.747 1627.26 cv
739.37 1629.74 739.581 1651.98 739.581 1651.98 cv
739.581 1651.98 811.897 1658.32 832.231 1651.76 cv
840.288 1649.17 813.606 1636.61 786.037 1627.41 cv
cp
.094118 .27451 .333333 rgb
f
654.053 1596.03 mo
654.053 1596.03 652.368 1625.8 652.358 1625.86 cv
651.739 1629.64 649.299 1638.98 649.299 1642.42 cv
649.299 1655.33 706.737 1631.46 693.864 1625.74 cv
692.699 1625.22 684.786 1618.38 684.402 1613.98 cv
683.812 1607.21 684.125 1596.44 684.125 1596.44 cv
654.053 1596.03 li
cp
.968627 .643137 .568627 rgb
f
693.722 1625.61 mo
693.722 1625.61 680.238 1629.56 673.331 1630.55 cv
666.424 1631.54 657.318 1623.22 652.432 1625.47 cv
647.056 1627.94 646.841 1650.19 646.841 1650.19 cv
646.841 1650.19 718.642 1653.13 739.917 1649.97 cv
748.289 1648.73 721.292 1634.81 693.722 1625.61 cv
cp
.094118 .27451 .333333 rgb
f
667.06 1126.4 mo
667.06 1126.4 657.326 1176.63 661.292 1214.71 cv
665.259 1252.79 665.57 1388.07 665.57 1388.07 cv
650.433 1604.52 li
686.352 1605.35 li
686.352 1605.35 728.942 1389.01 728.149 1394.57 cv
727.356 1400.12 742.43 1242.24 742.43 1242.24 cv
691.654 1121.65 li
667.06 1126.4 li
cp
.0941176 .27451 .333333 rgb
f
675.058 1119.12 mo
675.058 1119.12 645.048 1171.04 652.982 1190.88 cv
660.916 1210.71 721.03 1405.32 721.824 1421.19 cv
722.618 1437.05 742.609 1612.44 742.609 1612.44 cv
784.374 1611.18 li
793.409 1416.19 li
774.489 1171.12 li
756.121 1109.16 li
675.058 1119.12 li
cp
.207843 .32549 .537255 rgb
f
948.412 943.758 mo
933.974 927.693 902.542 904.297 902.542 904.297 cv
902.542 904.297 883.818 888.35 876.185 885.726 cv
864.951 881.863 845.708 871.56 817.875 913.621 cv
797.958 943.719 685.806 1083.92 685.806 1083.92 cv
685.806 1083.92 657.432 1108.3 649.013 1139.57 cv
644.561 1156.1 633.391 1236.81 623.847 1309.25 cv
647.688 1315.39 672.29 1317.31 697.311 1318.81 cv
741.551 1321.53 785.039 1319.98 828.746 1314.02 cv
826.87 1241.09 824.813 1159.98 824.652 1148.99 cv
828.341 1118.29 856.65 1080.4 866.232 1069.58 cv
887.649 1045.39 962.083 958.969 948.412 943.758 cv
cp
.313726 .74902 .647059 rgb
f
1050.31 1164.47 mo
1050.94 1161.05 1019.06 1152.3 1015.73 1151.23 cv
1017.75 1151.53 1031.05 1154.8 1032.37 1155.07 cv
1032.37 1155.07 1052.84 1158.22 1053.57 1156.09 cv
1055.02 1151.85 1036.88 1148.83 1032.38 1148.77 cv
1023.99 1145.23 1022.55 1145.58 1015.87 1142.42 cv
1031.84 1143.76 1050.7 1149.74 1051.59 1145.03 cv
1052.59 1139.74 1025.17 1136.11 1009.29 1130.21 cv
1008.06 1129.75 1008.4 1127.93 1009.71 1127.95 cv
1015.41 1128.03 1025.92 1130.84 1026.75 1126.35 cv
1027.43 1122.63 1007.63 1118.07 1004.24 1117.77 cv
998.871 1117.3 988.043 1116.7 982.653 1117.6 cv
981.732 1117.75 979.357 1119.11 978.973 1119.17 cv
976.689 1118.59 966.739 1113.07 951.188 1104.82 cv
929.131 1127.92 li
959.037 1138.02 966.506 1140.28 969.911 1141.52 cv
971.323 1142.54 974.153 1147.33 979.859 1151.97 cv
986.354 1157.25 994.474 1159.46 996.338 1160.55 cv
1001.12 1163.52 1031.77 1172.91 1032.79 1167.37 cv
1033.03 1166.05 1011.89 1159.38 1009.75 1157.61 cv
1010.99 1157.91 1049.42 1169.35 1050.31 1164.47 cv
cp
.27451 .431373 .713726 rgb
f
951.188 1104.82 mo
929.131 1127.92 li
951.523 1135.48 961.336 1138.65 966.283 1140.28 cv
971.033 1133.7 973.711 1125.72 975.443 1117.64 cv
970.855 1115.38 962.507 1110.83 951.188 1104.82 cv
cp
.968627 .643137 .568627 rgb
f
942.13 877.923 mo
900.162 902.422 li
900.162 902.422 898.981 938.142 912.701 947.42 cv
924.213 955.205 932.975 936.521 932.975 936.521 cv
932.975 936.521 948.58 914.958 960.435 908.24 cv
972.289 901.522 942.13 877.923 942.13 877.923 cv
cp
.968627 .643137 .568627 rgb
f
935.088 893.645 mo
936.667 901.097 940.321 911.873 945.98 920.747 cv
950.604 915.759 955.801 910.866 960.435 908.24 cv
965.905 905.14 962.423 898.445 957.091 892.133 cv
949.562 884.315 942.13 877.923 942.13 877.923 cv
934.065 882.63 li
933.545 885.681 934.562 891.163 935.088 893.645 cv
cp
.956863 .454902 .345098 rgb
f
963.989 816.524 mo
963.285 815.654 928.785 858.476 933.04 878.561 cv
937.294 898.646 958.148 916.975 972.644 911.935 cv
988.677 906.36 1018.49 855.949 1007.8 831.473 cv
997.104 806.998 963.989 816.524 963.989 816.524 cv
cp
.968627 .643137 .568627 rgb
f
1001.76 812.33 mo
986.726 803.987 984.932 799.553 979.245 801.212 cv
972.23 798.024 961.153 796.242 942.824 805.811 cv
920.287 817.577 916.193 843.221 923.249 861.278 cv
930.304 879.335 922.225 889.543 922.225 889.543 cv
934.18 882.581 li
934.18 882.581 941.162 871.712 942.074 863.05 cv
942.986 854.388 955.66 855.922 961.846 851.994 cv
966.609 848.968 972.689 839.139 980.396 834.039 cv
980.396 834.039 999.803 831.664 1009.35 837.005 cv
1025.62 846.108 1023.3 824.277 1001.76 812.33 cv
cp
.07451 .215686 .356863 rgb
f
881.982 891.06 mo
876.268 879.542 850.341 878.652 838.405 888.753 cv
797.876 923.049 822.306 1079.17 854.014 1098.48 cv
884.435 1117 957.738 1145.11 957.738 1145.11 cv
973.799 1111.45 li
973.799 1111.45 901.807 1057.51 895.507 1051.21 cv
888.746 1044.45 896.809 920.945 881.982 891.06 cv
cp
.588235 .85098 .788235 rgb
f
961.856 856.408 mo
939.965 871.08 li
934.065 882.63 li
934.065 882.63 941.121 911.974 955.179 916.191 cv
969.236 920.408 990.724 905.928 993.836 895.457 cv
996.947 884.986 987.159 884.923 979.427 881.755 cv
971.696 878.588 961.856 856.408 961.856 856.408 cv
cp
.607843 .756863 .976471 rgb
f
960.277 859.173 mo
960.277 859.173 li
960.416 856.916 959.844 854.647 958.539 852.8 cv
957.572 851.431 956.31 850.297 954.828 850.297 cv
951.785 850.297 951.089 850.676 951.061 850.691 cv
951.196 850.615 948.67 849.759 948.67 849.759 cv
948.687 847.757 951.792 847.487 954.828 847.487 cv
958.146 847.487 960.636 850.306 962.178 853.47 cv
962.936 855.024 963.644 858.244 963.538 859.971 cv
960.277 859.173 li
cp
f
945.372 870.368 mo
945.372 870.368 li
943.714 868.829 942.564 866.793 942.235 864.555 cv
941.991 862.897 942.123 861.206 943.197 860.183 cv
945.399 858.084 946.165 857.878 946.195 857.87 cv
946.045 857.908 947.283 855.545 947.283 855.545 cv
945.89 854.107 943.455 856.054 941.258 858.147 cv
938.854 860.437 938.997 864.196 940.062 867.549 cv
940.586 869.197 940.595 869.626 939.965 871.08 cv
945.372 870.368 li
cp
f
957.088 857.793 mo
953.746 863.542 946.647 866.626 943.306 864.685 cv
939.964 862.743 941.645 856.509 944.987 850.762 cv
948.329 845.013 953.747 841.927 957.089 843.869 cv
960.43 845.811 960.43 852.044 957.088 857.793 cv
cp
.968627 .643137 .568627 rgb
f
1328.75 780.188 mo
1169.2 780.188 li
1169.2 775.267 li
1328.75 775.267 li
1328.75 780.188 li
cp
.094118 .27451 .333333 rgb
f
1169.43 816.808 mo
1163.75 816.808 1159.13 812.183 1159.13 806.499 cv
1159.13 805.725 li
1159.13 804.56 1160.07 803.616 1161.23 803.616 cv
1162.4 803.616 1163.34 804.56 1163.34 805.725 cv
1163.34 806.499 li
1163.34 809.858 1166.07 812.591 1169.43 812.591 cv
1172.79 812.591 1175.53 809.858 1175.53 806.499 cv
1175.53 777.728 li
1175.53 776.563 1176.47 775.619 1177.63 775.619 cv
1178.8 775.619 1179.74 776.563 1179.74 777.728 cv
1179.74 806.499 li
1179.74 812.183 1175.12 816.808 1169.43 816.808 cv
cp
f
1313.99 819.261 mo
1308.3 819.261 1303.68 814.637 1303.68 808.953 cv
1303.68 808.178 li
1303.68 807.014 1304.62 806.07 1305.79 806.07 cv
1306.95 806.07 1307.9 807.014 1307.9 808.178 cv
1307.9 808.953 li
1307.9 812.312 1310.63 815.044 1313.99 815.044 cv
1317.35 815.044 1320.08 812.312 1320.08 808.953 cv
1320.08 780.181 li
1320.08 779.017 1321.02 778.073 1322.19 778.073 cv
1323.35 778.073 1324.3 779.017 1324.3 780.181 cv
1324.3 808.953 li
1324.3 814.637 1319.67 819.261 1313.99 819.261 cv
cp
f
1308.23 487.634 mo
1308.23 569.975 1241.48 636.726 1159.14 636.726 cv
1076.8 636.726 1010.05 569.975 1010.05 487.634 cv
1010.05 405.294 1076.8 338.543 1159.14 338.543 cv
1241.48 338.543 1308.23 405.294 1308.23 487.634 cv
cp
.607843 .756863 .976471 rgb
f
1159.14 619.035 mo
1086.68 619.035 1027.74 560.09 1027.74 487.634 cv
1027.74 415.179 1086.68 356.234 1159.14 356.234 cv
1231.59 356.234 1290.54 415.179 1290.54 487.634 cv
1290.54 560.09 1231.59 619.035 1159.14 619.035 cv
cp
1 1 1 rgb
f
2584.93 488.79 mo
2584.93 571.131 2518.18 637.882 2435.84 637.882 cv
2353.5 637.882 2286.75 571.131 2286.75 488.79 cv
2286.75 406.45 2353.5 339.699 2435.84 339.699 cv
2518.18 339.699 2584.93 406.45 2584.93 488.79 cv
cp
.607843 .756863 .976471 rgb
f
2435.84 620.191 mo
2363.39 620.191 2304.44 561.246 2304.44 488.79 cv
2304.44 416.335 2363.39 357.39 2435.84 357.39 cv
2508.29 357.39 2567.24 416.335 2567.24 488.79 cv
2567.24 561.246 2508.29 620.191 2435.84 620.191 cv
cp
1 1 1 rgb
f
864.297 633.961 mo
864.297 716.302 797.547 783.052 715.206 783.052 cv
632.865 783.052 566.115 716.302 566.115 633.961 cv
566.115 551.62 632.865 484.87 715.206 484.87 cv
797.547 484.87 864.297 551.62 864.297 633.961 cv
cp
.607843 .756863 .976471 rgb
f
715.206 765.361 mo
642.753 765.361 583.807 706.416 583.807 633.961 cv
583.807 561.506 642.753 502.561 715.206 502.561 cv
787.66 502.561 846.605 561.506 846.605 633.961 cv
846.605 706.416 787.66 765.361 715.206 765.361 cv
cp
1 1 1 rgb
f
514.836 899.334 mo
514.836 954.065 470.468 998.432 415.738 998.432 cv
361.008 998.432 316.64 954.065 316.64 899.334 cv
316.64 844.604 361.008 800.236 415.738 800.236 cv
470.468 800.236 514.836 844.604 514.836 899.334 cv
cp
.607843 .756863 .976471 rgb
f
415.738 986.674 mo
367.58 986.674 328.4 947.494 328.4 899.334 cv
328.4 851.175 367.58 811.995 415.738 811.995 cv
463.897 811.995 503.077 851.175 503.077 899.334 cv
503.077 947.494 463.897 986.674 415.738 986.674 cv
cp
1 1 1 rgb
f
934.065 811.841 mo
934.065 811.841 984.846 856.408 1008.53 856.408 cv
1021.13 839.955 li
1026.44 833.019 1025.24 823.128 1018.44 817.647 cv
1005.19 806.977 981.523 792.147 952.287 792.147 cv
934.065 811.841 li
cp
.313726 .74902 .647059 rgb
f
1466.31 994.387 mo
1440.63 994.387 li
1440.63 977.114 li
1466.31 977.114 li
1466.31 994.387 li
cp
1 1 1 rgb
f
1142.5 930.882 mo
1142.5 837.977 li
1195.9 837.977 li
1195.9 930.882 li
1142.5 930.882 li
cp
.717647 .341176 .258824 rgb
f
1198.4 844.765 mo
1140 844.765 li
1140 829.691 li
1140 825.061 1143.75 821.306 1148.38 821.306 cv
1190.02 821.306 li
1194.65 821.306 1198.4 825.061 1198.4 829.691 cv
1198.4 844.765 li
cp
.607843 .756863 .976471 rgb
f
1177.9 826.42 mo
1159.13 826.42 li
1159.13 819.216 li
1159.13 814.031 1163.33 809.83 1168.51 809.83 cv
1168.51 809.83 li
1173.7 809.83 1177.9 814.031 1177.9 819.216 cv
1177.9 826.42 li
cp
f
1165.7 810.976 mo
1164.2 809.667 1163.34 807.747 1163.34 805.752 cv
1163.34 805.725 li
1163.34 804.56 1162.4 803.616 1161.23 803.616 cv
1160.07 803.616 1159.13 804.56 1159.13 805.725 cv
1159.13 805.934 li
1159.13 807.883 1159.79 810.818 1160.97 812.371 cv
1164.07 816.474 1166.63 816.645 1168.93 816.792 cv
1170.11 816.867 1171.08 815.861 1171.08 814.679 cv
1171.08 814.679 li
1171.08 813.558 1170.21 812.662 1169.09 812.577 cv
1168.08 812.501 1166.97 812.073 1165.7 810.976 cv
cp
.094118 .27451 .333333 rgb
f
1348.08 940.048 mo
1279.9 940.048 li
1279.9 834.871 li
1348.08 834.871 li
1348.08 940.048 li
cp
.607843 .756863 .976471 rgb
f
1287.29 933.912 mo
1287.29 841.007 li
1340.69 841.007 li
1340.69 933.912 li
1287.29 933.912 li
cp
.717647 .341176 .258824 rgb
f
1343.19 847.796 mo
1284.79 847.796 li
1284.79 832.721 li
1284.79 828.09 1288.54 824.337 1293.17 824.337 cv
1334.81 824.337 li
1339.44 824.337 1343.19 828.09 1343.19 832.721 cv
1343.19 847.796 li
cp
.607843 .756863 .976471 rgb
f
1322.69 829.451 mo
1303.92 829.451 li
1303.92 822.247 li
1303.92 817.063 1308.12 812.859 1313.3 812.859 cv
1313.3 812.859 li
1318.49 812.859 1322.69 817.063 1322.69 822.247 cv
1322.69 829.451 li
cp
f
1310.49 814.006 mo
1308.99 812.697 1308.13 810.777 1308.13 808.782 cv
1308.13 808.755 li
1308.13 807.59 1307.19 806.646 1306.02 806.646 cv
1304.86 806.646 1303.92 807.59 1303.92 808.755 cv
1303.92 808.964 li
1303.92 810.913 1304.58 813.849 1305.76 815.401 cv
1308.86 819.504 1311.42 819.675 1313.72 819.822 cv
1314.9 819.898 1315.87 818.892 1315.87 817.709 cv
1315.87 817.709 li
1315.87 816.587 1315 815.691 1313.88 815.608 cv
1312.86 815.532 1311.76 815.104 1310.49 814.006 cv
cp
.094118 .27451 .333333 rgb
f
2459.39 447.534 mo
2452.34 447.534 li
2452.34 423.851 li
2452.34 423.154 2451.77 422.587 2451.08 422.587 cv
2412.57 422.587 li
2411.88 422.587 2411.31 423.154 2411.31 423.851 cv
2411.31 447.534 li
2404.26 447.534 li
2404.26 423.851 li
2404.26 419.267 2407.99 415.537 2412.57 415.537 cv
2451.08 415.537 li
2455.66 415.537 2459.39 419.267 2459.39 423.851 cv
2459.39 447.534 li
cp
.717647 .341176 .258824 rgb
f
2519.81 551.814 mo
2351.87 551.814 li
2344.22 551.814 2338.02 545.613 2338.02 537.962 cv
2338.02 446.572 li
2533.66 446.572 li
2533.66 537.962 li
2533.66 545.613 2527.46 551.814 2519.81 551.814 cv
cp
.607843 .756863 .976471 rgb
f
2540.64 473.904 mo
2331.05 473.904 li
2331.05 451.954 li
2331.05 441.721 2339.34 433.424 2349.57 433.424 cv
2522.11 433.424 li
2532.34 433.424 2540.64 441.721 2540.64 451.954 cv
2540.64 473.904 li
cp
f
2533.66 479.9 mo
2338.02 479.9 li
2338.02 473.904 li
2533.66 473.904 li
2533.66 479.9 li
cp
.52549 .694118 .94902 rgb
f
2525.03 552.776 mo
2503.5 552.776 li
2495.85 552.776 2489.65 546.575 2489.65 538.924 cv
2489.65 494.834 li
2538.88 494.834 li
2538.88 538.924 li
2538.88 546.575 2532.68 552.776 2525.03 552.776 cv
cp
.968627 .8 .498039 rgb
f
2540.64 509.882 mo
2487.9 509.882 li
2487.9 506.124 li
2487.9 495.892 2496.19 487.595 2506.43 487.595 cv
2522.11 487.595 li
2532.34 487.595 2540.64 495.892 2540.64 506.124 cv
2540.64 509.882 li
cp
.980392 .878431 .698039 rgb
f
2538.88 513.184 mo
2489.65 513.184 li
2489.65 509.882 li
2538.88 509.882 li
2538.88 513.184 li
cp
.717647 .341176 .258824 rgb
f
2459.39 508.087 mo
2459.39 523.311 2447.05 535.652 2431.83 535.652 cv
2416.6 535.652 2404.26 523.311 2404.26 508.087 cv
2404.26 492.863 2416.6 480.522 2431.83 480.522 cv
2447.05 480.522 2459.39 492.863 2459.39 508.087 cv
cp
1 1 1 rgb
f
2439.1 528.327 mo
2424.03 528.327 li
2424.03 487.397 li
2439.1 487.397 li
2439.1 528.327 li
cp
.956863 .454902 .345098 rgb
f
2452.03 500.329 mo
2452.03 515.395 li
2411.1 515.395 li
2411.1 500.329 li
2452.03 500.329 li
cp
f
2529.33 530.462 mo
2529.33 538.784 2522.59 545.529 2514.27 545.529 cv
2505.95 545.529 2499.2 538.784 2499.2 530.462 cv
2499.2 522.142 2505.95 515.395 2514.27 515.395 cv
2522.59 515.395 2529.33 522.142 2529.33 530.462 cv
cp
1 1 1 rgb
f
2518.24 541.525 mo
2510.01 541.525 li
2510.01 519.154 li
2518.24 519.154 li
2518.24 541.525 li
cp
.956863 .454902 .345098 rgb
f
2525.31 526.222 mo
2525.31 534.458 li
2502.94 534.458 li
2502.94 526.222 li
2525.31 526.222 li
cp
f
1310.35 940.191 mo
1301.83 963.649 1299.09 988.705 1302.46 1013.45 cv
1308.92 1060.83 1341.55 1090.39 1340.3 1121.91 cv
1339.05 1153.36 1305.07 1173.5 1294.22 1203.48 cv
1289.45 1216.69 1291.1 1230.52 1290.78 1244.26 cv
1290.44 1259.16 1284.42 1280.23 1266 1280.25 cv
1262.49 1280.25 1262.48 1285.71 1266 1285.71 cv
1288.41 1285.68 1296.06 1261.07 1296.25 1242.59 cv
1296.63 1206.07 1295.84 1203.21 1322.58 1169.81 cv
1335.77 1153.33 1348.05 1135.59 1345.35 1113.41 cv
1342.13 1086.86 1323.09 1065.41 1314.52 1040.65 cv
1303.39 1008.54 1304.04 973.499 1315.61 941.641 cv
1316.81 938.336 1311.54 936.912 1310.35 940.191 cv
1310.35 940.191 li
cp
.607843 .756863 .976471 rgb
f
425.705 878.452 mo
409.297 878.625 li
407.572 878.644 406.188 880.057 406.207 881.782 cv
406.838 941.48 li
406.856 943.205 408.27 944.588 409.994 944.57 cv
426.401 944.397 li
428.126 944.379 429.511 942.965 429.492 941.24 cv
428.861 881.542 li
428.843 879.817 427.43 878.433 425.705 878.452 cv
cp
f
416.974 875.096 mo
418.349 875.082 li
422.218 875.04 425.388 878.144 425.429 882.014 cv
425.429 882.014 li
410.042 882.176 li
410.042 882.176 li
410.001 878.306 413.105 875.137 416.974 875.096 cv
cp
f
418.498 839.95 mo
418.879 876.054 li
416.063 876.084 li
415.738 845.36 li
418.498 839.95 li
cp
f
408.964 908.646 mo
426.664 908.459 li
427.014 941.546 li
409.314 941.733 li
408.964 908.646 li
cp
1 1 1 rgb
f
420.988 936.044 mo
427.332 935.978 li
427.353 937.988 li
421.009 938.056 li
420.988 936.044 li
cp
.607843 .756863 .976471 rgb
f
420.944 931.854 mo
427.289 931.787 li
427.309 933.798 li
420.966 933.865 li
420.944 931.854 li
cp
f
420.9 927.664 mo
427.244 927.597 li
427.265 929.607 li
420.921 929.675 li
420.9 927.664 li
cp
f
420.855 923.473 mo
427.2 923.406 li
427.221 925.417 li
420.877 925.485 li
420.855 923.473 li
cp
f
420.811 919.283 mo
427.155 919.215 li
427.177 921.227 li
420.833 921.294 li
420.811 919.283 li
cp
f
420.767 915.092 mo
427.111 915.026 li
427.132 917.037 li
420.788 917.104 li
420.767 915.092 li
cp
f
420.722 910.902 mo
427.066 910.835 li
427.088 912.846 li
420.744 912.914 li
420.722 910.902 li
cp
f
411.043 943.524 mo
425.122 943.376 li
425.122 943.376 li
425.151 946.153 422.924 948.429 420.147 948.458 cv
416.125 948.5 li
413.348 948.53 411.072 946.303 411.043 943.524 cv
411.043 943.524 li
cp
f
416.809 946.683 mo
420.229 946.646 li
420.422 964.949 li
417.002 964.986 li
416.809 946.683 li
cp
f
409.246 963.861 mo
428.22 963.66 li
429.108 963.651 429.836 964.363 429.846 965.252 cv
429.846 965.252 li
429.855 966.141 429.143 966.87 428.254 966.879 cv
409.28 967.079 li
408.392 967.088 407.664 966.376 407.654 965.487 cv
407.654 965.487 li
407.645 964.599 408.357 963.871 409.246 963.861 cv
cp
f
416.537 838.763 mo
416.537 838.763 413.179 824.493 418.261 823.247 cv
423.343 822 416.537 838.763 416.537 838.763 cv
cp
f
425.459 832.895 mo
425.459 832.895 432.806 816.756 438.939 819.02 cv
441.171 819.844 441.976 822.907 435.701 824.446 cv
429.427 825.985 425.459 832.895 425.459 832.895 cv
cp
f
408.146 839.453 mo
408.146 839.453 399.89 822.55 393.935 825.252 cv
391.183 826.501 391.63 829.464 397.904 831.004 cv
404.179 832.543 408.146 839.453 408.146 839.453 cv
cp
f
1112.39 566.571 mo
1145.97 566.571 li
1145.97 553.443 li
1133.48 553.044 1123.58 546.472 1112.39 542.995 cv
1112.39 566.571 li
cp
.956863 .454902 .345098 rgb
f
1132.98 496.905 mo
1125.07 484.574 li
1115.85 492.948 li
1115.85 542.995 li
1124.74 546.472 1132.59 553.044 1142.5 553.443 cv
1142.5 487.189 li
1132.98 496.905 li
cp
.607843 .756863 .976471 rgb
f
1145.85 408.239 mo
1112.5 408.239 li
1112.5 422.807 li
1122.53 417.337 1134.13 416.703 1145.85 413.992 cv
1145.85 408.239 li
cp
.956863 .454902 .345098 rgb
f
1115.85 422.807 mo
1115.85 490.438 li
1125.43 481.736 li
1133.27 493.958 li
1142.5 484.541 li
1142.5 413.992 li
1133.13 416.703 1123.87 417.337 1115.85 422.807 cv
cp
.607843 .756863 .976471 rgb
f
1125.55 566.571 mo
1125.55 570.922 1120.94 574.451 1115.25 574.451 cv
1109.56 574.451 1104.95 570.922 1104.95 566.571 cv
1104.95 562.22 1109.56 558.693 1115.25 558.693 cv
1120.94 558.693 1125.55 562.22 1125.55 566.571 cv
cp
.717647 .341176 .258824 rgb
f
1139.48 568.693 mo
1139.48 573.044 1134.87 576.571 1129.18 576.571 cv
1123.49 576.571 1118.88 573.044 1118.88 568.693 cv
1118.88 564.341 1123.49 560.814 1129.18 560.814 cv
1134.87 560.814 1139.48 564.341 1139.48 568.693 cv
cp
f
1151.75 566.571 mo
1151.75 570.922 1147.14 574.451 1141.45 574.451 cv
1135.76 574.451 1131.15 570.922 1131.15 566.571 cv
1131.15 562.22 1135.76 558.693 1141.45 558.693 cv
1147.14 558.693 1151.75 562.22 1151.75 566.571 cv
cp
f
1150.4 416.418 mo
1114.35 416.418 1085.03 446.598 1085.03 483.693 cv
1085.03 520.789 1114.35 550.968 1150.4 550.968 cv
1186.45 550.968 1215.77 520.789 1215.77 483.693 cv
1215.77 446.598 1186.45 416.418 1150.4 416.418 cv
cp
1150.4 557.193 mo
1110.92 557.193 1078.8 524.222 1078.8 483.693 cv
1078.8 443.165 1110.92 410.193 1150.4 410.193 cv
1189.88 410.193 1222 443.165 1222 483.693 cv
1222 524.222 1189.88 557.193 1150.4 557.193 cv
cp
.52549 .694118 .94902 rgb
f
1198.36 533.923 mo
1209.95 545.057 li
1229.49 515.057 li
1213.93 510.016 li
1198.36 533.923 li
cp
f
1274.39 550.694 mo
1218.92 519.967 li
1208.94 535.105 li
1258.48 573.557 li
1264.55 566.544 1269.9 558.883 1274.39 550.694 cv
cp
.607843 .756863 .976471 rgb
f
2844.44 700.913 mo
2782.15 694.721 2736.51 639.009 2742.7 576.721 cv
2748.89 514.433 2804.61 468.793 2866.89 474.985 cv
2929.18 481.175 2974.82 536.888 2968.63 599.176 cv
2962.44 661.465 2906.73 707.103 2844.44 700.913 cv
cp
.968627 .8 .498039 rgb
f
2844.73 697.972 mo
2784.06 691.941 2739.61 637.68 2745.64 577.014 cv
2751.67 516.346 2805.93 471.896 2866.6 477.925 cv
2927.27 483.955 2971.72 538.217 2965.69 598.884 cv
2959.66 659.551 2905.4 704.001 2844.73 697.972 cv
cp
f
2945.46 597.397 mo
2940.53 647.017 2896.3 683.244 2846.68 678.312 cv
2797.06 673.38 2760.84 629.158 2765.77 579.538 cv
2770.7 529.918 2814.92 493.691 2864.54 498.623 cv
2914.16 503.555 2950.39 547.778 2945.46 597.397 cv
cp
1 1 1 rgb
f
2847.2 673.164 mo
2800.24 668.497 2765.83 626.495 2770.5 579.535 cv
2775.16 532.575 2817.16 498.167 2864.13 502.835 cv
2911.08 507.502 2945.49 549.504 2940.83 596.464 cv
2936.16 643.424 2894.16 677.832 2847.2 673.164 cv
cp
f
2782.41 576.131 mo
2767.16 574.616 li
2764.66 574.366 2762.41 576.202 2762.17 578.708 cv
2761.92 581.213 2763.75 583.454 2766.26 583.702 cv
2781.51 585.218 li
2784.01 585.467 2786.25 583.631 2786.5 581.126 cv
2786.75 578.621 2784.91 576.38 2782.41 576.131 cv
cp
.968627 .8 .498039 rgb
f
2848.79 657.159 mo
2846.28 656.91 2844.04 658.745 2843.79 661.251 cv
2842.28 676.5 li
2842.03 679.005 2843.86 681.246 2846.37 681.494 cv
2848.87 681.744 2851.12 679.909 2851.36 677.402 cv
2852.88 662.154 li
2853.13 659.648 2851.29 657.408 2848.79 657.159 cv
cp
f
2945.06 592.298 mo
2929.82 590.782 li
2927.31 590.533 2925.07 592.368 2924.82 594.874 cv
2924.57 597.379 2926.41 599.62 2928.91 599.869 cv
2944.16 601.384 li
2946.67 601.634 2948.91 599.798 2949.15 597.292 cv
2949.41 594.787 2947.57 592.546 2945.06 592.298 cv
cp
f
2864.95 494.505 mo
2862.45 494.256 2860.21 496.091 2859.96 498.597 cv
2858.44 513.846 li
2858.19 516.351 2860.03 518.592 2862.54 518.841 cv
2865.04 519.09 2867.28 517.255 2867.53 514.749 cv
2869.04 499.5 li
2869.29 496.995 2867.46 494.754 2864.95 494.505 cv
cp
f
2864.02 588.669 mo
2863.56 593.245 2859.48 596.585 2854.91 596.131 cv
2850.33 595.677 2846.99 591.598 2847.45 587.022 cv
2847.9 582.446 2851.98 579.105 2856.55 579.56 cv
2861.13 580.015 2864.47 584.093 2864.02 588.669 cv
cp
.980392 .878431 .698039 rgb
f
2895.92 532.192 mo
2858.13 589.539 li
2857.18 590.984 2855.23 591.384 2853.79 590.432 cv
2852.35 589.48 2851.95 587.537 2852.9 586.093 cv
2853.05 585.866 2851.15 588.268 2895.92 532.192 cv
cp
f
2892.54 646.261 mo
2853.23 589.948 li
2852.24 588.529 2852.59 586.576 2854.01 585.586 cv
2855.42 584.595 2857.38 584.943 2858.37 586.362 cv
2858.52 586.585 2856.99 583.934 2892.54 646.261 cv
cp
f
2859.12 588.182 mo
2858.93 590.052 2857.27 591.417 2855.4 591.231 cv
2853.53 591.045 2852.16 589.378 2852.35 587.509 cv
2852.53 585.639 2854.2 584.274 2856.07 584.46 cv
2857.94 584.646 2859.3 586.312 2859.12 588.182 cv
cp
f
681.179 648.72 mo
687.814 648.763 694.449 648.805 701.083 648.847 cv
701.021 656.543 700.852 664.239 700.578 671.933 cv
705.712 672.075 710.847 672.218 715.981 672.36 cv
716.259 664.556 716.43 656.751 716.495 648.945 cv
723.129 648.988 729.765 649.031 736.4 649.073 cv
736.439 644.305 736.439 639.537 736.4 634.768 cv
729.765 634.81 723.129 634.853 716.495 634.896 cv
716.43 627.09 716.259 619.285 715.981 611.481 cv
710.847 611.624 705.712 611.766 700.578 611.909 cv
700.852 619.603 701.021 627.298 701.083 634.994 cv
694.449 635.037 687.814 635.078 681.179 635.121 cv
681.216 639.654 681.216 644.187 681.179 648.72 cv
cp
.607843 .756863 .976471 rgb
f
775.53 650.362 mo
773.739 650.362 772.006 649.404 771.096 647.719 cv
741.962 593.735 li
738.664 587.624 737.966 580.599 739.996 573.958 cv
742.026 567.317 746.533 561.885 752.685 558.662 cv
758.236 555.754 li
760.699 554.464 763.741 555.415 765.03 557.876 cv
766.319 560.338 765.369 563.38 762.907 564.669 cv
757.355 567.577 li
753.605 569.542 750.858 572.853 749.621 576.901 cv
748.383 580.949 748.809 585.23 750.819 588.955 cv
779.954 642.938 li
781.273 645.384 780.361 648.438 777.915 649.758 cv
777.155 650.168 776.337 650.362 775.53 650.362 cv
cp
f
776.092 651.513 mo
777.881 651.513 779.614 650.555 780.524 648.869 cv
809.659 594.886 li
812.957 588.773 813.656 581.75 811.625 575.108 cv
809.595 568.467 805.088 563.035 798.936 559.812 cv
793.384 556.904 li
790.922 555.614 787.881 556.564 786.592 559.027 cv
785.302 561.489 786.252 564.529 788.714 565.819 cv
794.267 568.728 li
798.016 570.691 800.762 574.003 802 578.051 cv
803.237 582.099 802.813 586.38 800.801 590.105 cv
771.667 644.089 li
770.348 646.535 771.26 649.588 773.706 650.908 cv
774.466 651.317 775.285 651.513 776.092 651.513 cv
cp
f
770.924 560.499 mo
770.924 564.151 768.092 567.113 764.598 567.113 cv
761.104 567.113 758.271 564.151 758.271 560.499 cv
758.271 556.847 761.104 553.885 764.598 553.885 cv
768.092 553.885 770.924 556.847 770.924 560.499 cv
cp
f
794.504 560.499 mo
794.504 564.151 791.671 567.113 788.178 567.113 cv
784.684 567.113 781.852 564.151 781.852 560.499 cv
781.852 556.847 784.684 553.885 788.178 553.885 cv
791.671 553.885 794.504 556.847 794.504 560.499 cv
cp
f
722.327 569.413 mo
722.327 577.83 715.503 584.654 707.086 584.654 cv
698.669 584.654 691.845 577.83 691.845 569.413 cv
691.845 560.996 698.669 554.173 707.086 554.173 cv
715.503 554.173 722.327 560.996 722.327 569.413 cv
cp
f
702.214 719.566 mo
681.281 719.566 661.601 711.414 646.8 696.613 cv
631.998 681.811 623.847 662.132 623.847 641.199 cv
623.847 620.267 631.998 600.587 646.8 585.785 cv
661.601 570.984 681.281 562.832 702.214 562.832 cv
702.214 572.896 li
664.551 572.896 633.911 603.537 633.911 641.199 cv
633.911 678.861 664.551 709.502 702.214 709.502 cv
739.875 709.502 770.517 678.861 770.517 641.199 cv
780.581 641.199 li
780.581 662.132 772.43 681.811 757.627 696.613 cv
742.826 711.414 723.146 719.566 702.214 719.566 cv
cp
f
1921.86 506.873 mo
1847.72 506.873 li
1847.72 432.73 li
1847.72 421.684 1838.76 412.73 1827.72 412.73 cv
1767.26 412.73 li
1756.22 412.73 1747.26 421.684 1747.26 432.73 cv
1747.26 506.873 li
1673.12 506.873 li
1662.07 506.873 1653.12 515.828 1653.12 526.873 cv
1653.12 587.332 li
1653.12 598.377 1662.07 607.332 1673.12 607.332 cv
1747.26 607.332 li
1747.26 681.475 li
1747.26 692.521 1756.22 701.475 1767.26 701.475 cv
1827.72 701.475 li
1838.76 701.475 1847.72 692.521 1847.72 681.475 cv
1847.72 607.332 li
1921.86 607.332 li
1932.91 607.332 1941.86 598.377 1941.86 587.332 cv
1941.86 526.873 li
1941.86 515.828 1932.91 506.873 1921.86 506.873 cv
cp
.52549 .694118 .94902 rgb
f
1921.86 515.964 mo
1838.63 515.964 li
1838.63 432.73 li
1838.63 426.714 1833.74 421.821 1827.72 421.821 cv
1767.26 421.821 li
1761.25 421.821 1756.35 426.714 1756.35 432.73 cv
1756.35 515.964 li
1673.12 515.964 li
1667.1 515.964 1662.21 520.857 1662.21 526.873 cv
1662.21 587.331 li
1662.21 593.346 1667.1 598.24 1673.12 598.24 cv
1756.35 598.24 li
1756.35 681.475 li
1756.35 687.49 1761.25 692.384 1767.26 692.384 cv
1827.72 692.384 li
1833.74 692.384 1838.63 687.49 1838.63 681.475 cv
1838.63 598.24 li
1921.86 598.24 li
1927.88 598.24 1932.77 593.346 1932.77 587.331 cv
1932.77 526.873 li
1932.77 520.857 1927.88 515.964 1921.86 515.964 cv
cp
1 1 1 rgb
f
1643.15 435.294 mo
1456.34 435.294 li
1456.34 410.32 li
1643.15 410.32 li
1643.15 435.294 li
cp
.607843 .756863 .976471 rgb
f
1643.15 472.869 mo
1456.34 472.869 li
1456.34 447.896 li
1643.15 447.896 li
1643.15 472.869 li
cp
f
1643.15 510.446 mo
1456.34 510.446 li
1456.34 485.472 li
1643.15 485.472 li
1643.15 510.446 li
cp
f
1643.15 548.021 mo
1456.34 548.021 li
1456.34 523.047 li
1643.15 523.047 li
1643.15 548.021 li
cp
f
1643.15 585.597 mo
1456.34 585.597 li
1456.34 560.623 li
1643.15 560.623 li
1643.15 585.597 li
cp
f
1643.15 623.173 mo
1456.34 623.173 li
1456.34 598.199 li
1643.15 598.199 li
1643.15 623.173 li
cp
f
2155.75 428.992 mo
1968.94 428.992 li
1968.94 404.019 li
2155.75 404.019 li
2155.75 428.992 li
cp
f
2155.75 466.569 mo
1968.94 466.569 li
1968.94 441.595 li
2155.75 441.595 li
2155.75 466.569 li
cp
f
2155.75 504.144 mo
1968.94 504.144 li
1968.94 479.171 li
2155.75 479.171 li
2155.75 504.144 li
cp
f
2155.75 541.72 mo
1968.94 541.72 li
1968.94 516.746 li
2155.75 516.746 li
2155.75 541.72 li
cp
f
2155.75 579.296 mo
1968.94 579.296 li
1968.94 554.322 li
2155.75 554.322 li
2155.75 579.296 li
cp
f
2155.75 616.872 mo
1968.94 616.872 li
1968.94 591.898 li
2155.75 591.898 li
2155.75 616.872 li
cp
f
1643.15 660.749 mo
1456.34 660.749 li
1456.34 635.774 li
1643.15 635.774 li
1643.15 660.749 li
cp
f
1821.67 562.503 mo
1813.59 583.404 li
1813.59 583.404 1795.54 586.729 1792.93 595.042 cv
1760.15 599.079 li
1760.15 599.079 1757.18 608.698 1762.05 613.567 cv
1766.92 618.436 1781.76 618.554 1781.76 618.554 cv
1781.76 618.554 1767.63 625.798 1769.41 627.579 cv
1771.2 629.361 1771.2 629.361 1771.2 629.361 cv
1796.25 630.905 li
1796.25 630.905 1791.98 647.054 1794.12 656.792 cv
1796.25 666.53 1798.63 678.167 1795.54 684.342 cv
1795.54 684.342 1800.77 683.155 1800.77 680.78 cv
1800.77 680.78 1796.02 719.018 1801.71 731.843 cv
1807.41 744.668 1821.67 790.982 1821.67 801.432 cv
1821.67 811.881 1819.05 822.807 1819.05 822.807 cv
1819.05 822.807 1808.84 819.957 1804.8 823.994 cv
1800.77 828.032 1800.77 832.544 1800.77 832.544 cv
1833.06 832.544 li
1833.06 832.544 1840.07 798.226 1842.09 796.207 cv
1844.11 794.188 1839 754.406 1839 754.406 cv
1839 754.406 1854.91 763.193 1864.65 772.932 cv
1874.39 782.669 1877 791.219 1877 791.219 cv
1877 791.219 1875.1 794.782 1878.43 801.907 cv
1881.75 809.031 1905.98 827.082 1905.98 827.082 cv
1880.8 827.082 li
1880.8 827.082 1874.63 826.607 1873.2 832.544 cv
1871.78 838.482 1871.78 838.482 1871.78 838.482 cv
1871.78 838.482 li
1951.1 841.095 li
1953.24 828.982 li
1957.75 825.894 li
1957.75 825.894 1980.08 801.194 1980.08 791.932 cv
1980.08 782.669 1914.17 690.162 1910.73 686.718 cv
1907.29 683.274 1903.37 680.067 1903.37 680.067 cv
1903.37 680.067 1875.82 667.955 1871.07 658.692 cv
1866.32 649.43 1841.62 589.341 1841.62 589.341 cv
1841.62 589.341 1844.58 567.61 1839.48 562.503 cv
1834.37 557.397 1824.52 584.117 1824.52 584.117 cv
1822.38 584.117 li
1821.67 562.503 li
cp
.207843 .32549 .537255 rgb
f
2029.82 807.781 mo
2029.75 807.745 2029.71 807.7 2029.65 807.664 cv
2029.21 807.937 2028.79 808.214 2028.33 808.484 cv
2000.38 824.952 1966.63 774.722 1966.63 774.722 cv
1955.07 793.589 li
1955.07 793.589 1963.14 848.939 2014.5 835.439 cv
2030.93 831.123 2040.38 822.585 2045.67 812.976 cv
2040.57 810.877 2033.47 809.886 2029.82 807.781 cv
cp
f
1732.11 662.287 mo
1732.11 662.287 1721.94 666.909 1721.94 672.455 cv
1721.94 678.001 1721.94 678.001 1721.94 678.001 cv
1721.94 678.001 1706.85 686.011 1703.15 694.946 cv
1699.45 703.88 1699.44 717.567 1697.48 719.536 cv
1695.51 721.504 1672.02 716.205 1655.54 727.605 cv
1639.07 739.004 1632.29 765.793 1632.29 779.049 cv
1632.29 792.306 1631.36 817.57 1628.9 824.041 cv
1626.43 830.511 1618.73 836.673 1622.74 844.991 cv
1626.74 853.31 1760.46 861.628 1778.64 843.451 cv
1796.81 825.272 1770.47 814.335 1765.39 819.418 cv
1760.3 824.502 1767.85 826.813 1767.85 832.975 cv
1767.85 839.137 1681.28 836.673 1681.28 836.673 cv
1735.81 834.207 li
1735.81 834.207 1735.53 831.438 1734.27 828.931 cv
1733.23 826.858 1731.51 824.964 1728.72 824.964 cv
1722.56 824.964 1716.71 823.732 1716.71 823.732 cv
1724.1 814.182 li
1729.65 796.312 li
1729.65 796.312 1757.07 758.415 1757.07 745.166 cv
1757.07 731.917 1748.44 721.81 1748.44 721.81 cv
1754.6 721.81 li
1754.6 721.81 1764.77 711.584 1766.31 710.042 cv
1767.85 708.502 1767.54 707.27 1767.54 707.27 cv
1767.54 707.27 1759.84 684.779 1753.68 682.005 cv
1747.52 679.233 1747.94 680.507 1746.59 679.158 cv
1745.24 677.809 1732.11 662.287 1732.11 662.287 cv
cp
.27451 .431373 .713726 rgb
f
1739.92 662.287 mo
1734.58 671.736 li
1746.59 679.158 li
1739.92 662.287 li
cp
f
1751.03 754.512 mo
1740.58 822.294 li
1740.58 822.294 1747.21 824.349 1747.98 828.508 cv
1748.75 832.667 1747.98 833.283 1747.98 833.283 cv
1733.96 833.283 li
1733.96 779.982 li
1751.03 754.512 li
cp
f
2074.25 1617.68 mo
2073.3 1610.83 2075.45 1599.03 2080.81 1580.58 cv
2070.18 1580.6 2061.24 1575.9 2050.38 1576.06 cv
2047.41 1593.42 2042.82 1621.91 2042.82 1621.91 cv
2042.33 1644.43 li
2117.98 1645 li
2117.98 1645 2117.35 1645.33 2095.04 1631.23 cv
2093.39 1630.19 2075.18 1624.31 2074.25 1617.68 cv
cp
.968627 .643137 .568627 rgb
f
2041.96 1650.22 mo
2120.06 1650.22 li
2122.95 1649.96 2123.65 1647.6 2122.65 1646.15 cv
2120.59 1643.16 2105.36 1635.98 2095.11 1631.22 cv
2077.15 1633.11 2045.58 1625.71 2042.75 1621.55 cv
2037.82 1635.33 2040.36 1649.87 2041.96 1650.22 cv
cp
.235294 .560784 .486275 rgb
f
1980.01 1617.68 mo
1979.06 1610.83 1977.43 1602.24 1979.82 1579.38 cv
1969.18 1579.4 1959.07 1577.41 1948.21 1577.57 cv
1948.21 1595.42 1948.58 1621.91 1948.58 1621.91 cv
1948.09 1644.43 li
2023.74 1645 li
2023.74 1645 2023.11 1645.33 2000.8 1631.23 cv
1999.15 1630.19 1980.94 1624.31 1980.01 1617.68 cv
cp
.968627 .643137 .568627 rgb
f
1947.72 1650.22 mo
2025.82 1650.22 li
2028.71 1649.96 2029.41 1647.6 2028.41 1646.15 cv
2026.35 1643.16 2011.12 1635.98 2000.88 1631.22 cv
1982.91 1633.11 1951.34 1625.71 1948.51 1621.55 cv
1943.58 1635.33 1946.12 1649.87 1947.72 1650.22 cv
cp
.235294 .560784 .486275 rgb
f
2021.2 965.268 mo
2062.33 969.633 li
2062.33 969.633 2067.53 1004 2076.39 1041.93 cv
2095.81 1039.36 2149.88 1018.07 2152.52 1017.13 cv
2155.17 1016.18 2169.97 980.287 2173.3 983.244 cv
2176.62 986.201 2165.15 1002.11 2169.47 1004.62 cv
2173.78 1007.13 2215.58 990.1 2215.38 993.749 cv
2215 1000.58 2190.07 1005.24 2190.43 1008.42 cv
2190.78 1011.6 2216.24 1000.87 2218.55 1005.77 cv
2220.86 1010.66 2193.79 1013.46 2192.96 1016.06 cv
2192.14 1018.65 2218.46 1017.24 2216.32 1022.74 cv
2215.16 1025.73 2192.94 1023.36 2193.42 1026.98 cv
2193.9 1030.59 2210.43 1035.4 2208.81 1038.72 cv
2207.19 1042.05 2195.59 1032.55 2186.47 1034.42 cv
2177.36 1036.29 2170.3 1032.42 2156.24 1040.1 cv
2142.19 1047.77 2070.9 1093.88 2055.02 1084.3 cv
2041.16 1075.94 2021.2 965.268 2021.2 965.268 cv
cp
.968627 .643137 .568627 rgb
f
2053.38 1126.34 mo
2030.3 1139.21 li
1983.39 1210.93 li
2067.28 1408.38 li
2067.28 1408.38 2057.83 1438.07 2054.75 1452.9 cv
2051.53 1468.42 2043.64 1601.64 2043.64 1601.64 cv
2079.42 1602.24 li
2079.42 1602.24 2113.41 1460.42 2119.17 1414.39 cv
2126.16 1358.5 2083.6 1225.38 2083.6 1225.38 cv
2075.66 1198.21 2058.55 1142.34 2058.55 1142.34 cv
2058.55 1142.34 2054.36 1128.73 2053.38 1126.34 cv
cp
.235294 .560784 .486275 rgb
f
1973.06 1099.41 mo
1973.06 1099.41 1975.44 1116.28 1965.9 1135.52 cv
1960.08 1147.25 1950.03 1156.45 1942.84 1170.82 cv
1929.22 1198.01 1921.82 1236.65 1926.93 1261.48 cv
1926.93 1261.48 1955.09 1369 1953.97 1408.29 cv
1953.56 1422.78 1948.59 1448.89 1945.41 1466.54 cv
1942.59 1482.14 1943.58 1597.89 1943.58 1597.89 cv
1981.61 1598.63 li
2012.21 1408.77 li
2025.15 1240.02 li
2053.37 1126.35 li
1973.06 1099.41 li
cp
.313726 .74902 .647059 rgb
f
2061.9 848.586 mo
2058.21 831.158 2054.4 813.666 2037.08 801.112 cv
2023.07 790.954 2008.01 788.051 1992.04 793.841 cv
1946.81 810.248 1971.14 846.147 1915 884.41 cv
1897.56 896.299 1890.94 900.444 1878.42 916.288 cv
1860.9 938.464 1851.32 968.221 1860.13 992.717 cv
1878.34 1043.38 1934.78 1058.01 1964.31 1047.27 cv
2019.26 1027.28 2065.05 957.582 2068.09 938.563 cv
2071.35 918.208 2064.28 859.805 2061.9 848.586 cv
cp
.0745098 .215686 .356863 rgb
f
2038.85 923.574 mo
2023.2 919.462 2020.03 921.518 1991 921.951 cv
1946.53 922.584 1924.08 912.339 1898.44 1026.3 cv
1898.44 1026.3 1918.93 1034.4 1939.31 1033 cv
1941.96 1019.86 1941.79 996.503 1946.52 1011.03 cv
1953.67 1032.98 1958.9 1055.14 1962.41 1077.95 cv
1964.64 1091.48 1969.49 1108.79 1966.94 1122.57 cv
1966.94 1122.57 1997.23 1128.8 2020.36 1129.82 cv
2020.43 1129.82 2020.49 1129.82 2020.56 1129.81 cv
2031.74 1129.53 2043.19 1128.54 2053.38 1126.34 cv
2053.38 1126.34 2057.96 1030.48 2060.34 1026.45 cv
2084.96 984.726 2038.85 923.574 2038.85 923.574 cv
cp
.968627 .8 .498039 rgb
f
1997.97 879.265 mo
1997.97 879.265 1994.43 907.864 1992.34 917.792 cv
1990.16 928.181 1986.87 960.898 2008.41 966.21 cv
2029.96 971.522 2023.3 930.612 2023.66 920.049 cv
2024.01 909.485 2030.12 872.651 2030.12 872.651 cv
1997.97 879.265 li
cp
.968627 .643137 .568627 rgb
f
1996.8 888.391 mo
1997.02 888.522 1997.22 888.663 1997.45 888.792 cv
2009.35 895.618 2019.72 894.541 2027.49 889.229 cv
2028.88 880.086 2030.12 872.651 2030.12 872.651 cv
1997.97 879.265 li
1997.97 879.265 1997.5 883.076 1996.8 888.391 cv
cp
.956863 .454902 .345098 rgb
f
2004.45 804.792 mo
2004.45 804.792 1991.82 808.341 1984.54 820.877 cv
1977.27 833.414 1973.63 869.417 2000.43 884.781 cv
2027.22 900.144 2046.24 875.529 2045.43 852.502 cv
2044.62 829.475 2038.21 799.013 2004.45 804.792 cv
cp
.968627 .643137 .568627 rgb
f
2051.35 842.62 mo
2051.65 848.605 2049.09 853.599 2045.64 853.773 cv
2042.18 853.948 2039.13 849.238 2038.84 843.253 cv
2038.54 837.268 2041.1 832.273 2044.56 832.099 cv
2048.01 831.924 2051.06 836.634 2051.35 842.62 cv
cp
f
2008.24 803.844 mo
2008.24 803.844 1993.8 841.5 1979.66 845.514 cv
1965.52 849.528 1966.65 868.051 1966.65 868.051 cv
1966.65 868.051 1964.84 825.235 1977.76 814.74 cv
1990.67 804.245 2008.24 803.844 2008.24 803.844 cv
cp
.0745098 .215686 .356863 rgb
f
1985.72 852.882 mo
1987.9 858.768 1986.47 864.745 1982.53 866.231 cv
1978.58 867.718 1973.62 864.152 1971.44 858.265 cv
1969.26 852.379 1970.69 846.403 1974.63 844.916 cv
1978.58 843.43 1983.54 846.996 1985.72 852.882 cv
cp
.968627 .643137 .568627 rgb
f
1986.03 1093.16 mo
1986.03 1093.16 1983.31 1090.45 1981.65 1094.22 cv
1970.7 1119.09 1933.68 1220.18 1976.44 1249.42 cv
2025.69 1283.09 2022.95 1229.39 1990.36 1213.8 cv
1957.77 1198.22 1986.03 1093.16 1986.03 1093.16 cv
cp
.956863 .454902 .345098 rgb
f
2015.79 948.412 mo
2015.79 948.412 2063.45 985.184 2062.33 1031.82 cv
2061.6 1062.14 2024.43 1114.03 1991.18 1107.16 cv
1978.51 1104.54 1959.44 1091.56 1958.7 1073.75 cv
1957.91 1055.01 1975.79 1031.45 1975.79 1031.45 cv
1939.11 940.522 li
1937.33 938.104 1921.75 917.503 1922.2 917.227 cv
1925.62 915.13 1939.68 911.755 1951.79 934.892 cv
1953.74 938.623 1965.05 955.023 1972.67 956.98 cv
1991.83 961.899 2015.79 948.412 2015.79 948.412 cv
cp
f
2015.79 948.412 mo
2015.79 948.412 1991.83 961.899 1972.67 956.98 cv
1969.97 956.286 1966.8 953.774 1963.75 950.655 cv
1971.65 962.044 1981.94 971.062 1981.94 971.062 cv
1997.55 969.47 2013.59 962.324 2024.48 956.09 cv
2019.34 951.154 2015.79 948.412 2015.79 948.412 cv
cp
.717647 .341176 .258824 rgb
f
2032.81 900.826 mo
2032.81 900.826 2034.01 920.049 2026.61 925.031 cv
2026.61 925.031 2029.81 941.283 2028.05 944.074 cv
2026.29 946.865 2015.57 961.837 1980.23 966.213 cv
1980.23 966.213 1952.2 942.177 1955.31 923.621 cv
1966.42 907.615 li
1966.42 907.615 1970.04 888.698 1977.75 883.108 cv
1987.45 902.992 li
1987.45 902.992 2008.93 906.757 2012.76 911.944 cv
2032.81 900.826 li
cp
.956863 .454902 .345098 rgb
f
1985.94 1030.13 mo
1985.94 1030.13 1955.7 1028.07 1949.63 1050.19 cv
1943.56 1072.31 1950.41 1075.43 1950.41 1075.43 cv
1950.41 1075.43 1915.16 1059.69 1911.18 1070.29 cv
1909.26 1075.38 1984.34 1104.97 1984.34 1104.97 cv
1985.94 1030.13 li
cp
f
2054.03 1107.37 mo
2054.55 1107.27 2056.7 1106.26 2058.56 1105.71 cv
2061.12 1104.94 2063.47 1104.61 2063.47 1104.61 cv
2063.47 1104.61 2064.19 1103.43 2065.81 1101.93 cv
2066.49 1101.31 2067.74 1100.76 2068.5 1100.06 cv
2069.27 1099.34 2069.79 1098.32 2070.53 1097.66 cv
2072.46 1095.96 2074.46 1095.07 2075.52 1096.03 cv
2076.4 1096.82 2066.34 1108.5 2066.34 1108.5 cv
2054.78 1112.29 2044.55 1122.09 2012.08 1113.2 cv
1994.59 1111.43 1908.32 1098.58 1904.24 1091.04 cv
1901.96 1086.81 1902.19 1048.32 1903.04 1018.88 cv
1911.27 1019.79 1928.77 1021.69 1938.49 1022.53 cv
1935.98 1041.7 1933.8 1066.76 1935.65 1069.15 cv
1936.13 1069.77 1937.46 1070.74 1998.39 1087.53 cv
1999.92 1087.94 2001.5 1088.39 2003.09 1088.83 cv
2007.38 1090 2011.97 1091.26 2016.83 1092.58 cv
2030.7 1086.47 li
2030.7 1086.47 2053.94 1080.73 2055.45 1083.1 cv
2056.13 1084.19 2054.43 1085.39 2052.23 1086.47 cv
2052.16 1086.49 li
2051.83 1086.65 2051.51 1086.8 2051.18 1086.96 cv
2051.16 1086.97 2051.13 1086.97 2051.13 1086.97 cv
2048.73 1088.07 2046.11 1088.96 2045.55 1089.39 cv
2044.9 1089.88 2043.63 1090.91 2042.66 1092.18 cv
2058.69 1093.41 2056.94 1091.7 2061.54 1089.89 cv
2062.7 1089.42 2064.05 1089.36 2065.14 1088.91 cv
2067 1088.14 2068.15 1086.52 2069.6 1085.95 cv
2071.72 1085.14 2073.79 1085.58 2074.31 1085.87 cv
2074.97 1086.21 2074.27 1087.23 2072.72 1088.63 cv
2063.29 1096.9 2053.65 1097.99 2050.97 1099.63 cv
2049.17 1100.74 2052.96 1100.32 2058.34 1097.94 cv
2059.68 1097.36 2061.66 1097.27 2063.36 1096.25 cv
2064.5 1095.58 2065.36 1094.43 2066.47 1093.75 cv
2067.49 1093.12 2068.64 1092.78 2069.51 1092.3 cv
2070.66 1091.67 2072.07 1090.2 2073.01 1089.77 cv
2076.51 1088.19 2078.49 1088.26 2079 1088.47 cv
2080.08 1088.95 2065.61 1100.59 2065.61 1100.59 cv
2065.61 1100.59 2054.75 1105.88 2052.21 1106.7 cv
2052.21 1106.7 2050.91 1107.87 2054.03 1107.37 cv
cp
.968627 .643137 .568627 rgb
f
1902.81 1027.82 mo
1909.56 1029.98 1923.24 1033.64 1937.21 1033.11 cv
1937.61 1029.5 1938.04 1025.92 1938.49 1022.53 cv
1928.77 1021.69 1911.27 1019.79 1903.04 1018.88 cv
1902.95 1021.79 1902.88 1024.78 1902.81 1027.82 cv
cp
.968627 .8 .498039 rgb
f
1260.84 945.536 mo
1260.84 945.536 1250.39 951.218 1248.34 953.264 cv
1246.3 955.309 1259.56 957.658 1264.71 954.931 cv
1269.86 952.204 1271.75 953.188 1272.89 952.052 cv
1274.03 950.916 1260.84 945.536 1260.84 945.536 cv
cp
.968627 .611765 .552941 rgb
f
1240.16 949.021 mo
1240.16 949.021 1245.01 959.779 1250.16 960.991 cv
1255.31 962.204 1255.77 963.491 1255.77 965.233 cv
1255.77 966.977 1250.01 966.597 1250.01 966.597 cv
1250.01 966.597 1255.77 967.431 1255.77 970.385 cv
1255.77 973.34 1249.18 973.036 1249.18 973.036 cv
1249.18 973.036 1252.78 974.363 1254.48 976.067 cv
1256.19 977.771 1255.77 978.113 1255.77 978.113 cv
1255.77 978.113 1256.75 984.324 1243.5 978.794 cv
1242.47 978.217 li
1240.16 954.854 li
1240.16 949.021 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Modern hospital for cats and dogs.eps)
%%CreationDate: 8/1/2020 1:39 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fokXC[OC;$*O5TpVW^*5JER>t^+1T[T_aBU+@(WGPRqW4\K5XAY93]%Y^aG#re9AKLEitJq1c<WaI+IXP!G\/bm%o=B1sYF
%OZ@G=3P'%2=OPuPdUOVV2"tY4i5%,\"0Y"\0G+3`D?tp5^\u&Z.5D?YVM5LK]TG`q"c[d^CtU#UFm!7\,1Ln@9@%2fNog%=e<'Jq
%9ak$:!1m#A#F]5757D7llAe-!<%6JF1G#*[pb='3E5IO,DfMMBShk3OC-M(4I+1E9$1tpGNI&:+JaPeLn3-V3e1Q`s=%uj0^h<aH
%fSu_)8B]$T^@_\e?m#OM-R/X3%tcg'5Qi;?p-p%r#7Q;G*XWe5E?YC]F20D5YY@)Npk.L!3/C"2RumCKC_XfQ,6CAp!%1g,81YGb
%p`XU<%$U0T,X_i'\C`8:;+:Bg<Fjc0KL6=?#)E;m"`F[&4+Q%<rLck%+sP-?$S2ttiXcTT=C=c6)f-&dn,Q<H*l1qI$aL)<Tca5a
%n,t"$KE:je:e!rc1&O9JE=*0cYlQ^J/Ak'3.(nDId39,.A,_:c70''uM9r7/BL+o+aabK-_`'mO)q62;gQ2Hg-4jF#'3:fWhujhB
%6Eq81:,rH._[f++i^ddLX[K]5W)[M"3jFdX?dc9R5=>X:WW\I^TZA:-.l9MTLe%MC$ld+#_1A==,_ig_)?F*K7[!NX[uco,rs9=H
%$)'7:ic&#&`dSL&^e/&:\csK<C_K9T+ujC+/iemig7K;UJ=-^+,r"-8`Nbeb4?"9Zr+NOf/3rD74eAsD5U/'OK#^1HfE6Z;6.O"E
%"(2cR0OUIg"%LBG$MhBO8;&hX(_Hbb_uMh@"g9!jQ5Zml&,eRWrt.+&BrX\pP*no36Bh3Q=:IA(^bG:YHIS=g1k.;i"@.r[B-O(@
%WH(.j"YEb\jB2hX(\AMN]h/hfMBC1H0Us+EL]!#J_FlGqQ;sl%1c1'!KVUN&-S=a%%2Q0&66J/feOQ>;@uOfM#R4rP,>>oRY`SVm
%3PKg):r*'<D[SZN.*4M(N&@1E0U!mc-CuTD'9^Tkn4[b31@aI5KE0XGdFnW[6qF7mcifMp?AIH+M$h$36(fS5Z@M>f<+V@4o2_?"
%*4\Wo_i:@?B(0:KW7;$<B9jK-:KJXb1XO*g.M7ELBO>bP!Af9Is7VL(nQEA-BBS2]J`l1Ed\P4fp()MMa)u%t(`#md`2=)t*IS(j
%pYl-YMO?MK[*R0Ki0@=`4SpkmfcLVd!sA>b%q4Jp+T*<?J<p927tQNSJ'nkaK7BSF60p*\q42-..E&uGCS3";_]?]loo,`m;A4pH
%TEd\@'GG/=K?rI;')YOWN_%MN!<*#V#Mt-P&$QZ40`Wp?n2h<!>[`'dUS32LF:B1&iKWa;W"FVaP->Tbp.,^o>6)h9@"S+][E^l/
%JCm92W'f(o,#Rhk`1\Js#)V&qoDi5U%$2[*(H`1]5i3lRSKk2VnQu&fH7('g@0iSKHIA;]\GYiXfFSK'rZ>C\01@.\d_iTW[rI15
%RFrF:$^\jW<t.!>^kr@B+Ya[8N`k]U]LD0CaEWJu6UP^Bn,[E/M#m9AL_,ZhJFm+Y"+s_d9UDVB'?![]'9U]?Ho<gg30*rWAeY0/
%<Zl9No4,T?1hiTm"gJfs6:_a)?\eg\pRkn#r)6+H9=$?@8/b$T"%40$7PB`b6a80ui2Pt&l2Foh#ambV\-0RjWWo9(05M98Yc(c_
%dho8@K@NCH785)Bcu>E76D$Uh`R*S#'JBki?t$5aQ:UutZnP7.a9?77ekggpJP)f[OR"X:SS<?6XYA!a.%r^Z<1".knI3+KnN`r=
%1D:=h)k(h;TLDqA/(kP;`#]Oa7.1_LBqV8U+TGT+%m/([3aN7?fEMAR4Fm'KG(u;B-9c8&(@hka^eDVSHuFgm:\WD^'hAq`q^g3M
%&O46ag[Q\(Yl?^q-fC['n<@QHF+FN]JK"TdGb.gNFGC:Zj66l%+:Q!46s)U*0>]Xb=+Z3N*5a<;K<GSBSIC`J^JjK(K)1,a#t#0+
%#rNKl^]5W>pH]HKUm]%qcp>nXE*q\%9'm<S*E$a%2c37E#=/o7?c;/jbVpP!Hol-WrmX6NTDKja6[=]n7(\q_5-eIme=hLQ"ghJU
%.>MLKKfS%YK4LoRn)fY_C+!5OSaT'g]i]54.33.mkBZo6%Ofpb'34Q!,&Y7T"U7@-]*XuN3*7QXUWEl,I1]!9VJ7k.f=D%V].Ti=
%_#'i4:9WJanapYClLE:15b5naCWuR^1%.#`FDI5jOH"NIk7:ZCbX>)I'k%<"g6Zt?\N/QD$Y#R'LE^",m>i=5!Qp5VVDP;&l6'XA
%]'&mPiPnf6L,(b0e)_C*!X1*d#N3eRI7*@carMHVa-XpP:9!"tPrkg_s!fAgGm]5:lkRRb^.pG]UE"BujUNr1dp`)K\_JX#46:L\
%>jdj"rO_65JZk<]kp#8WEk+%*43][=<0-q:9.\A6LbFk=kp&NE<d0MuNp&2pWSn6[9-"W99^$'Ph\ifM>ZW*l#N$>'*HnUIWK&rQ
%/l;/mN1hS4D<_TmDUtM!4[%r&\&YM1*ZF\'n_P;r\\@<JnCEN`pLgk;AMtOu>d#=)NcLGl0RADaq7>d?h]G5Q]LCdl^9N!!K+ctR
%FABk7O4g&l;dHufV=Y@q!'cm)+!LfY:8uLGk04FjKDjkS3YW&84_H3-_bF_E2:4eAHBZ%iLZp0?pZId1d%;M$e`977%Zkd`5J)45
%QO]nj[E%&7f13iSVnbT(<;bMkpfGEOFcMjq'n&LopTGN*;js^$.;h,fT]_M]JV.;Id-X@74s]ogCBB8CRUaNd5.A[SBGNj'TJk4S
%m72Mnof?@48?2`bTHS:,1hb!'5m)S_63#$0LBdbjR&M>"L0negSDkDp32QjB`#P%\A/PDRKQ2$m5K*Ieo<"XaoR:ECm8KZXRNKn<
%P=HMXkauNq;]`\q'W55#5:_c2:V2"]W&]B64rKAjdl^A)V.4r;n@/2V'$nDG2g*Jd3k',,k;I:_Ng%dOeRR`f33iP>DgqC[G%L=`
%GVA4rbKP&6k%N=VodJK@gso`+?B1Wfi>%tG*7Fqc+^`EOSW)0O)R!Li"RAlu3>o#M;9&)?p6'k*S(5okhJtaMq^8#&g#iK&ia&cq
%n6im]brYL-Np2B;:T+(#mrZ=)S_$AU]"b!fHT<"bUP"qDEBHa?6%RVD&@htkHTY`_k7[D8e_tEhq%Bj:UI2/Da'.^Mk2=j];E>S`
%1.,e3U"Ld;U0hEXZi7>_A7+sdF=]n0T"akEHhK@#Ai=5"/e*;cWCfmGdcHE:d%-2n[\Loc0Z2nR@I5YLGe9GQoN"aQ\c=j+Mg4_T
%8k2VCG^S":^<CVi2GX2;^26@!YjIo4=WI;)cuYTH..@&[;&hQe=g*IFT0;KND79+[mL&89/?<^0%_FrVlB%pZl%t8,rR!=X-9B(2
%Fh@88I*2SqS/aQY^<#;J'R8r:XOgt?cX,n1CC.R*W`Wk";`_A0G:Bs.Inj&M;(Kuqp0E*<)saa5#]+G15V!Y4YPROpi(8UU(E#9n
%"Sq[m+MU8'h`ZaZn9`=\Fi^RM%s5d='&:2lU"DT.D`Yr?d>pQ_3o_ItEj(l72.=M9r/LSTNSk1LbiT5(G+osEK%Blm4&PV]F"HF2
%dnZ,pWmBtYX@&WGV]QA4!m.4lMPB:ZZD604deudb;=kE@/?\0WpS-jW/WXEqMCt_dr4OLc_Kg=>dU!VN`16OqSG&]T/%j,@0?Sk-
%3]f6mI*K>Q\h)jWql$^*(I\ih`tD5kqd'tBZ8hL0nQ#=XFMH71'KsASbH1`3X#.l,Vad"(5@HGC.Egbc4AXQ=YEL5ln&C@I&]?=C
%`BHf]V=$!1Q.fA_T1\u.=,;maJ*Es-*Qq/A?gU2E?[_7d?4H5`DOEN<[EmJ_nmp?oYi''D:3Q#8f8d_Nj`p:>.9nrgCPQ`WBW.^S
%X*1d`T<i:1@-nZ0SZLPeWdPV_-=7@"mpUYAcrd#p"[BRDHW1B'VePf!BbWU&,98<p9r$/o;Wpdc1B_i:i"Lrbkh<p%KABTs#)kp?
%q3,FV/G6.DP>;;KKqQn5$gD%3:QIN\Rkg#knePicU\i8'qhI*FgUa7=-"M.(hB7I,(MTd/?&n,DQe<)0lEZnXj1<].cNP7XE#HeN
%[sYanjko2IPl8fN"!/[@"!.TKQi[,CJbS+&(jKH`29/&WQ[sPH`g9%#NP<sS(&eRRh>Q]deb);i8$e%Z+$'@]g\?h>g#_-fPj;;Q
%6T8YH"8iI`8,G=:_2YAJ%&C&6\X&f_6$p%96]bGIGEc,n7l>+YBB#!G3:Cu(/4WlZ8dZI<LJ<DeX;!MLHOTpsd%Ice90n2[Il)O.
%1-TrTpc7)Un@k%E).>M%"[*I@dJCpkFSXp_E0A8O&Fi?FSkf-Q:AUO4It-/Jmn^Z\n$N(@W+Pe2rd.iKh;_D`f3J@SR_S*,>5paf
%s8K&jq1@qI.!gOs^]YG%)+gFNHk3TiFl7tHe!f`>c1eU-qcRodUKNo[A%+^*AhXo!J>WdYW72t1Fb@@rE]W2>VVe#lkR9BNhK#?'
%'!8Q$@-YZ:hpcq8]`NLu;1f?W53MecQdSNm')]O^hk>C#8c-8a;pnCf=$IjOWfWc$A>]dfWC!I,o(XCn(TT'j4dF,aA[5[8KuF6Y
%9i#4@8u,t4G;01Pp,g0sZk29^?B!pDM<;DCWID8d',]:tcD:GK`cFH3k6;Ze@KF"m/L5J#6aP^7cMEq;G0a`g/;*Nc$FKJQh4'QB
%'9.n1FH08dJMI#DoqGCTiLl)>ZRO]6=UP2P:(HW)]ig-A8X+_!::]6BTVn&3g>&<!OPYGD^f?RsiT4$`3>GjaYC<CdbGjuO._M8Y
%0E5@4(TGV&(1*dd%'%(4$82XSJY!3%T..G>canUsI6Im75\`mtcV[c*^=n_':Xp^#^;BI&DO^F_-)5llVW5C,6I-q_VopCs@NXRF
%?T+TJ%YoMdK`6sEL[Ptmg95aKfpa<j7]97EB"e0(*"U[MT:FqMcuA3onLND5oZ8rUi#SVB]6j+.qj,Xo#,\SH"4JXYHFeOhFSjM#
%e210?2ht@nqr@;n2?,:q'Rd)^q)[rp3h=DXR#p7iO0e0ITu`gkePY[lq/_%cV2#6q^UB#M%XWLA]_1:\r>@3&ftc'"SL40bk'RWc
%q!XRPI#iBaAhn==P50f)#KJ'R;hfH()&aR3/A!e3&#Q7?/"-UM07ScSoaipTokf=b!q(u:<VH>*Y5%\J5omhi',g3m0[rUGSe-=2
%&c/JenS_LL+A[-=,Ka_\^5`g)!d+o71n<hJ#Fjs!gRLLY0hukM6^,`nNcD(/*(_.Qk/mb%CBMo!B?I.M9F$dX4Ok/pp53APlo,a8
%m:=GHqn8*@rQ2Zsp9WN'X5g4E%Q1$Q4T."4-XAkiZjM7hZq\'-^^+5J8uNr%L2\`!eTITi!PL/Go\AC]R?),kf);b0.QR"TVNd+`
%l-\:lUkb>d%F7\&Ge.R%NuO-7YDs\]&NDp;RG4XU5@'Ut\h7]hf-TYgVtrM7emn%XfY/d0,54:c$!iVlg8A;)=47)*5G,JEkZ8LJ
%>'%D6B7]n!F&DGmgjYtJW]p'Vqc@*MZHlG9k72d.$Di'sr3*Kd9,B>'[,Gf^*84TZR?+>3X[bJY^?%uu$)\5>a1n8iljCprD)hXg
%@]*-%;3p3aCcshj8j&VM?Z4QA.@47s2YNQ^ku4ld2L!=+:>+DOS,8OaF#lXm;`8h:,b20Nj3Ql%i:\kKX5drK;`],Il'r6gS^P&I
%3d43Z:?gO_Sbr.VkCR%iS^U$O0r8r8*7l/!Pb.\un@>%orrUlD4sEbth!sQK?gZG^FQ<S&$Q8Yfj?i#1qBPeR\>-f?icIEIl!B2k
%]N8R'`-iZdolDb,fM=5j"c7m,6da9k96E`ZKD60?V7MWT/ZPkY3to?5HE,I-gqNDUkO2h$brjEGc`p0=4B/tgS42=Z:X$Wk3VD[h
%Tf^^VpUdJ53]`Y%Ma]F/bI/Gcn)aL&e9)=mQ$tdKZd!I1"f#t>09t"+]8?1WTc%a"I]m!P(8Phf^sn3^^=f?)KlII`I8QhNf@"K\
%pSfdIQRjHX.=qF@13EQQma:eUrP'KQ`@j9grAs'^obTEUlWO[$6LILNUlObpBGQ!D=mhTlmY`@O=SHb^c`[\JZ4-;t'n$IqmU%sc
%A-=A[i,X_;%PX>570Wu;)1:_iL6!ZBck0eA#ld:&Z/0#0o]^=XMp^\dS8o;>;Zs7lS:[J6;"P-JU/ObXdg+<ck3u4Q7:0nanu'.e
%_8cskY(H\sK:l/Jqg1c,_sr`Y9`NK]B>5K+[+=mb1^":LU)n$b-tpC,>7Oi'.4Js"muI\OFjIu"MI15(0#]W`E(oToEJ^I]O";O*
%.7Q+I4?:Fa2TdE1GSi7W\oZAr98DpT5FH+(]S"^PG>GsCn7D61lPkniJpdF"_*\ZXIZ72e*dR\3;&lE%I).ml^=KKFT.ZL"dHU2W
%8G"3XlYYhH4\$Ku*VmZB@g[=Uj'IA5Yi3(mPQ#HG\,9hs[HO`afsLfBL7*2R:9+@ucaIX]4(9^kNq65Zc*bGI'437NqPmVEr;%(H
%qj^#DIn,7V.pS7rd?.NNr%/f$Y0+*fEbbWKo<A+^rC;7W`:o)N#hDU3&[!/P%/Ou`m,1bCe@=(r]FFYG2\CF42?uHjE'6F=I$F0.
%>YmIV'->mZ3r4C'.sW89C\N7GcSPJ?lQ:m/@=d_-OmZ(G-OGEcg--_U<c@e2!PN,]P+PO]NMA<T?V/AP+Tl?Ol=s?ZWS,#9%0-1D
%/A9Z[+Xk<\7tOr-24=.1r0"ntlMROj*#s@Vj)]4o_2"RgZLB#Ph0pU5;s@eUFO6>_'[*('SF>"[dh^,6Zc2JONSp!bJn.H<E3,V"
%oTh^rKY@i2YM*(5U^h]:G78bmn'goZRE2#up5c7'H579ge_)s-XeB)W!<Yse\.3@HoCLY^:o,MgJE@:u^'DZfl_-UlR\<iL)2Jc.
%!c;oslN=?^mVp'RT>TTP"pB`Y%d+XiVD18*J^t)IdafQc@)+K*rI]S+EPKlH++?V*QK!TF]F]GpVW6ckqdY4A_)Z4Z!pW#OX7cTO
%k6bl/R^,Y"4D!b'&8%lWQc1R)q"LA3h_`-,2\a195a.NC7ED\T]tjsUOQ;C/3#RgHh5=Y5`>5HMDt$[C]R'n@r;daDW#D760LP:f
%n?;rV!l31c6UBJCTt[[Y]h;)9huD<cs(1ugs75pap\019rBL;W^]+0RJ,e]hs6i2PpZ%qQ#mpr>-DoViY#?l'#dd,l]q^)4p88+.
%58/9@nci?N7,7eG3N7DqgHXuZ9jG!]TkhoKa*P9bTuCuN4'FP\#erSh!]W:T&K:j?iBT@.iOtm;OpHUt@IPo]$"Nsj_;9t]JWQQ:
%-a8+E*QO"u2#%[HHi;W<r8(g8Lh!A.+r'O1,(^rQ!/DL%6ngr],QKmB"5$'gb%D)k#i(K)&^X7.`/,TVGUSN5,^b5u,Bs2t$K3-`
%!5J%/E:=XU+bJZ,YQ^\,*3cRW%u3EZ,cSSXI'Oq'0Ui=Qi#BK$5ZgTW?pU&B&B#c$)-&X&3XUX$&[ckj_@[n7(rG5B&YNd5AB99C
%pVSpUnXH?\T[X!d!l5?*=Zouh!DWimrnobeO_Df=OG$"4'FF[i$oGk_Ztq%b+9oeZT`.8-JlL'FU<4@0D+Y&)/o^V2O\ekb)+!7-
%L+J#p$JZ_V8<@)LR\2=,TZ'4W:soIH=!Cgt\j/Xf!au_P&8r[&nmd.@(<VA^UkU-h!31eX&Og-\'->!KO@c:1<0*>dS.(.6$53FQ
%_aoo.Tchj//;OHrODB@R+qd0+J;'*5^gVp.BdDsZoDk9n:f4[pE.KluA&09+3Y#\QHAl6\59,GC.*<-[J>i\)#UVIX,!YoKapiG3
%K(B\t="Q8JUF!X1T1&IibRNR9H[hD.7=5qA+E:g&*WckH#m!MIVAtgs"S<T@JmK\3;KVI79D&PpOLF0pOK@M3]SLXM<%KA:"I]a(
%<0&/b%HJ07Lo?P*q.tU-i"#no_;Q#/-k_iM":8HVcs2a$(I9MPqsbmu&4/u)+OhmNp2kj5$of&T=rm1o(j\PW6i`W@TH?H.l,SB6
%^P"cV'JtWq,D[lj;?4IXJuP@o<AG73r8J.YPC=s4>,hTY9qom$df=J(6>D6"_];dA[e<Nc;bsT%n^?BF0'9/6O1I2@;$:=n_1:2;
%46&O:iM21QDrV>J_QNkcH/u1*<XXOJ;3pOna7Md@;?Ch"QF:`%"cTD<7n"I,^5sYO)]idmMu\*j2#aPeq+4\qE]Zp@CMn$(gT?ZB
%qfdpi`HETj!#RoP=m01PAu>KNoW7=3'DO)G]2)K.=MW?3/R0Hjk[9_sgjKaP::SF6=q-!l\aG:1H(cE#aTD*I.`IH)@VbeWdafd]
%#-R=VRMgFI]6E4`hC(dAf5DEIlsV;&UpE.T$/G:Ubhk'RdHHO@PmHS@JYCJpWW.j$e(hY&q-Q:VY;MSXrBCcW^Q60ncWI(AFj.?[
%J7/XhK;R9Q,lb^QG2HA\"sH8RK]OO7*Ma-Y4Z=a`;(OsCJiF8^`/1&7m6#rQ7e#eQBYo?5D^5tK8_;8J@H&[FKJ$YRdN#`USdm,u
%pnC+LKc88GFt[a-_5oRVQr!k;89$dOc-7WL_h]UhM`Z`7N+mk.JKX8+$mtP_K/*+r8r50kP<ktIJr?U3@(?cd2X'CqSLmSe=P?FF
%Rq?BGf7<Sd<ealT\A_1M+$qhd4[k$:G]&u0Bds;Ko^DDV2.)j@A0?IC6ElK/qQFta6pSDj2s)[9/*>7]99tu?=mB4Vi^XBjrV_6F
%rEk'Sk<K"DhuE6@s7>u7rr!r=r'(VJMuW\CrrM!Uci<q3s8:a_nCGIG$.B&O>VK3E]]0CjlD_e?Mu[MW`A$'i1[\q$%@V-R%<5q<
%;!W)l$_Rhi-J%Nr+<8ti**8W/dO`?F*KK-+;XNpfP=@04&?cn/=#8T,0$'P\^#"XI,,-eL)l\tGVOX<6UKD,:_*SN6gRBs)l+;K<
%<L74kQ)^]RL=BJd$k6qucogn9XmS&H_K!I[T+.P%f,\jP_(afXq/e\L1ZMS0TFE"S5h2HKk_NY>9kiH<A&`S5Fadub.NjNIpG>Vo
%*aU)pcn[`arYM[l1D#Y2=D_1=V@o8B7">PY!Z;7t]&db]#s7)0V+oVLbV'>\A2*3XC4kO:1$jRYO'sF*C(*)d&,V]dMn3h]Rf#q*
%RL4Md6s8^;)9r1V)d;m+Jg&`U"KKADN:9P!nIb8rQ4/qjq:&67-A+<9TFH$]]$ut0n_DV>%s1(0-U8gd@_j1V;+itUl)`=>iDO0J
%hA@.fd'gKh_5P3T[CIsp9"Uii+;bS?AkAQUiI.QL>S_k8[G_X6o*$$#0b$BUbCh/tf<(qhI.]R(Q?F+6gMe:.UQn(r%F\eUi?cHX
%kZ`f@"#+$Y&X4o]UfIjEHBC>?V,NQY],M[a.lDQJF"dm42Pmu823P$17dpW<gVJ"8QBk6V:&IPD9)Jf`i*(/V]TA%7(lj:>/[2N8
%pk]P"g87VZjg<pnX+CB,k`QFilbgL&eZ[YCL1XT!IF(pq#abWiliK8B/V5/OjrcT3atlJ'BGA$.jeY7BCDG8$[:]S>Q/&"K.QgYL
%:hc.JaJ5[cS\`.Aqc]@TU>5rY>.i+8lYU[DR%_8OH,-Dbb_.k[^sm6%-"Wb!6spG=gJ\K(DoYF&Ll#ZIkpTQScWPF"?uNlcJ\;%Z
%[6bF)cI8TB+shd%'b2'/BSU5X#Y"n7OA>DDX9)H%]EO4F&@G8FbQOLV/b?8ubgf;!!YTiCVk?g@<9W4RG(UkE)4L0]'R5k1!UY4h
%e:+=k.F1\2NM=TO;rC8V[J*JT8dBlRZZS"G>O]_MG^]l9!rO\Wok!h4f>'.I3*C,RXI5B9!%XC/\DWJ[rXp33Nl%T(@,B3^l'5oT
%";c3O/Udi@]G19obeYkg@:hmB;7TmsRs)YtSD;p:S6'hu0b$jn`^ul[jHc2g@V>dJS&->',!$_'W[ElM.E8RGVlmTB/V'Q31'DpV
%PRVKrAKrQiOe>HE6DO*C7]pd;d\KD5fqc78A>daQ29I`QC_n:k-sIsoeS[t,Ns^3dd<EcZfu(Cg6Qo^4R)MI?K9Wi*?)/G1?t.q!
%X1tmV?!19[%#;W?`oIna(#%F$*^LEUhLn]\(jW7aTn3lkfT-)+Q@/`8j1i1:8qk^<'QKH@ru+t47^/JI-&e#o-Us`7gSTJr4^_BY
%j*Pld"(_\o'dkE%07o`%0URb4\WgA.or1RXR/'i"Tt`Q$W<6Q/H0^K460:4:Opc\M$MqtH-7ZLGW5f<'p_h332\ZIG%CRUoW2@F#
%@9R'@Q!4b&AMF7>&^qBMXlqXjC9O=]Xf7l0DJ%j^>eTq>DF*Jllk93FaY+6N2oCl!)B9EAFL"U*EN<U*TUdV,q,YICh`KH[:>n2<
%OP-XRXhd;F'[*N#U)Ii+@\t/"p<a@0*eZHLN98L_MX@&Zok.?\<L].?Xl)"b/DA1r/#>9-g^miT3i,E?1W\Q;>[H`aE2sPj^e@R8
%-(Rf[-'_3"S'JYe#.E1$'`^%`#F)=\W<!/-"N*Vr&RdKR6pR5f[K3Wmm#P=2L=J&K$?.o!J66N.BW6`\"W0$j_"cEe;&,l6CcQe%
%@"1qbb30NKD\Eu6X32c-+7htK_&B6V+Q+><"@8@=Cm+/m:eUt7J-&r^*@jgQ.&BMaJE3S5DAU6-S+mR`Dm%DSWu=_IG'U3*0Ona%
%H3/_JFb$q*et5aLgQY,0OrVA;@5a/T_,AYUmfjFa!c='$GO-?R;I]O);+MWu\I@7>:3m1!Y/).*Cs$gIAm&^i2YRXh%)!"i1^:2*
%]=R$@gWZi0OqWR3c#8@L`mf+Z7+a1p#NLrU")ABO^[DmR.Mqb#:&$H^O(N1s)f;@EqtZ0T\Ke+nX?m0FdBS]/#/5a[2HdR9Z\E3A
%Yhku((GbGP2JqjuJkL&<D;PCVm6Pl'-i-=fmHs7?eC#)m7`.=LGAAu;P41(R7Zj@1fI0&d.c:1:%cH3"-DY*(Kn$F(!&/!nU(T*e
%;A,On!k0kK_-fZXTHZ'C)abGMDAfS_YL#p(cnH$ToaIC0L+Eit0X%0bYl/*"\R2%jC@5e'.6+f51JV71h9qi4DV[uO0XOfe_a*kX
%))IXr>3sr[F`jL>!F,FhOE.tC'p+l@7VZRl\AJu&=^H!b[6PKkI*)cMk^]>Ln?@P*)+s6%D$9$K?B/[^M*UHa2]uWQ":%;Ss(e>$
%)IQKX_0;qD+N+BNFrcft(>Ep#c+tJ)6[-s1HeSl%q[Q52h'q+W[`)@*5i'OcWCICC0WZHpd\%5/N2<C4fHC95,63"jh6@CjS&(jW
%>?)MkM8iaX27C:%SJN,O22St6:t#jUHOmG^Pr7:TK6I?=H#?jaMI9icaab(@(E>(i"hYL%>bC4Vr+qi&Q(`lTe*);tjE0bjQ9-$+
%0p$2s3hTP!d/bd?aej@5T*X9p]>OW)5Z>DC9sts)#WJ5sQ?1Kh8Qm75Pc\mQF77T[cChGR&mR#sf9nj;[SHFB\uW7?\ejr-eU$&G
%10*83*jirlC=8;Hkg`P7/-fLgWk_M.MAKKjD$FdXPdnYpcDQe]c1GCJ0Ps4-CPr!eBXj:mRSIRSQY"ArmP_'%kphMgQmk\+<&KhE
%<K0`<^e@5a9E8"4[@Ff>GA/ff_"3#T.a)j<9I7>#2-F9">MDk+=U"u?7VdK'Z0WI`(61>$:\q;P?:\3^Rr>c\AdimED4<!_fK)jN
%P/8!;cfbQ!@cNtrfX*bqh):,p4cg2!PG)*/Au+]):_;ICBZQ-o]eoq,W.ErB"3<h=;SliB@4=>&3A^RfUaLm7ofEii2).?V3Q18f
%Oqr.k#&4>aMV"I#1s=]Y?Gk"rFUVSh@QR$!hmg4*b(?MG`'F&6p]M$nluYKI'*C$&gDONOi\geTb75kL,_NnKNk2TK5ug1m^f"XR
%DfB&$24_$H=59H)K3,:-!LG-9'K!!S'/</T!!bf1CZ,&i!AQCJHnp;_N-I4%'A=PLB$bUcB;RaQj[(A@C*q``*Oqe4LW%.`RET3;
%"*VSNoG1.&/j$1Sfpc@UECp7lY',A5L(#2"8C[asb#qk-?]BN^#atfK[_O$N!#;tW_+b%GTe7+,T]N+n5UF.dc+56;Wn`9n%XDqc
%B7]QkP?OGL]XCt*C-=<mcAChXTr-i;2hp0m>5c[2J;ognKp]W=N(n]0A1#!4hl(@nGH9LWh!h3.bc6m[D9piMGqCBEb-LVHfYC&W
%_=8b(*@?C!/oJKIA8E_RZ0i7NL2Ajf[-c_BZ;%_QFY6D"5d/Pc4df&`2c1L"@_idG6O>^9:^L09;B9Yc'(S&&XB_]q.?jl_9ns?2
%e2NgtDrKBPZSLp1.ID:NU"4'(FLu/i9_q=!/,.\B`1#X34]HJNomh:T5-lf2l;5AM)jIe#(+$<<B(sSr[TPkf=Q`dIeE&S@EE-1K
%B+A\1-p@HWG7&_m@16s`)q<4d3i5n2:kuN(o_0hl%RU=")W7`nmD6ANN3(R[Y)<.ONHEe)2d(dZbnZcMKVWUlMR[7Y[q5p*$3TA!
%ChK\9Mllk,\'5/C\!-()<Z_V[J]tDWS<#`FMIH1R4ORbSaUU`&L]B_GO#YOMfCQHJ;Fm"oQ/Z#cY3*A!7E\DY#1Ofe6,Md2A4Ht1
%qH'1Q!/WFT,[-8Q1>u31]J.=<)a]_!'Y@dHbOTqDK*bM(7Lrm-['lGm%0qVDgp!&t^p]P5f"9,re/t`"q=278Y:EAhq@_W!5pdFU
%RTX1eWFi#,$4!mo4A:I#)NDbl4Ami1gW#":_OpMOMNM#4ZLIC+ZX5Rkr37cIOh\emej-L&N7O.YKZR;frsI@!k/4j>:mq=Uf3_"B
%j"5%'3c-4=d9\_^DSs:_Y4gK4%mXVMP5KG/#B.n4pp$(k]aS$4`c;Mp9]8<!8Jf;W=bdP2R(RkCE.Bl*)u>qKl^#]_@gmcZqnoZH
%pou.I[iW.Ypp#`@VS^sa.<o>]_9UA*iVImC]Q;$M`tgp=Y^'/bnA,F)9T=X8FQEbrgfL_*0#Pn:555^!244%p4>ZKHK;5@?%*a:;
%O#QR'-hir%YerC6G_lRP`3@.SO!6Fn0K([G?30+CrKm:dj<HZ*juP*<PX!L>;dOt8_Wakn4S;\>@qNjGdS9l5g]!B%S40'UI9Y*^
%]q"t,&_@RYrLeK_!E[E[*"pqf^Ii%_Stall/`-9g0C/7h:Qf7V)3?Gr_]t:"HIBOd38n&^">ko6+[JI-hXi*+3_,7jQa3N%4Q)7Q
%"F9BLUG$%sn9l19C:eishiF-.YUKoJ<,7+6V8d8c+f$sZlfLXgs*WqI$gEGe7]OkJYblJ*Er_3@mN$\f]!@/i4D3dDSV?\lq3E'j
%Hg]t8"-]$be>h7Ae2Q$dN!2B1kT_tI#4qb<^/Q?!bO05%M&2qi>d]/25;'Mj=0@_$,5l0GmU(J>7cd:<.j=C*M+a%Q1t?[q-Q-OC
%KDR_tj6)(3Gef56m]iB[-_jc3,N!(i'aTekn/Ko&Wj1!R=Nbh@pH3To@.",B^:VgbaRrK?e193;GA/tWqU99-dKtVTZbAZCG>#G]
%'R>6C`H5Ai\1:ga3B%FRkoA)(Ui>2N8nMn1<7p4gAc&'3Il:T7-IdX4,l/<Tk.cje#OX=8IGM0Ue186PNS1oD:gQ=q1gZCM3)Yqc
%0Sf8=A9;)4Ii+a(L_D5L-sZfsc!L8Tr+++-\M3^nH08UAadHWML6"Gnac0>rancW-RbcXIiu-h@(bHmbMllMQ&C(>]'It$f([R@5
%O_\u,k@MkQFBtBa7ec<9XjQa1HT-74*f&-%@,aXl>e`2VZOh!GRtWYnIssa'K@]Y"O`[("N?PsZ)oKdth\aH?MT4k>n^SKBU'l(&
%EU-oOQq3HW`f&UH^mLYM/n6s-bSi95k-d!Wjj/n]qFAt9ZqR*OV:sF8]_'EH`X69k)m:l!%V+<eQAjFd'OtsFWWD,hG(4#7S\LYQ
%pRF<XHu-iY&C'hF:!!*Ubs!*(>!]X&F5(@HHhYuFA&"A/(l'(W(e7W.BH0Ma5)`ak>;1MJmll\^Rja_a-#.<Q:X`=-2/Tdjm)/]>
%P:L^*R63:KRgH,n0p<]_NWC%sn3'r5Ks,<9;_0tT2C31h\LGWbI$c\,7amTO]aU9#0.#1KGqRZA[9b^uC9Z;'duA>$1-K$<UZW>,
%1:<Uk[])%eW;Eh4@:F+>#@mAt`AF]P9+[(j]-5Fr-@]X9"tkXB#Lg4>H^\KmN;F^6k+L8n15Ep"b^BC*l^O)tpIB;uWa%=rRonNP
%\JrN4p#kXk\b.$<QljN^S,"?c24:F)`LH*XF)6:Q0&H[Jo;%KdRV14$i6504kb$P`RDG<W[4j_\@[HOr60$5b/FqTq3(mLONG"Y1
%DEBBF;kC=qlRmG5E6mNVGM[#lm+HSe5GOt8VmCjFEd0KgS'B9V6G[Fl`o_8k`aZWrW`WMIgTq'uU*^XR8@^;7=4W$NNV/d,_XMkb
%WF!RbQ=e4-Zoj_/Hcmp$qQTVK):J*4I]H\MrU/<QlqmeaD:H2+HEH5,2%VO^XO0*.A5+g.4$[:-OLLS-lMYC*D->\7lf3,]A#1k+
%?ldV1-gN%)kI&SuN]W_QG3?,UB]$KTE;SY&`NE^s[e(j^Ya&tJSur!^\?OdDp8RG%5-3K7jFbW6Y*@Wu@?eETf$K_=)suL2jPEX$
%aJ_9$*Z"+QI-f]r"ZFfcRP_/?k@^f1n!0dc4.F5\]9'``3G`E@lgSIjF[rB.8N8>/B3n*e,<Ktr]q_1Z^7;`T]Q(qa#Erge1l`))
%*->Ai+"jJCqIFc40A-m!756K:(B%mQo@h>ac3KAYF`pmPff<MJSt#l6IW@FgK,5=9k1Zt?dF</Ihlsi\b+3*LGL_&s7@@a'f6]CA
%FU=p7#bZ1lgZGl4aHs'bk8s'5SX\^YGHEq_],tAEIWtP2T6$&TUH=NNdMdBnQA!EpML&0leCDU1kE>4RT%i20ht-Ph=7qNbNM0uK
%Gf77toMa:5>!&fE3LiDmhTK.#SbKR5IcdIZDi.l04CNZ8ZN&_CBf%lbE6fNrA`gs5?S*c&I?->K=!(8ZT^SZTg;3.Le2c[+0orPs
%+I1!i6J[UV%^L:\kLq#r-3,c<.G63O%?=dUI!E<g(uchKX5Z'CLql)sL;PCXqCQ.O?r@+>\%.:tQXblqbj,@Nn+7BO*o.5:*u2-,
%n&RC7IPTi+o4NYn2u\+O?1u$$cBA2$arhZXh:430-K#OmY!DnIA.=bF>c,<Mo1TG:%qi5ab^VMY\jfF<(qC$BJqZn<'"mbb*5Sdj
%J-A0mc4K5^VD$"Er`1<9Bj['?24ABf_qJ8a,P#4O3M-Ca.,sIPTnb/2?J^HT'>u<Kj#Laceq;8F>.Y07(Q6c3AL8E'5:0i@@HK?@
%*\l907"h3dl]JRIFrIp:%F68;oGO%liH'4maZNfuUNr%8R'2E7oRS&YUJ*20"__@XQRip\A.&-72J\f$>1o67XERaS`<6O[43-^M
%i-@*LcCELAh9n:uIWh62oH2uMSr8@t4Q5Wei`FX6)fOW*?,if(TKhBf>k3_r[e#Zl\oa5NmDg\UJ]*e@=t`"0big6j`P5[-VNpu]
%Q$6jopaHqLqJ$1@1)9B7P"iR-R-]f&e!0CqAX)aa:J<7iHPiRH#'^$q]8[`+D<I\gFQ@a3:1$aN55gp&R+#!JlN1`ThCGKgP9MK5
%9N)MFR=;&QRm"BUpTgLHeLXq-H+hmt]4!0NIB,8I5&5blV8H%umcN2iat_336f*"\50Luo_asca*o5m=2.9N>7NM"cckCj[PT3a9
%:#X(>XVO**%_d`f/i1I_SKAU8LUffmlsp>IGO%"]8i[m[V44B#VXtoYn7BY1\1/k>Z`Dkt%:@8q><6b<Y<C,_j,^CQQQQBk!9;0,
%'ml<tW5REn]E>Ri[&':XiU,*@eU\ZXWsL,DWO?[]UACIA)6[;=_=/pCk+8aDK'',7nbI77k,mcU[HoD5e=K?TGO6V6ZIOdTAZh@P
%T',dTn1%Z^?i'B[E1Sjkf-5AG5]bb*OcG1P=2u3qrqB7L2XJ%hN3@-A9cn5cBbl)U:@kmUR'qsNB3-V=\i=WYU\7l,+S7`ScL.h1
%-N/$(]m4E@YAa2:CigVDNT7Lu@A8)&\)uQ9*9h&8TXd])qDWVZ@>jB1mjE/MAF\d[^?2`AmK]M%pVHNG(4+'9giOTDSqum2O^e0J
%d:).rZ/q!dO5lb*nq?aMcDO>8i:X)Dg.=Cgia(Sc`kji%5Biu](ZUG*$IHH(Y+hJRS*O\JKkmref)S7.?Yd[%r[SY&hR'sT2n=+R
%Nec?Eqk<?#&Lbo]1)#'-pA-%VWO#LcRCYrGhGK?UHBXealIVS/UL*EEp291:hUuUb_cO],5gsSqn>@m_=e^5<Hgon(mUCQ^I/Dut
%"(a#SfAhp+Ra&bhI=Ld^gTTGhchjJddQd47rmIIj['g47).srcY:$S`h)E%gZ6PrR!mclDF+"^M@O>.k(mr%$oks$-q<T$7:C!`k
%-t6b7UYBT71n)*R.J>lJ*G-DU3'B1UNt^R7H#l)s-1^/SboX,aE]3i@de.$gc5lH_>e0(5j+a,Cq38[0k%VN^I[b@1@i:s8#eq[;
%+*T$R`#JY]RSS6:DY^^s<1#ZsrQ'I]XHp1OA@>W_j,5ZcelZ<UZ##VYq*)K8A]EF2pQ59IaRjT9b^k\@ouV?*(UqA^H[".]Xa/>d
%^+^Tt#8:T-Dfj`N)2@_-cH)JaN\j7i2haXWE"T37gT!hoh@8Rf6oAc].D-P9B%cqF^l=m2A$93Oo%ZC!-"iQt&"lM6.Rnjf<>O#8
%icQPm*h\uFP=]l&?E\4ML9&aL!!ksF]HnJB/-sr'QZV05is)JZAHnMI$sa1f4O7XBB6WTaeoh;FAG]K>Za%!G:o#2E]mb9&[5-TC
%D6.cfkY(JoP^c7oBATmDlaG%/p-Pqncldf!hqGJ`[f:@aJgo&p[%ABHR:5:k=)d6FRdK+"O5r<WNPpjmTP'\E_(,cI=[-:4AP@Hf
%mq8Vsa#jq=EDQ8i!);P1mcrrG_/"C0(hgt8;\m-uQ+h:R_>NO%,jo_dijNYEJrG7!_0:hgf<5TOe2ZTc69K>_(1ggq]ejN8Y^(KF
%o/p#e>!F,1Nb#4RKR#Ko]7!8J-=,BY'sGW)+?tf@MHhck0>$R_bHkEg\WDd\h>+<^Pf`\K+Cr,'[sQnPRLRff+q5%t9/9F,2rE`P
%OW[?6ZDAqsS-W]9=4d7bmjUkNbV,pP`5D^J8rue('[%/87p\t6WtOZZKCh\AHJ>K.pku\Oohjo'][?Dn6Sp'9n;;NX+92l%0pMh(
%K.E'KQen:jjXs!sN'$b\p-q.U-(r*KQn+<?\V][l+>.eY(I*uRhQL7J1m]EkrRK?4"W@B+/h`"LZ5Nd^O#J0q*C/KcNTk6uYoBRq
%!V2A#n"s:AG?;6A]DT`IPjL"rG&FJ/MqN7teJ`Ub<;in&9sk6k;ur);5F=a3hIH!Qm:*fjP,Q##D1*G,H4.&c^:4a."./C6F$7H>
%cnFL"--WVU;+e'*J0rmf?+9(6I6!q\q;G$j>.qO5;@3XHScf[J\m9#&nuCiLP&r_M(T\7'$bM!&P:Ji+kHc_2`lc+GGU[$ZfMR7e
%E623T0Vqra@D:#]Pr*'R?V(3g2o>#k3@s[YAQ!8Dbo76UDmrI^R3C7.b]U.2B9q\*2[16sCcN,j,>32Z$E81d7lkk^H-=)SHg/e@
%hF!N<"[o>ERig\6<:)PKc"Hn70SWqXHML6Qr.$?_#!!CG//c3,F\W8Yi:VsZF'LR.=C;Hje$X"#A>'%,lZ6$D_>;P@DLK04\1W$h
%((*u=-PCF<!`pkC`(DhgT4)=?M+ji1WD5FsV;dB8(`g#E_45C&TTW;\na^18JT^GjCmlG.[8`Y"U"pZcRW%;hO,;W_@L%<cO\E0_
%g`Ums.T-"Hq"c&)3HnoBk9WWq3B).NjK2tb*XI39a`U)qecc77;-6FIe(,mN"k^u-/_+7,:-%)e<<T2G('ldP:2fFgTaC1oP$.D\
%5WdX+=_jGJ7giD.&>qD?:YB%h/tnER[iNI3+p8b@#n<b4YbQNU:]UhU;Ks6cF!kq-"YStUFlS"7f6:V[hk.FlERKo>8sMF!\d+'J
%6BG7Ao!7K$TBCe9oFt.YE)&gr<]+S_ZXq>gjn6!LW1i\ais[2O42+P)=Dcuef:/#^C-9ZONjI=G?H?*/n6H*/3Zc?*:@nU3gG9Yh
%mpMZ[Ca=V,n)25C[#c0T&q)$p(#g,qNMGW/$lShG>3m_]m`C69Sns$m5>H82j;_?:#S4\l/od^2eCCQD&Ih.,lm'%\IU^tSL-X[9
%l=`k)&<IgW;+_f:Uf=--%LY%j"i#thhH";d+)3FE6#XVt4t`3,]5/r7MAjIl;ae^GMOPeD*1b0laWPc?A3ps7FG]-b:<cC_M66@!
%/I[mi!#h+V`(#hqX3M;#LfI'-`"?:UO/T**lG@9I0LJnI1pKXB[YdKn1jZX,9>nF<-u%C)p!BBO&@f$ACS`\!c'>6TjB#T^(!WBT
%8)c&!+`M93?WC#?TNSQTY+g$[QDh*M$fu=_X1%5k$L:#:WsL3')hhr=/*048O;Y#,;^Spm@XVr[6rfMNaWk,dIeC!N2MeJ-K=DCk
%!:k0`H")sp7)U\?ki\0Ba[BUlq%<cJAV1EONZ*3kMI9"kLqNESJN85S99(]hR\Ul#_'K@H0;g<"O_W]Y:@^sr+2R6!V9fE_$/.sR
%`%o*9SEJWnbF+;tFe^I2HXC%Q2U@dB`fNUrl82*C#8J0>%:W-9]Wt1r]\sHacs3G>)i+e@:R^NK./$cbVu3<r1<L5o,e6bJ!#N5V
%1)A#Xh#0M3o&:l:8!@i>WQ(`ZPA1H$ER%SSfp,@dHno0!/olu,A!NXB(eRT+O&R]pY+s'-MRpe7hLIEt7V>=sAJ%H]f"Gdn6I4a_
%[`ghj2Kb)g(10\5bI_O,6VCq$Z&B$r)U1o0@>.AW=8qPlVAA%UWQ"SD!ehVPe,o=Z$JiAAQeDB2XQa6[:EZIYI:U9(geX</[V&7%
%W=hH@c^%Uh$AfE0nbZ9;T7+IiB:*nk([I,6!tb;iEPRmY>:A"bEH$#k<S/Qc\4u[.eJ2%sWOK'rG`^3^i?47'GT7MDL22:u%0UW-
%>A!)FaS;,j4=\HGaXT`Z1'61uc*+EaB[c$_W#(R%!*6iP<Z*B]mRoSj)i7V@@82RC^7#<"+q#'F<I1=^%:hhcN9JFn+K=PH^U4`;
%CuHPe#?cD6^kb=MWp]W8k]g.i0Tr<p(5UkNZi(hE!Ee`:Q>lJ:i`&>1/9D11d>5K->=Vlg/!PO3ELQL0ao%.&7)n2>$Cn`SHr&]t
%[o,t.f9:`RL[gX/#adhY;V,!pgO.T"><H$P4D2W"UNrbt<A$A^<@4h#:(WI2.%AHMfbeiX$LROR^L"Q<N8DbMW9OG8J%`Uc]MVdr
%Gtj?U\8h1L=YRXc]ePF2T5k)Qrj\td^nboOp7I=J$D=Q_PBcB+G$Wm$*t&LZ:bm4i?ihe>d&?<DQ>.1]mm&dNSk.]T,=i;8#]]a3
%TV:B<d0"(2/r$\mP'#b'Qrnn$PlcB@B"@ULmj)C%2Qs3\7KcjmX?Wo'Vcl%/"2GIZZ2A[k%u+$T/8_f+e,elLCnBs.kmb?0D(VWi
%]JlD1fWQ\iDP,#f6)La::4R6MSAqjs^hGo]$CuCjfiUEWHmDsRLDT-"QTD,IZ@4=0Bq2?5LPVd'2@6ZOc[$Nn&)&J<oN<coPb2K^
%C*HJ?ch)j"ZG-3<EktWmm2OKWDigeOBlo&F>V`4$nK@K%7!`*25e!Tr8$2pXg>)]6f\MqV>Y_RXF($TdK*k&=R6SR1khQIWlPDX8
%AFr&=mn0tE@Yu8l^cF=Eiof_7ZA:Q.q/ZiVZ\*@+kQ2Vc`j56D<^AGEBs%T_n2hh@frCKApd;N,V$0!=`EB@'9jY.(<YcI,F)J-A
%:Bcr]Vd-^V3`Jt@<6ZCb7_lT)9VImCl8I1m,iO-0Gh.Y"DGThpa?3I@pg0]=CUanNIclBiO[VF-Iu=,RhGg!fCjEb:[pqdt)CpsF
%(^!>?N,[eg]m9\?2,Aofdt&;ghR]QPJ='c8eiN]tjR$3jTmDH;.OAQSa3s(d6!noclko$jV&;FZM.l9")4O+bFlFZ+,T?_%$=@jL
%9dg,WmI`L^lQD7[//EN<jYJ_R9!tr=Sn>n&0LiQ:Qt3RIbp&k'NQmnEU",-Ip\kImSnp:7BI,mo'uW5X0_+EZ)9lA6nq+M-A?I\s
%(X'%F>kjf83R`E!QF`'%3cIRpCXR\i)hBf]Y4MAX73tiZc3mO#/.'`4eErEX?(Rnhfn&rF&;j5r)%\&Jc;dqT3!alsdi?lNVfTnH
%V%&^f4P0*d:6f7u34<eLHIg<Lc.457d.NoUI2BJnCq7j>Jro;oST'W\[-I3HV-5IO;5#`]V.ICVWMh--7R]/UMiZ1&>#I3?1T;0%
%4!mV)3ge7)>JXm=;&jLbPfgC3Th&Z)$,!+TJBTjI#m1&,"`l,JBB!e\_`!US[;IWean*IC%ddDg@+Gd8d-6Ze.&R.XVOM&m3FL<)
%WtbR_HEhgh&XlS]$D]%0:-J^#,R=9X)/Y!/1YH[N)8p#qeOL;a)mAgmLUrSYI)((aXRXK7?FDeQ\.pM8?u1!ooP:5<ar60bR<okW
%AQ*c_p*#l3f+n%Om75<8[c:mLOieVmSklU)'<7b+PQn,f>S)j#AUMhWbKFt!(rHs;9i!s.p[.ciWaT(%p!+$e6-Dd<o;P-HZqQ,*
%'#e&*9G(KQ!:IKVTOIM*02!WokYf[$F8*?HOAB=P)[Lo@aW$dg*9=XhYYg&R1W]S#k2Sm4f!!tFGDHQ=W"jVa/:SrtW[0ca&$`d\
%1epJocWB7V[U*h5/^j^(1O&I6ktaMJ<g-F=Nki8,gk?LF;k^'KP61cAa`ENpYo+"(Z5-i1q&)HZr9KQk4A#eDl'n2kep2g)"]t:'
%S%0W'&AS_J4D:L(<mlYrhqH]fDCbHh@XX[(L,Gkk[G!NMOnLGl_Q=JZ=grlI.gSsX7$_R'SdUk$9,K)%BJ'B&.esmR!m*54T:i#U
%'LS)+C=ZT.T$*?W6+XV>e);W>F;1s09I%ZR29QgWl/#%uG\$V>:92$.EC&YqDUU)]?e7-F/"cP3H2D.r,*t,ag$<9,I))VJSS;G)
%-je<Y8<6L(G?Fp2/5AEqdrXVh&=P]\3>IEWfBT?tr.\<t0L7m,)Da2-a3nHO7$c'3<@ngMW1XnhLP;m)[9#)$QMD`O#Y-j]2qR#G
%SfMc%leP3oH7PE3A!^3XZ^7+-Mb,P(mX_kcfffC9DmB\Z7OrR7rAG3tdJ3g[n^>t98L%aAcJ.dYf(kP*#Nf`^$A!k8QF\<&YrrN>
%WAhkphr!bACoMV1ABT.C*j2E,`0I5798ufePS:,EirX?@0!B/KCFbm+>:IGNbrr"RmaSYN%=Dc3N6@3%GqNL$Vo#uZ=tHTQ@8"'E
%]mB(io5ChN(i#Lh\MjI9=/\*LQ?`Qlj$c^FYgF-R(&.E<h`<WY_PIgi[oon1M2$:u%tI&[c;=/`eV#GF0"#NnNenh\#luLjYh?Ml
%IWt$LKaT[;mR$u*?AZ6hc5cSUlt-"S,>4ZDRT;`g1P3(9E81=?YU%OY1>8^1oeqSB,9Zk5(@uD%`KO*Oka$6XO$rS.1,b''Tan_X
%dPD:6K^M1c1#.*#F]tcVll]tQ<0h?7`"r&^l*s0G-&Eq'_uY'H^no9!nEKiqT;j9:dHYPn.BA:Nq12$SfkuN_AY"d`)`m`VkhK[_
%PZsG1&P*SZrFR,I.Vc5trMb;uR)lZ2A#T'$o]<FN'O'A+#%<>4PKcm$<T$_YNq=`CmZG@%<L3eqm$dNHDm^HN[#@n\f;<Z:Ob`gM
%EkQ.0+>]Q$5g(]u>%6A`Wkh]laM`jD,YtKbS("h;9$[Bu2M/BUGZE0\quYaMR=S%)HoT=&c99t`dk4KK4LD#)aC$WuOTtQH!g5$k
%EF@'TGr*QL(GA$=F9)gDj[U5KBj"=[Y3c;?WcRa.hXc:IHfNCUE').DY8cnGg"=@+1l/qGS@ngaViZ\T>:Q>FWq.Mje?lm]EA5N.
%\JH&31i4dk99qd_L/m>9@IB]#VCir2iKXbc/HrRfGA_^9f8BQ.`:#>!nnn,<<)(WCUK3CR\T27ODjeEqDhDih@E"n+*DFRAMYie:
%i0KL/p4[cG/!dnNVBB'>DQ>9'.$Et5&0"^B[Xof4*&$n1O?q]nH*_(K3@IDB$>6nea5',;'(1P`l0GUr$DlX7J_[f17fF#m`a1h"
%<%AVsK?U\-&ojP!8oZ:@^D`ZqMr1+`-"ASel-Q6U_QtnJ(BW.kRV^E]kREo>H4N\;jrDaLLf/<XnBbpNPLjK-go_Y7Re3PbaP`'`
%K.Xs4^I[B&`qTZq$g(^>mRJ$So1Y7h%iR6!*2F!Q'1`=F3X&W'[GZMqDS@mX1"=QU)Dh1Y55XWV&b2A4]P39;iRIUJbIcDGCJ:a=
%W7(TomMTc1GIf:Ai%Jj_<kitm$:X$j^nKseG%`M:iG+i!jD??oc:rW.+'AS#TPnh_SYcY9"C;tQGkg#Xd()R?=.;,_\e;ig&BLq7
%50W2iH@Rjhr9t^=35:LMQOg6cn'H]Ss.Ug85rMUX(!V^t"Z5HeZ$]0RiXKpAFSLc6UW7#"i=7P;UN<3jl7lai%iOm'Xm\-Yk0^'R
%?+nQ&4]mubI.7G'_@OTL\.6`==VZlJ3s$UT9DHtEIi+R3nKZc@K@[#&:U+AuL=ljY-fU\]H[8[e?:JO`E:NkOS*(gp[lOH`&^*B#
%+'SJb.c/.8WR+%"j$3D\EKFlYI68U%LPSPl:Y6==]"6`FUalkgb8K.'?I7nD7]au\U_u^n6V^n%h8"DhAn-[$,[I/,c,'N=&9KBn
%,lS>d=e"Pc=5l<@ARu(cOTcTi7j0_q*%1b[4U&Lt8pKbr'TCTX?bO0V(bUOUo7sdbpnki94mPI9hJ[4RcbDHF<B*ss!!0\tA(P5+
%6q!T=)3240P@8mM+gW]#E4&,k3-ag4nQK&Ppm2NM7K[G'6T->'YmDp[JQ_aXf-7[@LfdQMbui:desYoaRr6*ccelBJp<Hh$).Ae@
%,=@FOZ&<Z4XJGYC*:$*Q@gtO_A,01%H4s>0AnK1]UQufsD/:C4/"!l)-<=?]&u]PbpkF:d&nQmL+XT?%-CaH$QCqUf/HadsBVT2H
%$#A@/;opoD$5HZr'hko.DM8g"ce.T<J%=qhh05r1NOFHu]n()HelPZ58eZ!]f5K@S<k,`E6juHkk3=M_RVg&J&%r28LDBP1X>=)?
%!T/PFTE0k$6[7IeY_cU5g'9/N_6,\*2<>(:Zc8B2D8M1l?XE://$dN:E_3TK1oY)oYYnT>rH>djCB7)]BRAr/KlphQGera\ON;k>
%fN"-ui[PLh(:!"n7sP9ha)e<po&(([Et)oIk0T?H92n&iBW<Dgo(5Ie?mX'k;(qsLKf+cgSM(Qi<es45>l'7'hta=m7]ak%c*)us
%P&C+N%BN>HXP%d4Zf[b!]e%T5:QH"_7]a)-aZpMTF*K:)iY>LI7RC@qDD.pNS$?#lQCE9m4MD^!Zu"1/HJ:'>">L\E88\mK]=?(&
%``c*tg99*]0,q11e4(`!<Y:=Eq#)AgbA1L6%V%.Jf!?7[ebaGnMhM$JZ*m:HBV@<*jXj2n;$6.%%@1MDjc*B[=!!P[q;TKsXO.Q3
%'tUf<KpoJ<D$b!umnc_"a('gD,-6GL@4s*EX^H(mBF83kYBc`5qZfAr`QRWa5TJt;G&bN)it>DO_PO!W#b8Xs`0u.j91kuCk%?UZ
%,K/k9=FW^$93)h.jB7S6&QDlkWCp.-H@]FL'NfuTpG?j^L9UO#U7"Y#ehc@mW6PMi`mj)?.@OJ>ES7;!`khC_>/D2kp8U)giomk;
%kjN2b9r^R@@.D85b!fA3Wi$BZq"RnUkn(jFo1`!sNW9pUXAu#UOFu)KYt.[Jl&b0Z)91EhOj?L*p!_%0FMF37RfGeJ;Y4,`Bp`it
%hR&mbWE7j>WL@Os3CR$l]:-tpY/pj@rNoMha#6'qR7<W\VJ`<1d6([@(=-o2imYX/,GOK$`l5mQV5LgPWd`YNURgM8!4Q+_,6$Be
%oZknT)7?)#B;>"IdrhP$=^FI.Ra'`DqR!3sFEC0OY;\UM0Prqp-XO3L"+m^d6-Z<=,*9=dI+k-5R[#HuZPosBB;an@>cQMO24p1k
%$PU7.Bdk9Hk(mb/%i2ETgps(=C6,?c\m!^l$gDBFHbMC$MljI?1URMh9j[#9`?J:<o^q,t=d)&RadXi,b]oWq'\V-119:=IT"O1>
%_(EbJ+e6C@3+MTF,7bn[IW*%=0DmG@FCuO1pi6V`?K;NKl;GJI)B/u+eOV?P-uU;Gn[_52%_+sq0G7t^SF#@BQjeQ,9fB&"eaUK]
%1<o\VZHs^9!]^)?98$n!'CRo2SMTA853,S.DE1bL3AJ%p^e1'?2cKEA&IYZO6P'*nM&!OrG?be3QLA0<2dp"9)sBW#S&g:cHZH3=
%k*ZWnpaY*a@I74"jqZI8Gt9mTZ%-3#jM]*lph>;e^acQL*]1,'%`aE#=;RYl8hH@iqGg4DWPtnBeqY&Y>#"fq5T'qXa[N1_-<?L;
%$o_ZZ2gRDk'sfcN\73ot15]!eZ,.W[V3!2J=l;g=(+K<9YfpTq]H't)H_$3F45ia%a(t+WVD'nHTY[=tI?Nhc"0.tl/m/3j21sfQ
%@qB?[G_>pa7s5(jVO:[kkZ(7t@ue-%08Z[Af9/`-W4W</R[?.]Vm:%NllZlhT"Umb,U.r?/?iM]%\iYMP=!q6&ikmBii[;7"r(;q
%0W^!2Ll5%t&4L.>)8NUt87sNtQ\I![O@j&k-%$K&.EDgE.pjh3I8^@mXYAS#3u8;<1BLQfmomr2XYMf7\;uo-((5G>RX)AX9VY-m
%e!L+RBisc5%;9_2:"V)&d]0sT.W-HM'//tLjbiSt\IMuBYm37f!i74Ved@?s-q#^MA_;YbmVXbJQP;J<.>0GGNM[+]_QH[n:kkK4
%;0VS(l3`4blb29&oQu$gDgHLhk#oY)5HJ4GkE##3LW2e:pHcaipmj33AH`(KM"G2Qr13a`=s:r/$8#]f0V[0h;SN/!Pt:>R`63E3
%qHG<5$4XEf6_qQ4fA)P,)T-RXgu=71^1Dk??$RMSb3:?6igZhn.fO91mQj!!QP0*&EW1mN<cpL-O_bAk<]KZ)`aH))4`o(oY>nJO
%24`'MBPt@&-4+:BpTd(9-_ni:]K*'$JG31U;7WSaF_3/ldR+J`+>a^L0MUF!L7Bd.d%I4%U[$6=2WLg?<](hE]dY>%F$0r)nsa6`
%=G6V="Je`co<$Ftj6dlA%:>\Be4=?iC[(rEUciq$.Fj,Ci<p4]WqsE3+;?prWA]V(hJ1Zc@EHLnW"B@U#F6c[At-kp$4Quu(bOP<
%etTK&@WAN.V,u#cH>)/K(o#9T4UTLlK*9FqEofG!63]0iPH`S9WJ.E"i<&(3;&.ld4I,?-W`N##D7,j"BRg;jI.<M2#o@041"@2j
%E&>S1W,d^3dZ4!dimT3kaI,(6=Go)GB*8PZ:::CRU'tJ=VFQT!qY3Q;6LLXXDp?DMdP$;uO_i_^o_,LPan[42Fp*2bA6PK&BhX^p
%\*mbZ<3`hS`33a]6:,OM'Q3:oO`U%Kfj[=lVPWa:7_OZ)k34="R"!oa9](>ikt%_KN1f-m/IZQ*cinl$dEA1W_gu#]dLR\j%l,Of
%>C(%$$bZm(2@#5\h<&.d8.Z[n)#[U1p.2XE"%bCsfV4<c5;s3(j='FS!35,-V;XoL79K/1;X')j>MGB,MQ<MQnp"Zp-1NbVG\)#:
%n?)m/5I\=nU;e<n?<C\Z#SH`o5@e@/cB?-N(o9Jj-li%NeuV"]o?OptDH$$K=E]p>jI3O5'U1dk$Ifb>lN2T-gZKHhRHoao@C*^G
%.BcdJs'C<#MK_*0K[f?$@ogBd0=-90b/\hn^.8UI//\55)Saj8qW98_/q.Z)m$\h9.^Xe7b/s'9Mi<&+a^/"Dp5NdVU)'S*9EE:O
%qU)$)Gu_qNX`u6aUc[`VQ^,D#FtlE_bLIf^p*7LINh?e>8lU"Hc.`RK(O15.o[J>TpY8mZ6%]Ban3MFL8TKM;Y;t>*-k_N_E/jZZ
%`L'A;D's7F<<lMn!MoZ4;(#lcWImJlUS'#,.)YE4>hYesO0jHnkc$f7%^Rfi@CG=2dD<Q\[:T5S<do$kldTs7rem8-D7<^8n;G`-
%\Q$2\mip&N8K<tS4puMDQ;2orh.6pV]i=mGmiolPoRY`H_6'Tmil2W/]I?Zp]9[]j<gWTr/'J1P=aIgL$EYu*L$N#&q2Q"W(\l:L
%:("a[!bT5e]R!33bG9)5iV-(>;Wd_a5;?+B^&>#^/aR5#$@^\q_o\Z`M*n,CW\*`KiG#kh]o%ks=_4&F/L00+d>"X1W>@"nh9s[]
%XE1IhJTZN>qa/QaPcKbs+c!4C%X=#MD-'3$)75l6Es=4^=*<*912*$@kM=JHg_9BNGX&`:W6*;.g50Q&)@Y.u1uE'(Ag>?bFdn@q
%Z8Cj%_M\i\:%De\Cj(SZpGY<Gh:0Djd+_@&DDs*3p&b=0/84@WDVM8n&Dg3eDP@Id953;<d<=iaZ3%X"q?a44W1tpp9(''7\IdiV
%3.mG^;ru]lR^?m68[\]23HgPYOY-8fJrFBFWXcdB0'.Q^N\7i;Y0.m&L^f('S"nXFR.7TOAl?+WKpn<S^,>n/beG"IK5&LYY0OuV
%rq8E0DO#%2n5Ob3^;i@O?5-8OU'US*NjeAU;"^Qn!=!\RSp>h3E2*'Hm>Jqfj)oK_gZi)apSVm"O+9Q`g-:2X4POMq+t;%%+":,u
%j.:nL-&));5:?:D]2C[[D,&L>+7JhKi1bqV<0ZR,cU\"N[LYoHJ`__Lg?or'\i&!"cKKbY>=0G0E:aZfg#O,SFb.m7a6/M#o5W#8
%8qjFMris/Nl3tH)bXOrF)bp>L[HlW0[G'?>R=9,p>asUp(-+<2iWK!]]&,?d<LL5nH%,dm+BXedjugE12:$IbnHIB`:%mBL.$1<M
%dra3s#,`(#!1)L<oVmP)!\kUZ::8_:acpZMD1g#V4_pW=j4,4CVp[OKI?/gq9?U8ufc$b.R.^jg8d[d;cd9[tT=D9Fp9o>D8'fm"
%ljBEUT>`E55=(VlhN5H4[+<*G;P7kiH%=P4Fsd0lFf2E0/Tcu/:p7*QEg*UbK3&O8&Ze_c-6=ZfJ<''B#"Hr"\h.7ai^rrQi?>q*
%hW&uVO`!;)LRe"_36o#3/0@.KF,ojo@9&iZP>(/#+6VC-Q4Hmb;i^I+F&)$Ph]hUciT#=?cgq#]*F8U%j*VfN0$j+e[d!#8pDiAN
%I[9H3`@W<!HCSpN=h`coVso0%38aG9I)r2`N8o;#CSfg:Xg.<iq;Zkg^.l?==Y-F`*Cd'`o"4I/Gughk&db8b^55<6X=[r9[Q-u;
%SKMUqF`&]ogUa.P]-+Mi+IQ6M`]I>"'c9/H=71RKqr'V>V(,$<n#7-![*l<58)0UA^"ooR/`*aN5ER:q'Z))Gn+?"ndAfpQ][lWm
%S]VN8I#:8dqT\lA4(Y*YMt+F"jAR_5Hk5861$pN6D&\f'q7T3=]+=@eR^QF=F6]=OT<8ib$+jEg]>\=XrY!IZo3-]I8%CYSq>DVS
%D)f6*i%b9$Z+E^L0#-l-h.QGJBVnYrf\I';[[%0[I+pE.:[gi#Iu,^L;(AqBU6<tf.&Jf`RB!\A]]&174rrWmQb)LicrC#9amiu*
%G5N<RBeG=*T/u^=RB#O.OP:.[U'bSa!!'dB/<&mCZn2WE9.-8IKr:r.$>=n[PE+]$-=-tV'oqZBO/=ssVAY<6%U\E`;`N[rTg!Op
%Yd=<+NEK-=dQSmgg:$TZa/p5:0b)B2@nOm>HKdIj[:ACuB=9,Y$HfC3L,`&>%/EoR;`j:B6uT\8OIUP#Z+f(<*RWOu0\,_DltofF
%U7]Y0:%i3RD>V0"cSB@hD%4+EVE2GT^45W#pJDY_O729AF-idK@'s,"[,:*A\"DFPD0]R0N]oq0*J8S]??,c2[V:oJpSo$Z>!=no
%.a,XIDs(9cK:75T1)+LEW/]&p\G[ln\[XkDA8gkRb&/Z90teHeVA4W:mIXF(Zrjmgaj\Hs[5kPY\F-4OSP9t&+DL"t=&]X;*$L-4
%$^2N%VSR=MT1MJZcPicb^K$tO*.cgm:etMMITt[-]]jOo9[NG%T8M)iLmjqmpYSWD\\Bjoe&Nr/[3/H\^:k[-Sm_0g*'IEcNQ[lS
%3et+O9SAE\aYt\f3st_]lHT%?IY"-0Wnh<-[gbu5^%&7,DoQA5lA_+,BiK#nhc[Wi)&rMEm,q>dr+Am1<EGGQ8+ibW;`6"S53tMm
%r*l?`hQk#$s#f*)lA`:_DV'0D+0OInV=2Jqi+MOkbNY\WekY:EgI),S$nCGss3KPKG.4S!>Jo@E>5AbmUCo"4)PQ,c/BbJlURYmu
%a7cbhgQF\nR4n#IIr"LfJ05/]@*kJ7?(Q,(YLFa8kYthrn#DgAQ/[tpTZ/TK3=X[WkrXNrZ2GC$WH,ia]DQd0r0TS*a.4^S:Bpls
%VH"k-:+\5:iVr(c8^$%pb`4hGC;OO20Z$9_NNKZCW\l%aAe;q"m'LCimL[Z""@flP;U+h="P/2R@W'1/ZaQ9!GPZV\#P.dRZ%*?W
%!SQ%Y7e>Qb`JDaN0)MLMP'dCE?LMRW7%&=JbddT'_9BR'*02hBGqG%H)`_hImRe"%?57X&E(<9*F1YFpV://+R9)at:4enc;?o_T
%M:>qq:"@OW1);[LC2Nr1R%H2kDlPr<I84,f4"fS#FV>nsj1_Q5>q1QBHau/agUPVRdREZlHS+IC+QAfkRdc3-=$P5C]c2#I)HE@L
%/WQl0YBKsl3qtX$Fu1(');l)iXm;\OX&;^qc`ae[D-2TO'XIOp_s$d#!K0hH4?i(FB2>o_cPf?Q)DTrMjb-$?PCc-irnq3);cUkk
%f.eZYWTrd_8TjC!M]2cn@!.Klo[<UR[@t2;G>nh>5:AV>HN/B56\3KDnf?nRY$lWlGA,;SG.YCPJSR'RgOdC3+gp5_X?D>eA_PLf
%PP^MRpWgIQA@@L`P2/4oU!g3mKn8N-g,tu=8bVi'8W[K1b="n,i2o_,,`@]&-cr*L/s:%S7+['*AC%lhn2:OT7HZoA;u:iV<1LuF
%rS:jK5^UNpj],W&P:,Jb?CQe7ntoSNn*:hcUQY1o9\Q:6H$*uM0hHXhJ(9"MECbB2+H$h'H2TV?;O@aVX5:[\iNh@EG@3&7!\;/e
%r$q*2Nee2HQNMk(kcImWZ!OrX2Qo/f)p>'\T!Ys(aaKm\K-M&jdacGNG<V(7p:)_=SFh^?e\<WanDJ)qm[:tj%c"JY0)DYloG2cr
%;uA\\K'83kT5Pc7gO$DLro:3,XmEpIgT;h^*c.u1SR,X[HEs(/Z4?fPbK](4ea;G>mIdmLrqcKFdN+QXGl/f$S1Yk+H#C<RWgsjT
%LB)O8k#LkZG4+=S#9?R\G1td&rVLf^Id>E\j3R<5YK_I`7D!ooO6h(2DX6=\q4MiVm[gNQ-MsJLq-L8&^@+kk]@k7t:[K_&G%KX.
%G\SVn%b8+JJraIag6C/;SF&hY1X2Le?+>(N>;*9hErQ!_jO`_SAA?r%r<RB"qN:`j5C$0"e>^)UiQf:&O1iV`#Q9I<%q"sXlK5c]
%2p9cUk9OCoZ<,rVHKrDN%412g5G(19m=(mH$WMWJC99+`f/rpqa2`H$jTGI[^J&j7$8","_-=Ya4"o68g#,oRd,(46%Mk)9_"eKn
%IIE4!nN;Ca7%RTXl:VVQ^,<TQp4'3un'mr>IP@L3kjj%"MQsoZ-WscZlA"pcklLVAlV:GU,j(1JRuJ?:<n^O!rjD5bXK5LR'fTg<
%Ai&^a(g(I*RSEN!.pm'WFbP;5<7V42L';GfH)D.-o/Ppqk.uRW9J'Ld)u3qu`4i6Qlj?1?:[G,kosLjc'-['Lq8[M]@"Q>2.TTn*
%kVXeu?_=jk,`-q47H\3<IH.lMCD6TFCm1k.4XRG;9l][(^()SG$"@6VX05FRN(<68ZE=RkioGoD<NNo8'R+$)5-H]LZ2+f@n)T:Q
%<NNotcXp(n^8_oKGP=L^I6GHJP:$!']i4>;RNSl=C(8?_WsKC8W`XZO'W=lbI8sQIrAA,(K8G#!K>h=5q`;@+`h1nZoiDoaS[9<R
%^*+h?*+E7iX3ZRj-;!R)@eEGq(D%RAfN6Th"_2+K@UEhYMI9(Q`ldM`^+-gBlEAKlC1@qSW`XZiE1TW4ql3\r(%IY.Z*-:JSCL]i
%p?Xda2>KIb!r8T(ql5B-eX=7'-t6Q\48#ijVtuKcgMOldf^1o4lK4TTA4GAn<5u6c,7Ke0k2b]u@p`Po5umi/W#V#(i`Elq`5!jO
%Fie^&$^Wq/\"c^K`bBp>UEU"@TCR0me;.PjWNZZn'_&0H2smcugBI)M4]MTlK$H2iI9rs54CbmFijn=B1p)q5m3^;f\UDobA@EA\
%+.]u.2n#]GgME8:IsiU7m>9phs)u"idRH\hp+?8Fhod`Tn\<Ycku[ng2H?bYn\67;d%_BVS*EOS:gO*>3'U\;n\6Pd8j.:>:rWHl
%gTths^Wu>ti8T6oF5-Z'1U\g[/jD30478T#@?,PHOIKDjVu[h4O#uC;s76[Oj1@K62Q*`+]Q"d12`Z;]nX?=9BVcNcB'%mKJq\=&
%T!d\bi5S&1\.,7b$ZLq/W^Xe(7qpDBG5cM0WsPb5qkJIQ"cR=_pss$6N(?ne!'hV1C*gRD_EQS(>"NXT5ihkum?E3d+^tpcK!Vl6
%3]e7Lkf[<1*S<l(f'K=o6>O(LP*;i^3L/3XS1*.dE@26K\#2&Y._R":WmLWHTnqY50Cli""C"BINLo@L-T,PCCi!.N'dZB%gjHTm
%%pn2XaU>[.=;)gsFJa2`b5G/+73TA3oI"/X;qt7Lp7OmjGu/(i6Fi^,O,-r*68@$*dLnSZ\%j\DR@6M^"0Ji[:W"hOiWj\WINF9D
%eCSDZn=]D^;%-0m=NIs:qg!QIRIf'.pTMJ#4<.5#Ibhd:0tkon7-adILe$p^J&@eshKAjQ;:W^cqq#8'G*i1IknnQnrL4_#JD^tS
%G:ut0./hc<iAj<^^F:ace2noOJDN>D)a3Kc%>=?&AG\RZ&"T^PdpE%o8,;E)C!tb3fY4P=G*P3-Yom?>qXT'IKA\iJSH*A1H>-+S
%dD_+M(g2Q:E*u1GfiNmklpC)ubeD[YJpicC_mAg8bV"(0a"+KeN9MhY@'0%q@ONF#[G.jTRJ+(eRTZ+N<Oc">UqOsJ%2H*6=.PqT
%mRaIK_]?G@3M(YHSaDVa<$V?I4koQs>qT,A,1X<cSi<i:AiSZ7MrBLl;e1=N<Z3Jd5E`3-UrM&A+DrRLN=Y-oB9Tam-HEaSm2>G.
%l"Tg9\%BOje`uO%7rOS>L053%S.P.4]t)WK!7[_n%-HAh5s'C1Mlq9hL@aoB-;Y-"]8Nm+4"3Zu2%R5m#k$OBod:\cc2-/BmH5GO
%%rOVg=C-7MjSJWF$]4e'o7?H@?bG7l(gaprDF6'$\qA`a/cVZ,&pS?j;>I2.be0/2cZUCp4^7<Ml)q,&g?i;19pN4c]d\NQ^YW<P
%4eEX/"nTE0LroH#l(bdJD'j-^DsVUbqW#,g+1CoBDk;IS[,\-3&`feQDLH2Il;a9jXq+%j6/7rtGB,^WFBh:ZgCDZnh!FU4_]Bf.
%\\;YMp,Z?4$AL,Zq9HAQ4eA+4^DPe]Gi+FIpTDh@DdGugcV8'N^PCuZp3<UlDPMN$54qdn;a$GAfZ&-,omZ2gk0pI+V7hDo/f$Zs
%9'EJSlUr7jo97c(;7dn!kV@BIIq?%-k:gUO^7T;O/l!;ZDUaMq.,mB)Qg&f<ql61=X<p22ju&`G%ju5D7;#BG.-l&i5JO5AR8Ujc
%neT']OMJ!Tn$HC-S=:uSR]4K63Z0!RhF"X6ncRJGDH0TBE7NPD>Rm.$`rc<Z;t]Bp21So=l#?g@TQPEXhGlRN2@)T2L]CNj"'-6[
%I9rr^"ucB@nM/r%%Kch!pJ08aj\a=JpHBEJs#O-`2EF7Xk3EuXm@nB;Cu9>Pi_&CCC;_+tnCr93lBZHp2\rpX(]^h?ZB9J?RgHU$
%heol]JC4=06RBG3j%nF"7/ZrL-9]fEU2qRel&Qb9FZ!8`?uAHAC+;177SV@B%MY`q;ENtjqb8?`p!tB?l+O4XIE4Q]"Q9:PdD(EV
%)!l*>`!D+BQdkGPM10VZLA:%o3uu6aoB^!m0D_P[)k>$ENL)UqT;u5U8c[)URfh@<FkKaI9Sp>_-P]!eSmB*QYB<h;[b'e=&u\)g
%CicSuXF@i:+`;"@BMu`9,P)NQ(BDpeVFkECqXrFS%.q=ORqe'rd9Cf@kY[,g*VUPS[m=i)TdFVA"E_^V)\<#jC7%*1le[iV`FA7L
%nIAQ4Y^G>e5Y8'#7r1D]6W4W0?_X!MfWM4b9hF[b`NJH\Y!kp`b==+B_P-iDWmG-2e>bDQYq@+Q5;ta/Rd,6.fKt4U[qC+]@U20,
%*D<sS-*]'EEDQqE5:(;<?`/6US](q!'!dMfE!F8g#B/f,jKX$M$E"(Sba;)/68*.mST1pO%P[6P'eAWZ8Pcp"iD=F(d>J`7F_67f
%Rpq*=f@lW-/$)dEl:t@-8$D(@eAuA^>f"<$ZW`>ln?=IG\uQiP+]Ci[Gh=)^=\.ar$Qf!^h!>.t:q%g:eZ)Zd_nfKX-;s?;J$m1n
%+o%X=cnIM3as.]bXO?68eIKbWK!>Y(QDUj[g>UO0KX0PkOhEkR6PhlO?gVfIm/!<fi8L';cFO/iq\&u&0bYs[fUjKe'+?t4i*gK:
%kBI.@gQ"]=A#FW?O&5>M73\hEq>0Aj_\>6"^RCG]bpW`+HQfAqg0pNh6*5`orNEuiYj4RY%u7)^3&W"rB=5XV$JsK-"V:M);M"$M
%Xl*Vf0.fcP5Njsm_8@1cEtSWeqm0eFo7$UhL]('WARU5J7P8r<24JI5%f<G(.F^/Pi*lY#LE4t"O:^lYFnPU161h\/n4iN/F(1Al
%l=u*l97\,f&,WC3?"VTb"V3,0=WFpTL+df(^R)Z6P$n\=p9/Yl02abLjl2q?[6p3n'.A+X^Y3+6hi(k1E*.GA`;&6OC593.g7X%Q
%A#eg:$Qdm!;`K6B_uA0rl^PBd$6B[[Vf:.;L[DcsVCV"!N#B@f@?pG$\0O>I$6Jn"]D7gc'Kk_hm;S/D>G%qQ\(]e?WR16="V6A]
%2`5Wl_[^]t7n@H26nW@Y_8B-\\3h#om*gkQ[lZLB.kc/"_[l0d3]R1Pm"1##ZG_f2n?BYHXBjJ;;=LfI`muobWiial$6JoMmQFBl
%r.9_&Xo#9]3GQCJW_'6!\/_7$@9qW/b^tWC+GsYF4RCK5gSu:&*]%EE_d[U9Wu[K+0]Nm1lqc&H7<-@!Gh>7?;kCA$$6HXj=JnB)
%FNp\Xi*lZ,`70=%7^WUFp9/X!V7D?#06il!;`..u8(`UCm'9T1=1mmF="":<rmNor=`<*ngm&nCD7sGQ3So7c]7si"O0W7sl*Rg&
%?8o%e-ja:bb5#\pG$JhOS)7Fk'.hs(8;`\Hf4M8TS/`W+-_G&4R^kSfnESka@-PY^<'LFbf?Ar\2f:L*fqXt3rDu3-Hi3[tTY38o
%hdd7icHeD_c!=ZQ\JB"2]!m"bkHD:(k4RS$.mL^S\_sXig:VP%rm++)c`asad^U1^]=V9#RWk4@1\&c8kl'51Y>:KL5/*LKs8:s9
%?MsEJm(qQqT!-F.)ulFTnd'^.Y?)4;^%d&\4F?_l?2F0Pn]F^LDs$l/ji\J,m*4VNhlgqRReudRr2]&Yl[p]m?W'U:4FQeqfh?JG
%mE/,tl0#C,C\I<kYdJXe/_KoHs)r?;\b,+\pjG&II,^aXgmjmaRs[2P5J2;=n.M?E>[M5.Dq^cK>Y`*3BBf3PoljBnbKa/oOPBQ5
%='tC.b?"?Zrd`(;r1gYX.(B$<]t$,;]!?ChC;)YP1>pVSa2dnj9]*+(T&%#+nDO5NQVVL(3'(B_g0=u[:VY0sI[p3>HL'sgXuc/i
%nOI[3J@N3]A4Y"IDEW8c0t;2l;;*(=DqF-$F;uMCgk59c4#Zh#lg7h)!%K1qC,0ZPgN*l<Hi%n8HLgInB!Ai?Hm>n?[N9)Q/'4!/
%m)<Zi^S^blM2Rts=$(Kr`\t3LbA6top*>'1f3C@bK%'\bBDr#c2EGUh^8>:@m_2u;\heEO&[$T[^2pT+kP=^n$_,IKCuZl\qLc[4
%8B$MP"h505*p4TC@-MbK8;DDe.\W3gk2lLg1J@2C9Mg$\^S^TJ-ArSLog=2A^;s[CJpVVk^TKNeYAGk.D2*8*FLiJDCb/nG[C.s)
%II!2%]_qS2ri12)pc&5.lu]H+_a=/03t(r)*ua6*]M/oo5:gq>k/[=ribt^dV426b_/ZtD?Z(3Oq]Z"/]uBOa5"-QO5;ZLGdVN8m
%$+s,[_/)'=/H07oKY7+;`/Mbgm@@kT?hTdZYU"Q#Cs5=4LC\8[o#'s4hTMi&4&(0W5^`D#;%UH%q-^(eN;b&*?>.)sq2&oq4?B"E
%d%','#"uS;\.8(sF`Z(tFn^?KO0NKG\uQ'SkPeffS8@"g4*9XkaXk8iBG?=^V7h"Xq5n,;]8r9CG$3@&m^$WnnnHJ913n3Eb51DP
%93:#SInoJ1=FIK$oGj2b(9Y?>J%PAkma[kIDZ@\BHpsXZf)?F*qSsM0c40_\B<aE"Ha89nhk]Y%*WYt/k4GRbF3bd&8LFH,]`,;3
%dVe+AfaZj:\orurfaHKB;sE4=N/of?qY6G]:IVHMGLOXm\]ao?FM9f:5OD`Y^[;oulX!]+c3JX3e)gK<T;)7V]SqcrI'Cdi[fH5N
%n#1@U0,kj'He0lUq/g`Sl.38ekasIWn]_j\]s4X<>\XWuKKIf.47`$o&mc/sDO$u7WnZt8Ji8tPr:H1aS#Bg)Rs_!^lQe-uD'*Zn
%IIZC?b-g=IdH[8=JQr]TRog0<_ccD*Hg/_m9:PfcIqC8gb%h"CAY6/"B_fs1qs!t5fr(1^?2Jl2T"D7NZ?krYVo5-1R@ehLDL)9O
%oss2GD#fjIXk9K5kE_<Y2p\V/*aHTQj)`D'mAoDNhVZ"rm`(G(nDLV\`C+$1-]uQTlb!#i`G3\Fj%4p;s2a'CL0=_EUX<mNL_c0B
%1,,mr&]-lW^$Rg6,eq1o_-c;rh="('T9iVkhJds3LL)7DS@`_(bDXh]!D`Ks.!HaI,CAD7k3XYS>Y`,K4*p7NJ+/5knsEB%oSmsq
%fS=CX4M#N\JT%Wb\Kgjdp$Z7]__tMrhFO8UYJ:+KqQ[\ODsRTmr8GqAKli$Wp$'2JfR/@Fq7g7\oe[8El\jI*f:2\a90WRcs$(:S
%kDltn=H*[=<p/5\O!&6\cIYl.\^S3G\X"<bBZ0_C?;a=SQTq<JhE8<;X_oKm.XYT->C1kgr&t%*jjNm_.i[X^(2n%R?TWM>o(Nf=
%8cBVlhTF-a0Vc(^$]dKS^U\cAqs(@\@`p[)j(G+UcJRuuWUk3:9?\@%jCZL)IIL3A\?L!boB5EiG(&E,lBCnMY;`p4Hnd-9=-ltL
%0cRU9I6$!73&GFM'LWmIUu+\?cscD=lj>%]XR9$5T56--H22aYag:.QP[-GnNk__\r\a:-rOMl?B6/"[Ec^j6a)dlP$-Hc50@c%8
%IXe\aqW^^*Mkod9Ff4cocbk`So@if<GGfB'b156R+19*NE583=hY;5-VSfdh`$qG@/55m3+$L:Uf"4hfG.hh>?eK]MF+3UimHa-*
%_r2ZMI.bLUDV%_Nl2;]Pp!/8Nf,HYe?N7V5AAeDJ1$]ZNgVejkP0L+kepR+\G'^\:D6I5_2ibT84Etgn!M\$jp=Oc+os6?NXocqY
%ZMnG$ddbJdb:erYIHCA"na=u?`U38tpHMs<Oa2a8D#F8$j:Mpaaip6t)o9RQ7iQJ2Y<8nkgf5#Z)]g6L\PDqtVj!%gX2Bqqqo_u,
%VdEhfd>ou'Cq"9je<t,3GtccPmHX5c7dKa`=oJ&ij)sY0e8*YSVq80%IdPtH&[D1WB4^=Lq9J8K4EE':FQ;oFB"5O;D7]\bc/Z97
%hMO==FQ;NBZPTh,,Hl]aV3<!n3PmZnXa2<n$;Bg=pY(3_]K0F@P4Lohf@R`C5'joi9J<"H-#?'f2T$&-*`FBM7X9*j!R"t6`[om3
%a+^fTj5'XqaH+V:/WUc+E"QoGUP:k33d,Y<hn@K.PrO1\]_?OYGI%g0X\Y2q!`&6:l'QebZnkNi#4Ak0dll32jY8X4ggdtH+#R?(
%,HZ(<q&4a\NMjbCT@Q&9U9qhLC3Bdbg'kc-B("O!Ch@+j\Uo=^Aer:dHi!'`r)u)/GeNotVQk5g#L;-enqRF6gR6$m0-8FjcE6S7
%M_bgoGWR_Ujm^8`j65H;Hp,:.QdmiB)\h2gEt0j=`\3tXm-YI52@Y)>@.&USJs-WDr7C@$=F%6\&]a?AT3V>-G2q/SjL2/2lo?ea
%\!i"\n7QMWQ9JY<3Yn:FFk/S<?B:[e=gsEh5<DtmG3A]R=be@\S*uR<T53[.f3b-<q:)B+l!2OhL\pQ&=0B::r,/;*kl(&Jhq*oQ
%e:)/+<YU"60iZ:68ei@PUC6k.GFL^lN_3GqV0brs'WC!QHpZFgI=5R\CNV*[JM^deW^GbhIPZ^V;>3O5XL2Ktm26c-1\5MqIh]oW
%m"g#&c&<Q]p,eo(kE]&72N_2j4M=]XDElGh[q<;g^R>&1>6`-T"*XIa`JmA2mLd!6?I$\nEu8c=/AD"+)nuS5Ma)\Ra/pM7I<b00
%Y*8`=F79-P1Q0T9DXtMepX.8CDJ-RoF5K4s^lfa+r:[L34(PNULaQZ\p3UnAkc,g%2tu0IIU+u1\b'4"s(HV4X7lGMs8%/mG2&#O
%kahmBa&J"#K[$h2)\[>K@&FGT32HJ)!WI]`G1sin^G#OF&*<Y?besFlYr+'"Zsg/ni=D>okkaIY`')/qF3Gk8A'\S]%<KfaI&];@
%*5ODe:)cg0e2_&,aL&ORXu^+h:)cR=e2_&"$uYPp"#f/lcYb*s)&oipedTF?kA.^(<Yp5g/$&OXmqlnm0>s)hMr1^ChKZSRqIXk3
%H%0bomjC?&DB?RgE<#4/H0.$1J,H^bYrod8\"5.K]-B?E#K@#rj2/o<NX:"gc8nGA8)($W,?Xn&PW:f[96tglHV2cONh^C@0lli+
%1O5m8g[jZ*RtPq=J)g:rVmWS[j(s,"2oE-Y7sf?U5Aa;a`n>]VX6dH5J!q8*T/M&T<>1D!qtThMbE.:'1I56b>Wt,Qs.$e`kW%hR
%3dVk?T*l^d(OoaNNLp.OcK0r("q8-"jY=mJU\WNB:S.RW[[-fR5Ae*'Oe8dmeofkN$Cf5FlX+71c.1Y2/RW08=FMu"1huX`DfNRf
%?>Dn<=9F_8bR<%:,gT!Rf_$7=O67c(\c731>+<;OpE-V%Aho;"J&'o,4T6Q!?f>G+K4>m2h.[O)jEc.+fSeO7^]5_kZcLuHG.P?5
%(Sk,/!e:>*Bf7##m;7lo[Q-0/b2<,cc*tUjj%ecA-bN;5pTib_]l<r?k/Z9DgV6^:(<rUiGFl9c_JoIqLT!)6CchYQq/nXbi-e1U
%jd,Q/Y7D.mQ>ZCh0>lP@0sGNWqX1g:R.[hgEY0[H[qqgFMSF);]-#[ADnToYnQ>\XF=3Il@dt/1\+T003;78A"f#MWgjJuJJFPP\
%g\-*AqmN]k('#CV1b"+&S`e<`G$W0+36O8rV2FD:T$Qk^d_;q3IqXFWpu$LC%3q#h(2*S3^&%+.=T]S]AO3*h&77SJH4R3*%Y*,J
%YNdt!>+6<ahj659VLQ7eql4e6c[NCnkd;7gd7k/VRb\sEI+!Jgi2JLnS'f?Y9DR.N"fq!;lZL?Sn3ct6T7dq`RY6UNB&9RqJFa=(
%[H7L.oX0p%R!!q$*]?b7([R"1j[o7?l@(Go*<ihdF2(!?H*Ae0B4q0*ln.+54&o?WncQ!iSLH3b4ph5^XIb2YF8NnJK!i-N`B7tO
%BqG4bBoUB1C"iJ24_)t<?i<*?^J&nop@$o+[2CTtSC9D-5<Wg5O4Dd3he?AEPW%X=5,pZjH:^O1;l)fop%r.UP4k*es&cYrS"btW
%F#OoT)+]$WjrIDAcb=f]Q1cm6BrQ_R+!Q?+is`k4aM'9P);2I%g==%=I2(FWpq<Zli8*)Wp)N1ac^+<;G6dq4d(bY4p)N<C<2LDb
%ZeS(,'q$ZBboRm51i;^/fgfh)p0NmC.pnA.%d#EfG(@8/9\N$ACUWZfj;-t,7r*JFRE^2)@%6?g[Po7W.#R+,[=<;$[0;2b-Yp]u
%m_7r`>g8hjB5Zim"Q@^k44e,Ce_R?KXe"$aQZ/kqH]KXB37L2SG1oIhC$i;,!iXF?S*RK2C;30M97#ak`p8DoO7;4IHQViH8O7j`
%]]e^WfUa>%7#)I-?da'EA%oT7lYVQ_97"=lp?X<Jk/Y!-Bp9Y9Era1$Ha/dWgpiogKQli1*-0diMtcBMaaaDq8=>FIc_a[713_+t
%.-IQt,2@KGE&A_bcZr6GJ!e2NT5H?oisCNKcRC;?M/pFK'=T>nOFLlns7FV<R$Z_siIN9r'S!eO$T3";iIB[?QLnsB5J;)0#$J/E
%h[3QZ,neoK.9&c7412%FL)\_\8q/6dgMX)O>(:312r.YPrP;gMqJ!A0R/<cUgKX+d\9WM:eQ..kc1T'(+%hRuiCONs]SMs,$VGhn
%F7RX1DWmRN%*#qZU-#b2:`hkQ^_?RkZaBEZUf[I40&@o?IEh+;Y/@8d\3pj]fjDII7=/_G2]b/jC3Vj/rRPcI8K:/Rh2@k*g5)sC
%:J+%0E,Ks_C(V_=[!(+"1r&lps6lM<41AfC[j$,J,ETQhHo8YB>"Ob*_R]'9CVtAGe]Yk$lU<IGgVp'$/f`Yoo?r%jIJiEJQd(j=
%*s<F5C%4R.2o"4PjODhk2W)\RU=(_SQICG!r*8u)\FFMY-gg`X<1Z<KIZ_o?]U?Z5-KbOr-Wfh"I^6pgOnQ&*oiiWT^@Y^FgF$Y/
%j\l*6QU1-TPhXV*]as!9CtG#^r.g98(]:!%qG1?m8<YfBiUHBVc,FMemE3u;fnG+m5ND_/\#I%2Kat*TO3]cJ1W8+*h_\P5[?p%D
%@p\'65J,6M`4n%G:LX'?G<\N0M[GB8m>W0)]mmK&^9QVY[^J*_5'($OSUQKLK+D#rnkJM*CY.Eq')>GS6hI3hWli_EWOX\pRO3HR
%rKs%;TkSOaqCsiD-:61O@]lCg9[*ml2#k<0;h(W`*&OuQRnf/(RpLF5lgWj-rpc=N?]M!"VuF7gp".XW/Rt@nIJgg%HuST9i;]?c
%I,FtsmGR2MqTAHYlJqPA[p6RcYlF[^_6is-]Pm1qL4<e'5qHXmBlbl+bh2\P]D6UHr1iS))h/+)2`afcF*@FA:k+#G+K0EWULT4S
%^O-7"Y;rrYlcN_U`&;3G_;11lYq"!ka[c4`q=aA_j8IR'oXPDpQ;?PQK6:N!2m.X4?2S^2p<&rmjG)F'p:Rs/rFPV;oD&"%@,pA"
%mZXd=X4R*V("uTcoHR6Mq+TKtkmt\.mNb]RYBS;E^\iHGh"'Fo?2V%fURjJ[]8Wh[Ue9%.:Z.V1KhBad:O!E8`)V[)IDS3\i[RBP
%52i^EM5q=2qLgoW-_XH!WNXq.P;'G&O:8<to^/qVbs3Zd;WE_d$sf@c94t><k[Rqf1KH:g@Q42ON7A=Wc'rAJC.@T4!dQDWT'6C+
%KnUnP$YciUGAl$E4b(Mk&-#d^(-OZ]Ir2BW?nVEolo_a5=0LK)2A:.+4uXR=02MVf:.t&'G]Z/GpJ[k'nj1@??C^k.,BN\/55=Pg
%SJPX5if]k56M/I3#F>c@HG\4.L(QApccaPLnnY&(+&Sh7nEZ>C,@e?Z<bB(\?ctC"@;WHBbYX$T1ejhe0fRuJO[aD=WN3$oOYq8C
%B\2K%jaXcr9,5Z%#"S-?Ucn<U_cabL_f*@1.o]$s6[\Ni16p"ADLjmoEb:sdlbUU.CYsb^K2&.l=)P1ek9IXK_!Ro6:'Lc6Fg$@"
%E6%,'O"4=hH[7ffP',^3nq_+!F`*P<cA9,]YVKQ5SQ'n/QZJ5M@Et1AhNi@[%K2Q`ECF_+\%[0k#V&%($;?1%F&Qp$mn8RG2EUb;
%=MM)Q=c/ouB"PJrL3i:CNTHXT%/'LF7hGCTgt(&q[MW(bE%YJ^ki9X?#HL98?Y8%*CPeXDjjnjaq>+jD?Fp!ULbcQHLfMlNO_fY^
%/j$D=c#6A661V]QaT^8-dn]8mBPp*X'"D0TaTkOgQEfaa.r9u#fpe#kA\OrJ8,Zqa-21QGnE')td5YPr3j?VFD(_&"iRP43OA>pF
%b5!<a^\eA-=?[8?7b^$J,L(`Umehde,V6/!r*GChb409OZ?%;[:pKAY0rFfm^nhr(go=J"OgK,:1m*SXZNG#pp'oQ]O1D8SC338Z
%W6`_LfLO?*6I0/(6dl:3%%hrq`0X;c_e2Xa@j'%qk8RW5i'<UJI>OU<4J6U7VFCg]R!sH7cIG)@4V%:^m]1``7dFOc_Idem7iukT
%A?iMFj=rgpBH'KT+3b]SdR&=X$?Uk`(<>67Ma9i<;rh3of8$=[RiMa0'.pd4k'\N<>NbA6gs%qHD4b%$Dgh&jOhLV,Ir=RVf`&F8
%H987d\<^k;T[HU$m%Z;tO]a1$&p_\lB7FX*?)%'fB-4t""6gLb`D.@]+Q;fCdCI_lm,2B_*F6Fl^7]lohhZ,R#@XG/dRgK$)<'S2
%02]<V_f<.df^-.#g+MW=.h^E1H$[?YoTB\GAPcY57,qNGes-oGT.QPg2]dD#HEqq[jlWh8U@>'t-hk($pHIF4LKM]b4&50*qROd/
%gZPnXDR@X/c*pcWH"YG$K-P;g^A-CfhedjJbYpd,^&@*S1GakGBs!1?GYV`QJM/Nmr\Ed?dE^mX/NZ&@'Tf\9j->AuqW?j(F6h7A
%!@4iQ*T!s+db:!o[DR)=rF,Y6Ok]S)3OeD8;cDbcou?T&OZiHfotQF""f3k00&6;.,fE]dX1>c^Y"7>pYFN+(N3U7IFg'm(K+nm'
%3hTWH].iXVl<N+>FtD-`dk[h*q2E"jikZDn#-n)Y26J+<fac3lAA?n9]Ag[*,o&?.U0*.701a8b__:grXq+jlV7Vf'68CZ+-q-H[
%=7#?MbE;ZcInVlsBe'p6)sV:6S;jqT-de3=23YL3>4:-U<I[qs?0pH[)]!ki[X4CPRp.D0&"[UmqKRE8caWeg'L'XCm#F5VGJ</W
%g>.ZZflKe]nIP@O?*4]/I<`?a^%EIR"QmVIXZ?4AQ1;Se%r]?)fr\*%lbf==J,1"e"1hIB^0_teb6CU'aKI7_r7A]t$M'hG[_+.5
%_TU+a2tH=G+)U6QDeJDu9bRC'ma$fnd<tnYN0(KXohT5GimS^gii2h107;".gVDT$.u5nIRJ`tDXh;FGreR3G'6Uu`I/7YpIdY5+
%oNC50h6$Eq04pZ^o[:@81q7sT+bl$k&NfH<dmUflO8aA/Iq.s*$)4/5q',8&DY*(%3T_d8(T$Bd_<J-Fr(-a'mGQH[URf)J*un)T
%AZ#.85lS[9Bf9fp2]]oCr">cIkJPeVZi'I&R@E&aebX/tp%WXhbPpammmh`Fs.6sA[MO.3T&/1g^+ug_IOCc%3^#"^'YKWjbFdo6
%DLI:!I5gh#0YN?n?Mk=?@eBtT^5maFs"=*8`?&3ADgV"mr,u:nqFB9=BA*L;GGef]$)Tp^aWDU!r>"$7BEj$UDOB(0drLrs-AXG^
%Mm[8sg_;c(L>lF.^DC8Q]B>PC)eSiY>e0Fh@/k?;kgSM,h"9%Te)N)OT;L;UoAs<aO$E+334O!?Hgg1YiPG&t]l+.)<k>jLVO&>E
%llAj1GBr;mqY0$FKB#IK+2@_7\T0"c?[!hQ]tPW$i8FBas.BZCf8Nsto_A(P_3[ri:]6&q]u-k1Y4$#Wh_XnsT"T:=YJ%h,+$6?s
%l[)G,NG/acNc)=LpQ*&g3r17Scj/28^DDhcS7&9EZU9/pN&ZuJMF/&R9c)P*%t"<;j6:4V;>JG<UXQB,gcG:PqIT-biNKqUa*U=S
%,L'%KAm+N/n)#Y8I/&-ili2>m3>cbCok19%<r'5-G+IXuHcLKj:3uiK?/GP>rrl,`fd%<sg.\UTpd5mO;4Pc>5qN&4Ce7oCjTcaE
%;'u<-[OFW8m%`mP68u)042#gnfQ::t&+]80f;ZNT%@bpZ<lC:qCstdT"::Gt=k4uqbKW-1k1%Dqd%IMk6WI@Ff7+$^(e1qOAk?#r
%/;>ohS&d)W:/WgPVAVfTr$*-+<&C$dBkDAIreSQM&rhG5al*Urd((9U9`iEa.Z1&.%"_=<?DM'L`<O3,`/3MEnGb(nU<,eOML8[@
%Ssbm49Tu8dZ65TR\1DI-0JsDtBjdE5(hTVqST8M7B$E/'['f+k]!^>2D^,mcl#k+WMo6m*WW(077%7^])tap*IjF#a,bg9e@?gK>
%)LhnLp]Aj_;$)#V&ebN,!,a-o>*u>N'=jMXObb*85S8K)Y<u5m],jFE8I@Kd]fn'U3[f^1(5U$^g('r2M4-Cg79^Bl,E8B@L-[U&
%?!;+Q6BQhuS_f]O(9MRmjGdHbr`ZFu6Y9BUYP!_(\>G(%45G4HU1qC?c:+f+kiA._C\t\!8^eu[!OWtHC<GF'H>Ku)Dgp?iRLc[r
%&3gV0o=+`AP4]f9g.Mh<.Ik;f'\I^Eh\_KI0'MueTger7Dd3SIHf'n!m2ZZcpVfghD%tUOKNCC.Hp@OOg:82U"okf6$q;+60Z*20
%&\_aE*E>;hR;&Nq13p9PR)p9C&f>erAsBcna<cp;ZBug5ODX8uBV6r4*U9[V]Gq![L5E!hqCPVXJ5gX6D;Dn*np5JNM:B+KA.0M.
%Q;e4iP65gLfS!t<Ff4$KVK!D8<4A0?pc\9=@AL26R[K"^00MFTRrY_+dLcHBiKM[,j(9"Y5CSHq;o=77g'GCsP@\/.Kj8NIaMh-!
%1Ju"V#XrtcU.c9!%!#/q,8#T;&4$q`m64^Dq_V,^XI.V58LY#.Lg-@ZE\h:#r1(jgV-0UCm&YMDULkLb=\!6rcad;I/WrQpS;?fl
%.tqm`HNB_Zh[Du979L2MPct`nM);%X&[mPeco0o0Jhijll3-q6es]2q/r6E(;'fMJ&mJ>A=QUbaERU@%.Q'NB2fde$6!F7qO>__:
%NQU(bRe#Y$];8Q_Zrn/=Qb#h/8]gX+H>_TXk8#^QI'>H;]Y!V%%^5kM*Zfe+EAFE^?TQ!:^L"sim3!1:m6$,?!il%FU[P+-G]*>o
%a@*ACVXibY&X1A?FKY1E^$hoZ,7hL.4?hR_4tT"O=_hCNa-GOq^I)6Sp0SNfl5+-K:j]pmk0_6?o>d(9ToiW9':'slU_]5QSrup@
%OpbP)Gln-ilBE:*'S7ZjSYucUL5lTU:19<MNZb(JcIn4&fP3"`9Upq4(M2]l'cU-UgQ,_frA_lded!EM&ktTXGLpRZ+2LijIV)d>
%'dp'Th!u%n]jU/YXhj,TFcZ:C&cD)[K!?<3G2MV8ncV.IqFg8:\`jpV2=daiP6lQd9Fs-W,YDr!MK"-e3/AoGHR2Eu;p0=;bTN$Y
%RqK7d@iI@tBFiQECaPGh.d'4=8@YG6)T2G/P!I`k>YK1ObFrn'I3OQ!MaU=]h(I9@_l'/8b8l=U64J`[Mq0`7lcK?-1GaQp,aiEp
%FHshi0FDb%E?D'*VSgGo"e)fd6nXpOM.d8OXul7^IDEt]b7`U.Eaa]'"9G*MM\kraOii:XRCm7HK]j<%^ZbV?cE]j,6FG>^8aPN6
%VuCOCkqSFu84;i:+=L,IqQa)3a*V!Kg;&,LRkE+K/oQjULq(Co(5\;:1fb;0^3o#"\dL821o<HqYoZ`#N6uilYZfE]HP$7U!&?&^
%qDl)GU?V*Bgojo=6OKEFNMYhbkZ9C^Z5B(Oa:AIZF:cHKbQPAAW.dN2Mja1jJi8<(g15#c1_#O!%Jih:'^CE.d+fa>'7#Qg0T<fj
%FV2aM3Qt'NF%>S[Z#SKV''jtAU+9toGL'SUCqY1-`2%%Y/PBTo31EK;bBGlN2+Q#6ED+7c\?)^>r7:J]dN$]k+O*qFQmgI#9k9/B
%GVK1o84"i-%%!dV.l<Zk$b3<:=[*-b!mXDq&3ooS'j](=r`H#LlUJ7#\M=f-QQt^@E[!p)FY[slF#%aTM6aYJF$?WP?em#**8nhs
%K2c?IJ_\n?d0WaT#du-_>6G>NQ5O>\a;DmV0R,+'ZPXNbBY!#04W1QsG[D@K2H)$q14G>nW>l<p'Cr")n)Rl<"I9.O_qCjK,Y;JX
%4>MFS[`X??4qK.e5G],/-s(0)1FJ_tR7MTJR0eM6(]1)O=R:A,MsBLR\*$2SM0Qr;OI)(9FahYp_I32jH1OdXZUd+bY<8:CG0#\9
%9$J3aKd?=Iig\-;P9Gk,dGC0RCqohso"gB:>V,SKB!]d&bJHb8Ccf\nC2OtLG-[XBY&VX#V+LQgMoV*;h=V-PeSk/NGh$7`!)APo
%9cPFEl*k]5iA?EU:_O-qEff=2eZ78F)?-D627\6BcSt_S%;u)-Y-h$dI$/6TLjZaPVAg;NY8F4"X<Ij[4`T^&XZN@[6e+;!jhuY`
%Wib[C^Oo2oeOB,.\ff'&b.R'5iVuNLQtFW#P9fB-+8HRbR#F.d`,&(?cb8irfJ'bOd$%iuq(FW@]*A[c_nsdF6A>o+<m`V?aGu6P
%.C"D?/@SZ&CTE5]b's@DatutbZ#=t46eZ(>=@4G%FliW8D#ZEt>F>!0q\)Es?W-Q;*m=b^P)UlMkUlqGcSVsRbXh`>FPDYSgW7gY
%].n/iM5cMS6=qGs(Sc6O?hgRVRO1:mcXg68L7bIH&4;i#ONmp^N.H]^2a/,[+VOqV*Po[<njtQGig<g`,Mu6a;e2f"4?k-6:t3M7
%^o4](P8?n5:cWOE,(.^36eA[GI$1JR7*EiJWJ[2R7>cHQ+^>B@'bH`dUQ\^]T`^-!$5dgb'ZRXp.,$G'NIor4P_tDiA6;$QM`egG
%;qR;=bgjHfKdke7BSL.OMVtj-IqbukA:H=VEXY*n^W-Y.UIj1`6?oi-S0WBB;#?Gj$kO$6KSBe>U10Pih<2qKD1mE`akE#'le:(X
%rr0*>H'G-!<h#mVd>64I^)815A0Tbq+\XX6R6bXqR1K*YR\a"?[p(T#4Vj`+]t0PR\&U,"fJ(YL>=MJSc[-QY[7aO1;)^VT"BO*k
%dO,sSXV5`3A_g7uElI8>L#?P^[M]9(B5mWgqrQ.FPS3d'7%$dQ&%&`RP/SCIc4QWBE*2@*1k?Y7.*-K8L/+U.F>;J])'Fj^L/s=N
%^bI&f!(RiKFpR(-*R]!%]\?5Z;J$tiPmk8fn;Ds3H*GN%a=*I%3Pk8;Gcp"Pc6+rSk@q-Pjre=p13bD`*J*Z:1"Kf_iEXWdmo6m@
%%&[2cBnG@udN`lO@4']5An2:JUl`8/E'IkE,r+JA9n<ub[F5+>=%WfB5qHQ;6Q!if=s?$sSdJ&F5m:,]j-R/l-5L5mc>k^s&U&bi
%5'>3`1YEgsBl6gV,#X4[feLaqV09Fj_>58@&[k4arBF5&TRNF-.quaqPWM'#-\=HR7O:EaRtq:s<idIQ@4^f.K0(3>D;t\LggpLb
%=`;NAaRq76ablXS22X(jEc!d&g1@GHR-PY5S/:M!&nb6_+RD18gLa&4&];AU_>c,[YD2T"C#VL5%=,CP8,DUmp+s>p.@Z0QR(^Wd
%V^\'5"@2/rO!B>/+_9Xq$l6*HfqF?n8i+OhLtNo()5VRX-R[*UTlu=U3'^Fh`>7FG(8ZTN*d8We2;B`B+pPr.!O9b.BF12X31(2m
%:M.jY/k/"Q%2UBu?ptjcOqW@UOigg*3JgHMndrpI).TaOXSuE8A$[AnLY@>#gWsfNM(1;*cNBAN*b=l8?f!Z7b_1p"@t.TIQQXt`
%j5#Xj7j_cUf:;S;SuS(B?M*%pqkJKcn\.R;l`^l/2r[N[0&U$A.+MNmPcZp$<5aT`K3athp<O<(W>L-BgBPb<n@oPg)r<LZ4S%JG
%nRWFWc%@Wm6'O?u[jRPb7a2Kd7&.s_Jr5r=`$#$pYnPODiXAmD:UO^3M*UKV7*)Ua2&<*lEkNh/hV1kDG%i4lgZgqV=D2;6b#WdU
%*m=^n0lakH;C/]SittW[#c%kpYlJ5oiGl`:R:Qs*g8iG7'_#kSSIW`LN'L,Wf-!Gjcfth"B4\)"a@Dd3YpQ0RR\UBT_'#?P3I.Dt
%AlOTUJqthP0r:^f3\;iM%'4[\;3>]6Huu):BCJl2$rK&KmP2.1dHtsAb=)mY;70q_O#q5ZE/$j8-@JX<R`$XnQS>.k7"f6rTP#BO
%4=+ZI,]ncc@*H4gJO(DKM4.3A#_Il:H*Jg@Jfp)X$]K,pYtG/%"XO^uEOg@MekRWSN!KG!,t-tt,2[Ji8Ya*[i2M@6&V]"&1?0Ra
%E5L7t">QfRQ$VYYcjXF?Q*Ot!5W#961_5s+]%%h0ffIFehCR`C!D#r[@^4+a+R()4V+s>d-qDdN.4,H['""(Nn6!b4iL\k<#I6WN
%DK\j@9FUSCL)LiGC_Z-oH"@^h[b_2ATPToK"U+7NZ>2=&S`L2F*jdSQH7?(n5XE)[<<B[c6]N22PuK=;SE2T8*o`A$Vb9D`"N<^1
%"bshE5XH^XT2?<G15Pp)J;gQ2UakM-`,B1=<+.R#<*0FH!1+g3BW1?"^/#5@35_jJ[r<6!AcY=;O92&%a/c3p"JR&%3P^B%!Zj`/
%()*6/>fMCB`g*0JD4biq"3#n(`SHZ.f7X1I;9,e(do3CpOX$=G8$#Lk8g/-^0JJs>VdZ6d3X@3k/-o\K=9OB&3H6AW4^JA[gJ@N-
%U^s[FH7d5cZ3^*G\)k"q-nQUD.@C,ACjitR3`USg"r*fY9rPAUkQSQOYu^uYp(fTeCh_:9,(@"Jp<"eAM5mrn)EU`MO!T;)XVGBV
%cWeXUj^s91'0[41hEt:IgXgoW:NG_?E,W0sjs3gc',[(N;0:#NU(>UkrSp:09.)J]/5c+rMK=MOS23_K,,/Er'N$j++4"C2Lep:h
%>'J,kYe"Q-n!&0tDCtVPH\b);ctlEkU*t3I[mCH^)Ot6^Qi83?-R95A%ZKH7:POt;P(t>M_cbBqiJg^9I61Z<&W==Th*gAu6gp<t
%C"gQmUgMWkWI>\'@qRkA78!jZObR12qdDuVbW`&aji7B6%Z@=aC;+Q"@jJeaONgOEBrfq&Vb^!.ktu;WV>%*.5O<4\K5Q$>5!>0P
%]Up.E]c>ncol)fJU-'*jLmV54Q-Y5u'60!XFQZ2)P);^XVS!@o%F79406"M@c@]s\-BKXIndYZ-><3.%31sbB^gd'b1Zi?We@-.0
%o+T0@(?l:e`XpG%U+l]\)UjE$/n2]FQdk]BLYh#R,7:$KhPZrU=YW3a7$B%W4CKgo`D6&N.^,:]IW2nGjQ416P@Wp"$9&tFFs%V=
%LC?'q6G]H;aSd#,N?sd^)7[<""$j@(iAi0!+b]u+BG26/<tUokf#Ve/!5p'$#oTU$&rj.jjlO:m$)^+j-1bGHHo#\79rQoS'BGjj
%'J,hD4nmd]iTD:`Wj<l)#Vt^J[l-0<6&r/][n=ii,.i-f\oX]b)8`st^.R&c%KrJDg<*!'UmS0t.-W.?iUBIA-PZ[k'j?:G_.qs<
%EF(245Km.4.kjMk&OK'0[fAdJ(+Y0j$8Y$6ja4cR=Hf^KJW*OGH_R%=@?F;u=1W%u9Sb-aWqMg)f4HQa*W\i&hcS<c'7)#W3%JOC
%AF_XPB:Qp0\C7bkpO)7j7q9Gu;Ug%Y'DOm#<(IG+Yu>6?_umtn!l^B\!KbOhi%RcNOkG\Y(*fBk_T/HTL*Fa\.?Tl3PrJ6g9+ilh
%-]CBe/IH$MnH@EhY,J_+2_bJdRLsH%,QfTjOZN0Y8<]<oBtmC*3T5g2.&Fd<i)1%%XFTV5,E,C+:dC$j\7`'-]9pc$[JKQLIR21f
%VYj;fW'u8XcfEV$%AVnpZ<s-L\<unYNf,GHdlq7\]80i,g"EW.+ahbQHLVul'<TU&#3/Hg)Cb>I)FJ/PZlnO3R(MikD+PZ.?5="9
%i(/^[VGgL/&f>JCeYS0@'5&S/ikik;8@^3qX+:Wp@:W4>^oPVTiUsJg;gfsLKYo-s]c._I<",:J+`\JfYbl@aK4cG]KFm>U--@&-
%ef`mS@iNRFi>8a<;[.AT"lK]n"MM`;4KK&%1[Z1"VaJ1a24?;9kMloO#9I8)1Se;Yk@oj\..iK1bAu<GQfT:k%1Hd^,gLcFI*2"K
%"Jf9jd_?<Yb#*5bj45pLNg%4;gm>,Y:^mLK7P#Gi1pK>q#VqgL$sZEFQPV)g/RK7LcB&)F1hrA>L<5fnSlJ[k*(=Hh7O(@shDo/>
%\X]2snePENP;H^H1RfNZ<$;D=ch=6"=*/HAq,TUQhl7T=OAA17(g^\Y%ZQlO,3<a$oRZU7Zqc:O(c"^6h14s5SXMf6isp+WH/M,C
%TIp;5XcI`n,Vfr4D<6AkQG=Sn%O%DiTh(@"QG"i40[tH/a$D%G1^=2/af3>6E7:p$am(+Vff_`_,)AXamN\`d]OHtaj;9$OOlrBq
%E4'\H6IaaTIJP(eL/_C<=JiC[Gp^s%lt&PD!<QC)7#(D':2:2\I]?c!<&qm1$.(s3WWGHb"MT4#0*FbGO\*.@*C@XT(dPjO):=86
%$c!6in-UJL(*\tTcIR3G5c7tC9rL2P"?376Z.%WCJf@IW2d\!:G_dr+EDPFUnkbn^3m=!c=q7H3<1)Z54sk'E,=!eI:58EL,m"g^
%QX??">8[m0`!+R:!Ul5p$PXAln7;R;WB0&a4a)Z^j;D7nra&8"V,630DINX/)Tu!?'ZlGFqW")V*/je8,Jfo-562)HTS-dfjbl$o
%nqmt[\>A"#,sS@Hi!E5+A2Y'[Y[i;bXZb6G1I7$;#efqLq*3DjjHug#6AbId)/E%L,7&(<<P]+j7U2_OdO**u,"61%)1-o;91:tc
%pM9irPSb`fR9>D4&ZAj4?PHL@":GtrB&F"0lC>p%*^2s*HD6l?1F'5cb:a0LGRHbSlAM<ZoC=?<KSkT'pPMFC$-$Y_'TpQqMA6.%
%fepW&(4DnYqTYS.](Fn4(e2187Dr+ub<_EZbVM$mjTGdIB0?9k!LQd8)EgsHl?5Dp?IH;BD#l<I[q+8LZLNQ@7@L/K12;e8O_-7.
%3>F]5aATrcToU$bkoo%Z/;V[=-r<I]6BGFj":AIUd*H[l;R%/H"QL;X@N1C?fg81pBT`,C%'jR[j:W^UmQ@?Li/=buMZL3ilIb1l
%RlFIt6gHT:T_CcSZ6&XmQY4^gO=?I\&(37CF=ma.8bVsteS=/'h?6]Ie@VZ:a_%:s7V=E^4MCaU..^8f+AOF8KpL\+Q82doJ"0t,
%]c[c/'iN)7P9%P0UH/p[Zj@J4KK2Y7<Jj3c#=BMMMm";^:*+c0K(ub`eN,57'%K:0THVY<DZIJ4=Z-:<*iNG.C;/%/UKe1d&`1OJ
%<41le,81W'\cXkC:uS!d'8\<0kQ3Q4'!s_MT?&&S1DM8j%!Anp;!,9a)M#d\0o8[hJI&>nOarme[)d(!@7/'9*bmf,5VF-4'0)tc
%B+eHSYtDW@.g\%%DnXud@-W.bA5bmoA"&n2Vdu$?&Z@#`l^g,J0U%qi8m?C6M9*3*e_%Pi`2mQX<8;P\J"q/-ntpnN>XE>3\GSW3
%q?mi=PXXl!MF"0@`RW,C.j^:t.1mT[QWkY"3e30%=.ucNXK_&cBc+`e^qO6LVc6>G;u2Rq<]0JXVM5[_8WKQE<LWd[5#l_=dQgG-
%Kg-eGO6]kiA0bH2+\q?j/\hSYo7Bn6=W8#\E,cT3m4EX$'J6>1=k0;=7O'fEo9hj>LORf;/NR/IR\<n6Xm(ufM4iVSF9-c#nl0(c
%#o"!@-<Fus$m9%Jg_:hdU^XVB%$lGq@+[YSYQPTuM2OBHj!4%2m/<`R1YLPdqlHJK2oG77j/EVL<k0Z4e#I9Ei(W\pS@8QhPFAF,
%Fkou<[^lu%-LRKc.N'\^.+DU\,n]6/hCb[QN3Q*nd/YLTZCuJCM?uRI9Km<`DmUXb2rK#?Bn1h5<]*&Kobq62,_h0f+@?6;:KG7k
%Y@<265S42-%hVMPaE'dU_'I>>C>j,*aE9%\2ksF_3YqAg.+L%b!t(>o(C`nc&J<.+#m!^09_XX)'bP./YdcYA0``f8pD1e>(>.a*
%gE72?(*]6(?4<?sp?k@0@sq(IWpCj6nOT8=PQQT0SWVPIME!1:?@+=!>C2HCNWX%7cpqJq6%_sB59so@MNa+71Plt8,g0U[$3:r+
%#Pg+\kRTc[([aI.]o!X(G8E)QSdC*/`f9:t`f^:hMT'J!9:VuATPuq]E"F=hVU^J&1_g+,>')9F`o6NPj-u^c%q&?dX=\kMH9@9i
%-m3W^+u(%<M&>[>O9?77(f9$tfo!&POg.1CApW3"dLV="$a^^L%QSqYEWtlV'Z%!rK[`C^J=ocL%f7SPiPK5`Z(-V\LGsmH]6l^V
%PY$dk_e,;9LtF8kBS,K7iEA)l/=`%Zn]V/QJg^n(-o<.'O!70gYo0eBn02Inrm4/s;JLmA<!>lWZ6n'8?VGa!d73UOE3DM0_(gL0
%0YE'KfN?eQTN$UPrW8$YoLjM6U0NH4K.1'QZ?<h#&dFH8EZe4V6IHb]<q"`FBN_c%2ItmDYV>h8/s=%^M?g99)=%COo&-p0VCm=@
%rorM?$@!b6?-$$dbW8eTq6i,]M.YKC[PNTmb?R[GB4:a;=CbN;;JP0u+b1DuB*;9j<+<BQ7B_dMS0Z`tR!"HUU_hP!\ic)[@j7ff
%DZl`a@gBD@D?*hELk+[p$**d]a=*n$`^#:*l[W@MNj4:XA%5Csj/gB,jT\W<0rSe!<IX"Xn/e>1=jeFV7&q-'M(K:8ZGqa$boqZ]
%:1;RGNIrq#L8/,iX27,G0H'Gb6,\>#5o7e[K))Jmo8IKMUs,!c-8L52"f"Va4!p,>Ae<_F6lf2QbnJi?8nAIm.ZtG_LPQS!2%Sl;
%fS'h7)Eh$C'W5[!OD9["a9]Kd!6R_4KS<&?8qIon)]@>TRFb3X'TJi+\0/f]lt1_8LL;&(]E9m8O;uJa'o,PtCI+mlak"E*LaE#A
%CeAtc'E"Br(72YlJ@gSU&/.&-GaaX8k/ILV>'XL"23`f)!<nJi"bn8O]='7i>g#BHlm!+0DA=]75hUr-<:&E>`&m<6fr\]=K9[ZT
%7<aA\JGERdr1N;d]F$!k%6>r@A[u+[>f%qp^kQfAf>_/("/\QRb].I_`sKYD"N@M*&:sC;j6*O69E<R,j)DZ8`)t\0Rl<i>q1ei'
%lH6Rj(8$,ZRh]eBpFA9X2>NTkY9(`&K&OipT$2`OlU?C.A@00uT+Hr3L'tF;^1rfg5JScR:%&$X3ijJODaZkBW5UsM;Or43QTt;M
%r[MK/3CAg]C,0L+PPI,$-3FHBifg7V:MiBJbEr?]6']g<>pmK)@0P%h;Dg(H:Vr?*aUr'%--I30&<`!=U@m.OMi]:VHW"]loF9]#
%;9kO7A*k3rM#&5<\L.FrC\9PFN.RC>.!U5gS/&na=l<9>%#LWldl;V/E[B?>N>&>(3c'b$Bk"Z0W(_mJV?KLXM\m&#9:eQU@NFlc
%]GDG"+NgL6Q@]]&j/97>!\\^f$9*S">5;Qnl<'JF'u@t7qJ@u(>ib]e2!eWV0SkM99[q+tMiS(6rGISe9$Ij7F(c/5IN&#J1D!%t
%Jg^7['Pc2u=I"F`P/5)Tqj;*a)EO:_?XGu/]*\\h825*"H%BO]Ymr>(MDh5)Z`6UaWsQU<A)aRJgM^c,&sq<<bLKK!M%?j78-E6_
%$+-e%lO^Qg7!#I*TX>Zr%l>0DVklt^''k+-\OtSBaeOI)U"Wc/75GFF=G4b6)Ym0\<<[ai%=2;ECo)XtE.hu@0tG[97FC%nM&8eR
%;_M<)^dShUaSP$)VS`JsrWt_W9f`aV\3NR/17P=7oW2';7pi$3fN%3/krloZK_:iPV+Ck4TE:aA"5H4!(h?YRaRFe<rKDImA/Z<;
%c,Oi)ao97?^ak#jaL'/b+;78+ZV6t'JF\7'J&.S2E\=D/ph^,COa8G6o$cq9j@6J--%b4m7sH1GABFWmn()2h.J"U/!%-XZ@bPI)
%\-$tjnbrk1j7_INmAPZQQO8R+W'?85acoGTk`2P^_gSI)+S%-6[,T:Cf?f8"063/TVKBW<9JW-s1Hh:#'IXk%K*!eR,A%M";<8f3
%ZchFXLR>-l;mrM?+k7Edg[csJr$VRoBVW8ACcA(jiH.WkgG,+gC("-GN/4^gYK)bDY]S.nH9<FsW/U*gB3qpb:c^?KS'[RnO9ZXG
%E%:1([_sU42ZoE#&XYn:G-'j:3QlD&-A3L_V]df\QZgo<$ojlsX]'TGST,[;&SSl%F'nubV([feWL2L0bfQhP<!lA\bQ'F2A;MrK
%#sY."LWOMM_'n2BLRnn3$$2o_,";_h4M>FLPomgja$hBq=cp]ql86H_DRQp;;VJ.s&ZtQrVaPGLGZ5APQ^T\-2dP9jX9tqhSrj7F
%I7kHGY)oYCRRA--JCA(!"(]IeP6E6$qf3XcklX_[L#WD1(#9)4L`43GM#Dkr-AYSZ<r`=I9rKdl"uln!(4''4FAGk^&*mic*e<EO
%+fd"lJ:iD)5gbpC'EmI:oLit!$bYK/gjiW9W\BYUJ^ffLWcoCmQZGX(8_FW-\1h\n@PkNG7k-t3Bm8bLJhJM\,:;Wj7;Z;oFqD&a
%oOS1k_)iUB'P`@a+VTt=`"_YReajW5#Gt)_"[ImBS!KBCDE4_W=DFS_&B7<>I=j,(.T$a9c>$5`a&Ie>22SupY_.>Q+MK)4-]Sm%
%#>Y@4gJlM'YE<UV6u7fBK[,]7(R3#BFY`))nPO46La,;*1BL-5'$.`[4(-@.6uf-KfhakG82LqM7]TYMIVtG`G+DmTn8D--&-F*&
%,jeVk=b(/rYDu#7eZ3/G6bHeAfi[cDd%]T]KnE.gGXDB`p6:(MBW/13]O]uoB@%08]1?iXHV+]-leKK`B;!ab;[lSZVHpRO)3#6@
%'8su=8Wko-*Xo>6g!#@*B'@:"a*EC]bV/L,&.&ZD-fcji<A8i`/%*B!_c23I!/.8/:!mi&1cbZ5"QLmf+_6W";#`"p&0Xb_k7pqJ
%2a,20$N&2t!![EO.tf%[#ZOer'2cmX15QPGZaM`.qX+VgFUTWge1<D5s.KZ<EFW1M)YntrR2J`+'9S@WR0%XI5uEHJ]GbV*/Jd?X
%EqcL$N$BO9UBXpc1;F9*\E3O+U#pnt&t%Op^.F,jf51F%;4c"nZiOu2lg7$9MIG.t.1teg"a64>&&&CMl,Yga:)\+`$T'>3p])[W
%+\=4)nq:a'FB[uhiuIRQI)\4*dQl#>,-jW_M-S%9*dWEhMPbf]eaWu!I5$ZOEX%Ahq(c)pbOa!LBjtO-",Vn4`/,>6&JIGUIe:i^
%Je\cYbS)U4iAPD0nlDXR?rKV+/"3,%YUN-7:IY+[TJBujYibQYQ8S=)*2`!$(,1mrX>1DkK"-7&FlO&e)8foO<$@QS4(=EmSr=40
%0.Q\^rg>/+J5\FHKJ:Tl;+HB+N#67o;@<Q*^ptXpTW$#,k(/JA3iRSec9iA=`?EEU6r;?kK1Zi5Gm4m0]_%[93>h@'+s',LfXa,%
%N7Aj/aomAPbE+1u1a/$m<6WL2_/pUL&.KJFF?YU-'N<`I?Gg?f-d@>KKG\WDRW9!R*7i;=7$OVW6bPmib%](^W^`@MS/^\3ROJh#
%b_<@+O\&&N"Bl\d6XmgW-L;1S%ltjB=-gU0-FR$-,9f"6Pe>4M).EtD5e+.@PXQ3,B:/_&@X*\,0*/jmJEf*eY77e+6-;+to=%7<
%q+Y'<A0c$Mp*SrJ!elA,!FA</7bXsa'2/CZ6/aA)%Sq*T+O+IJ@.$FrB.g8ul>Ta\(3Bdbk7K1i_C!3i0Qg(..h9qELS)'7*LeH/
%7DAkV5%uT4N,D4fJ_6"b3T5ob'5_+`I*hLH\G3oLp)$-S,j@VsaD7T?PqoZ;M;mH'B*CbgHt0qE:j6%E7NJO_dCNhle3Z`^oSW]9
%b.*$pU4A;QogKL^JV^AJbER?7Nj)J<7Xn9W%rHjs+p(*3rd9>*"0=E*S\uc\<!G<XjRY4.-j?F4VV4;"15%H8Nbd8*3tFD$\k%De
%^js=^$0TYoD_O6Y0fd3IfE;d$7_k+I1lT9KJ#PjRCPkoua$UXj\n4h#Q\&@/WRo+\g&cERg'j=@<Gi1'.u7=&*3=aZEX8(6q)LEi
%:i2)XC<9q=5j3O]_q`oThn6T3P6/bhC\ajZCWIKkQ<.aaWYnS3Brl!E1e;)5CIc/eT'(Vb`:ah/#9+jU>f$k43%ddSYV;H+3#CK&
%5X(8t<6?<t2%,\'DQCnd)H/n_O][nJ<6@rQ1>:f.RaK%mO\M6DEsR4:_lV;5:/Jh]8or2ocq$i+MaY/q"$n@mRZHbQ\^?nfJjJYN
%'9Nt_.I]p89]lSDA!?*\Y_bCG\_KTcTf(>IN-LS,Tmo*J!PC;SKu0;aLq:t%mg%lYrLAYq;]LSo_klW`!jR2P.1"=sc;V@u]ak%B
%1^4l6C8F`:OIB'qVc[E6UFZ&THA`KpP7Tt#6O!QYDAZ_;OOrK8K\2u]M3F,M#],kj*+cB*+kB?4rjQT<0L4!b:bo0_!c<Z,mB?^!
%%Uf^k^X_]m+`!hB?VNZ6&?UUAU</NLJu1Ng@s&kaMpEi]T:a>h;E+5O(/Y!(jCslYCtV2Z5Bj#^'8"'i?)K>lPqfb3G6fMI-9`Y)
%7'&][JSi9#K"!P(4uL[e&,J)mmi!:di<PZ$Uj<6-SHZ"0l^/?P7t@H?B:sCYXd4%H1K%b>jAHPfb9eEFg#V_EG-0h#ccr7IBk2?=
%E'?8cNXGmGhc/-(L`_X\LgpT5J:'0n(IFcK6Cl'E@jCrhB6p0.9*QXG&l^(]gd^',,TZI`:1.\5'o%F"6V9S]MdXXq-M&r;/3p#[
%SToIbbnW`4(Bm=>%?YnO5p1d-`EWg*gan.dpLjfeRK4g4C#)u,G7p),F!i6)N^FE#SGGcZ*C5cSO=KY5dXVT@gS+p[>-%qJ]_ILd
%oL'UfJrC%8VWF]g9SqppS(R:(be8LWG>dBjPCilHX<Pl.B`sf;MELpYW8/A=BaJjB4lXD5$"&bX8oV!i#k@>Vp74c%FqhQ%=I@]N
%o4'#)@Rt\["HLlo$lDN#J6q*B;egsu7PY^O?hr;()p;Ug*ACR9QHsMU*R#6bkV1>4Vp&;BJAui`T?LGNR5kW`VE\4ic9?#E2&.R=
%6U`3%>cqb4l,07`DX+T21Xc+J[0!;)&1g\2/3@$>Jd"1::c/no$tp-hjH;"b3X,1HoqC$UOpjmcTc,<";$@tjT@9g_Q=[b[4@.[.
%:Y)A6$G*DA8!aN@)Q8<X!l"b%e<_=Eb%M<W"o"+e2%,$j+g!jTo@:@G/Cdq1Y`:U!e;+4-)//[$Lus:c_"\!,B*hrpFFhA(g+*AZ
%5o(Zh\e2i(*-b@bK&kB;5%9g=5k/J4)UO/d0kib;3(1Jc)L:g3>e9]RbVTc^Z)(hFM<SDukg3S]jELg5[Kbh1(l'KI/INd&FVf:?
%"e>`L'1<!54[L)_\57'I[+W+O7[@f)KO75I'3/k"-B%YA=Eht4'<0PkO9o+7/34Z=`o/psfEKJ8Clq.0"5"KZIrsNudQW:S`jo&4
%.")elYGRoPpj:G#JgfWcqZo",J!6R3[9j.eCC^/&C:cGpL#YF8#4BSPi!`+;V=9n?on##pR5q+=)eNPu50TFX4=uO)C`fCp")(M-
%OOr/QWnn)"7UShh/%;CO0kU-#"*1!]>M3U%c$s7(f?e?anh?hB2E+L'7'Xf'd=ngJ>pKec2>O`k['0^5)XsLg_mljXM;k2YY0$#:
%FQ7pA"s)&S'OTllYQ)IpO]*OR/BbDJN)#)%0@:WBo.cErWLPM9DS2nMALGt)V`Ero:%IC8j_9IR>4"TE"%sPDZ1739$&<!3qID74
%WY'?h:Qf.[1Kk&#8>OaM>!VSM8cFC50j/$M6:TI/5PrB-EUn)PFW1LQm6Q;"FNdQpA;k4o@n7+_[t\'Xg_sEOG2Sn:ZU'+A@[S;=
%!\.,J*Z8MDM;<7E?O*8\a=enFGLCJ;+h!VF?9591:h73A<WuX!l!)d@]bb_ES0m]-V_GF\<[%"0-;7;?Q_i*M5#?!"%W(3R,99AB
%U!sRU?GmmMb[^pUp&g6H.._DudXb*on#u1>YQZhlHshf[@Tq^`".OrITWgD[8JM$NI]W]V0pho_#<$#5!!W#'S_,Ks%+9-)Z_Zi*
%TWJ;(>\ho1?8GPL1L\m\bmL`13j6WmP9dliT@\a1$+pBl*EXNAXIoFg^a;=`0^D-m^iF4$$>h@:=QXEn=Y-4g@$,,[S?DF6XdY_8
%40bP$=+E%_5m<e9Bb2[;MqSRaTa4Y<^3BKL'-oKe\o0,k"`JrfLCg/Z)D]5nK<Yo83>2h:`scU:@JL,Y3e1EGCTVI=Z[uL%.g+'.
%^s9uN;&^[l,f8W&'+BAL_6,Z\B@.h6`iQld"%TY5lVRQYZ'*n)]8[FDl5B(GI#)8d)P1KZ/+hM?2%>.QS4o?%f#n1TWfopb7K`T4
%9^*Vi1WQ[d#KbKWl'1CM#gm9N'@tV9rJFmlQqp47+a*e=n->uF#mjZe8?tQ"7pp(2#R3\<\F8Wm-h!\b-BLELe=FMX,%qoNeN.X*
%bA.YWf$l-fG;8&Drp&?i84m0>49L*i=OtoQq#\L$6+kg2#QTo%6S//HKe&NC<_1pE9KYS4BH$YZ$oSNGr.\)kW37V.ns9kM$35`s
%+p\TRAm$%LqXP>s"qbI9&2\?.!f^Q"DSa[a#`oc'4[*ksOs+ctQk%'5FOcJg.aHol_uf(a"?&t=$-OG7UDDB4!XL7qL;`22Iphk\
%a-if[_ubbE`#M'CN0oG2W+dMc0T6Su@NHaKJBo*I!.W@c02OBZ5H$W/]*$]VEYlmDW\=4hL#<m11l-QK'[f'Bm)M:A-u_%;U<;ea
%PtPU6L2mVbVED[QA\oM<]7W]>Rkp[$-Y%0E<3:lmV`?+\AG1thii,4H+jG\&+Zt=Ffs&&I-d!P5N0g1M%d#ke0=94<<OQ>(0d/dB
%!4"&ZU)E9a!Ir;:<.%j\q33Td7ULNtd;0e(3jg$NoPa#K@@e2=l!9Yi%q&15!MRa`0L^3!KrW+WE&WVm`WkXsgjf:#iO0s11+#7c
%Gb7cK9Uf;u'[1ZS'XoEGF(RQ6C1Ns9g4SC6>!rU)/u:^gjH'u.&l3g-M2!d6c:._4]a.*,9UsK9q.1"DfqE$RjWo*NM(%:O+kN\u
%np5-t8HRMc!Q:&t@IQrWKXh$`TWn&WSZe*?0uI)XmrIPH+YYghoDueehD6'Kid7DuRF1#.+`P*dng$]*X<N=8"0Z6%?Dh*S9f*e4
%:Q*VXI9Hdea_+SlbR[@h.d*5W]r><PI]I#%SaKgcs#>%bEIes_/PSJDpg$\#JOC0?p]bjIED[Y\8HhfZJ@\k/(#2mGD[;UFcrm;J
%,4;Nb)=+aO/Tb%2C/F2.<67_Bf-Ds\Or:'Ec&a9*:*M$&KI[HKObo\UXsshDoRb6-&>Z<m@IBXA*]("V#%X%^G%E9g7=NE16SD'i
%R.0>^!KTerh&h)D&<Ogdr>Q?,L.`(hf(T'n1n!J/alo_!&Z"ZYJEJ6bP\qP]=b<U$E[\o;&^5XP-j)uWb+q]D-oVmYV?V<K@p3Y=
%G>6\D3oUe@<.LY4+(a"nD)7VuMFRrs/?>hr;5,.DW@m)j@VsT*JntNXJOXXFa+G%;a+.-?!?KU2Kr9i^:;*$jc;=kiI=HeZo#C>F
%%>;G9Xd'_n*cXc6Nb#Llo<2d&'-/A*58hJ0@>-<u?[+Htg"H,kDpqI:)@YZR3s%9t#O5]"3X<9?rPU.B,FIaaR1Z[JkbD1eUbS]g
%!SNDFVOg=aO2NDi2TXt$qgrZYDT,<_!!2:&*NcXj@Q?JdF3&o%kng!b?0Ia[H<+HD#7?2SH=&6D5bjg'"YYlM"/%L#`+it\/!.35
%$1n&5jD1!*$=e_C5?$;l;Qt23.\Db[W5#[uUnCb/,I.qDEtrJjAYpi/OifT,Y=P7S&f=`kd,`b-a:[4"F>kCtA&=,n\;1\.?kP:k
%#>%L5'DbU@->?H[9kj5Z4g,a^Pk^)X=nR*)/KZ`\4ikGNa=rd)3]BB`OUt+<,#8FhZd<?=OlfbCcqMJPKh$fJ0A9/<3pCH-A`?6T
%GZOC;Ub"l-q2G`cTKt:FTm>6eJCm/[@i.P7&bsU%!,:b*IV(;b'B56C<Z3;",u=`@mhhsa[QrH0M2hj_=7Mc**uq*tisTO1'I>)H
%aO*_BbXk4GK?%kXZ:nOAX!hhcQT^;a9N<".>)%f<@lGO["_j(A;kLWk`/cSG8qfg"\L$1U7N=;eL=BmIegM3AB$BR5%Yfta6dg<&
%g#*MAC`J0lC9c)V"\"la+[$XWqQjC:Z?M%SO]5I*Ca3YP-ab7q6iV+!)P'g@;)OD"#L9mugoVnV["1-4qI5q+O^hUkQlp7k9NZ&,
%i)!KVdC/@P9WY-.3frWD-AR/Y%7g`4V+G"_6>Sf7$_#kK&%<Eln&djTj90<NWZ`#qW/ABr(X.*5mUnLe\0YR8/*lAXqBO;sC%RWZ
%>V&$:J[^glNjPfT"SePZdR\HX!c<oiNcHKlUkW&lP"VS"(EY(%Us[,)N9TBOgJ8+[d_qZi\M/%"buiFndnV`#<u/E&edo]>R_L\l
%+6mI`R[SO^nl^#+bOf?i_)a(Un/9Gl`2V]mh=p?^/;UD8*P\S9AsROGZ'*X/^amB<_$e'EXigfL#qI[ebIk^&!Ee<eU%1m"J^c'<
%65uV,qgPrSf$A/\*JTr![9O".*>;J\k3#tjq$_:,%*a_6W[]$h"S[0ibEmu]14F[t"BkhoIMfRoQk.r6fFiN7SkH!pN%uOa_rCMh
%6o^XWNl/Qu?-Z'Td2OOaTIeh'X5EZV!Nka>eR16C'>%L30EX=@E53sBGm0:/WOo/CS'8Vo[3SM%F3H3FTF(C&q/OV[,?%m5pCYk?
%[+_,IUZYQOdOF=UX7V4)>,r^=Uc.MFiI@lCKXm-U#mj>c/Q-71b`@P.%uqt_>@R/dX+A[(6Yn+/Ol1VmVK5tBX68@BCZMijLT+@M
%&&LNqRCK.(CP6^m;(knss$#@3KNS_mn/oHn=TXUM#."4i+@j9J+ir'4SgHNeOp`oD7g)])lTmm5_'u;e6qKtQ1*Mo*kTnZ"XTtN9
%b:aVrVOD+]Vm.TK/"h@p--HD%;IGoFKYo<&<ORZmnU\d=A#VNK)@5BM'uoQC.0ZMAAbpOLKB]V^P0gf]!-:a`SMQs;9mDd80a+@r
%qDSZ/29l5uZ7(]C50oHm`fW%TAg7XFPl7(Q9FqPG+Fao3j4$AZ<L*YiXd,uf7^_9GPpI@MCm>Q-B%:`,'R:rnKjNF`]9!U$-&R:G
%XK(b%iC\t[-h+574U4A*LS)6l]G+&':$u&LBS$`M]AEH2BM#?]De>u7C9^VI](hW$dQI4a7bKWa%D%ph9T[2o,9.kKl74&UO#nuG
%I2/LZOLtYN#j1WmWn>A'=LUF=!\D[k]^OB)F[$Ek+(VB^X(N)jXUqD+C7'WuAj]9VUEZ/:hm0thM:D,hA<PA^!i9j7mF3&5+BX7U
%_H6GI0a.5u[VtH?$9\Fu!ASt:_WhFNE<BdAW:F[3&Ups[jVq'-*VnR;."X+o!`)B"42Rb!'T"!Z=58R+X1(R/W2qX@fF?5Q8j5kH
%D0HN&hn3!jEgqi>?[eN(VoY:S*U3IeF[NUnFi@uTD`[<:[efX88+S</<m6rs1p-\#q'oGqP,nLcDtJ>FOU#5'*hVj@T9c,9;!X's
%<3![[Y,jVtPU(sYpLdhAH@sJ;O6,PcHq=io_I/[F(,lSN/AGa@X/Q`Rd7]o((`tWHd?2BZq3W&*+kD5'GGb+5*ttT)#piT??d`n(
%l:/ha%;;r]j\JKLl4cgsmpg6]8Wu7>fh2F(_+1(n(Xf,^7WPSp(%BG!XE_6U@j)p?,'#V/Pu/_F&eCh;)#=2o6\\-Poj4^\@nuVN
%%6S-NBY/)dB+.0nOd`]'(fh3hVZ6E/_t;Y6b=2LpRD*Y=Yq(TchOHkh?u='[I+9[L5Xf=O'3;#6iN72CHm[)Un7#8Gd9+fhKHmj:
%;?JsQF8Vf3mW,)@W^SmG`8'tHS[R[6q&_CW+aG0[XlV0a#G2C+(1:J6pfp?1a@nah$Q[[q,sE,\4SJ$#cfH^+/t.k]m?MbkO4Rq_
%Kl/j^qCDT\S/<#uXiMuI+C/R(K;N+=ND&h8-DM(O,1No-H-.*.;-PIPj&dO$'?DquF/4sU6RFet=L1,FW6#TD0hhN_WfdUn2FD3b
%QBl]u_Jl-j[s`521&7;KAdsq)0oOP5%0p^T"-bN5El<qnSk?mq&I_*6(m2\LG.Vi7qN.uGMTlD22LCE@;_a1;,1J(aoHA5j=D*n@
%p.=OQkR0X*MGnU.]bGHTYja0SF=FO$AQnDeR1tWJ/2eZcNb&,kJU\//0L@Kmk7j.s*(#V.Ep&Ni!R<"bMV'Ja/e*RQ515u?$sN=5
%Q[&!/H;0Mc/7a?&"TGZ>Pq1BD?X3br09`6KBXptfaM`6U]V)r"jS==a8]trr)Te0<n>q;CWS?etb<6W:C@/T5H+1hCW7X/Wr2UT9
%bFr1o]JKmSq.,<nCOe@k<1U=4MDaT=Hs_Y$"5*Z`cJM07)=A/a:75L\q(I#dR9;J)I=$L^"U(1<js'79C%b@E($EDKd[gQAjIdZU
%#P0DM.(ou3(lCQ_?n)^m_VChe-><R:b<oDG>oIDc4<t7(Jacp#"0L\8^^Cc\_`j1p9XBt87>8=QdMD--alEXEXNu74#9D56K3^e%
%Tf)<p'<;(dJg)ojT]R*DL:'Vb,u_IMcbS/51sD7X31,>,RrKHg&m92nK/01,C9J$R_Z;$KB@A!gBTSM0^mE0]^5U9VCEdg6PAY!`
%C>Q+ne`qX_8(\mP]iX<k.A`l/Ct8b;/&a;rADp46km\D-V'Y%K93<Q*oN3"S*]"aKN_0(>1Sf8I\'cGq.WU?d[o4m'RNZ^/*:WU.
%UR!.J4?Mknk2LBB=;,=4c#DBNaqQG;.NF>\+dFsB`X-iM<s!j"J+HBoeidg\W!(NO^kod_G8_@D:W$L;?U7tug;:lXEm([DAcmW8
%`0JG>d2LH?5Tg+gJ`Qq5<*ughQ7V/f!WJN&*Z\MN/G@2JYS<mSRO;&&Pe<*]A'Jp-YDVlkaWk4%_&3"(LK(gKS<XK4J,A1l<c7/q
%[U3SMS&qZbE8:S]dr985+d4Xa)!8^>/d7_s&-g;JR$DT0m3KD,YKU26M-_WH?;`j=3V4)=SOEpriag&E3S6l:bTcj=&"@V?clj.O
%DQh=4]oVfG$1\-59]_=&Tm$pXdZLEuch)+=*UV@S9b]T$Qr_HthjXgY1]210MhZFM0gR-OZ;R)p4m7GMRA0'O"=iKb?Rh<?Tl*P3
%$@,XG4n@N#*,FBuE\dk+HK0"+,L9dR\.?GQ""ouhURM6r*-aXV(Ih#QOUE\j747q,2(iU-%MG&:6ss[k6X34Dd#fGB`(;1@b/chd
%*!U*K,)!9f5tlh%CJB`r`tO:0rp:_mSh?3&jDaa[Ah8QBeQK$u57Jat1UUo99T;_u&9oseo]iE0lno/Md?]iF1JY"o@WGN6,:lHd
%2]7KN-NT!6%FYqh/m@.":D"6f,LHPhSH#q=%4apW`@dD<?M9at5k#HYg?p]=XERhe"10868VZKs"8/f?)M*ee[Y?-NAQ&+RnR,k6
%CD$t7]:kr07CPfNLfb.idfa\j_\BW'c-FF4k\9#W5gl5RhNH::/6@Km66"1rClin/V(P_HKHZoDnG4S4'tiNcn6A.n$r*2,EYur:
%#-(\f$drX7:#;mQ/!AV/*;qZDP%uV!El9J?8;Wj^C.:b26;VRVBl=K_U(obZNOQ;^L,4'j"+Soo>N@4f72o8P%.^?7dEGq5<abXD
%;@eT216l218Yn?F;VGp6>TNrC7#FY+eQa.uX4b<E-4&GclkB*W!5T'9^%*<\D1%+J^dU%L#$S'riC+9ZKkNWKZoI00<NOm!J-:$t
%$MB:o"pgIrjrtVNa5S-<kRPQ:kTs#e%8i?,SGBPZbQl5DBKTcH`Ak8Q(lQbZc?:7S'JX(,[\KBB&#gh_]%Q>q]oGql!/?p2'$p;J
%Q,_)3ULI*!2IbOg%_66bm0QDg`Z\QWca^e(M(m!Z$F>L"G6/G+ZS&c0aUCTW%Qd4o"OjiK%lmb7<*/M(P'm>@^_.#'Z"sC@d7VgU
%ojk=?L/s7LVl2k(<e6;c2QFEic-8YIhg2Y>N,ji$]rom<NM0.Pb$%=GR5<P8!T*mZI%NR_m3pAF6:3s'BXVZ#PTGPufTL.)HEj2]
%^[6H-B(d,jRS^]Q"#?6a:R7SOC@a*t?Amss(_/X]>6?LL<M#Y:GoT"O3giMDfOe8>=D*\6#C1UQUX^h;b$$."+K"f]Lt7%4nLB?H
%T$P4HfiAY)p5?a8K*m@*4?NIB-;d7^g7C0+s%COk%QdcKb$.Rc_&X7(1+><HH:9nA>2VD+A`3fP7nrK9Qn(+]ja*u@9s0hP$Y`g-
%X<a'h(MfB'h9C=QAC;hN[+'_bQ+gOQ;Q6cLf8Jc$\R'#han=XrA[u,%O2$rb%mmCrqF@^gOm@MXqJRV1NFqnPdatPR.=Pb\'MZ2A
%O+#=$Z;bbM[0cN=\Qu)A>&uu64JsKd>HcO'd4:[=B9G?=90L('aTt8u6)D#Q6uOrl9D!7OCTtdab-Ou#K>3U<8(@eZPkcQOs%)cH
%')f;%ka$`;k;jo8<BIlf5R#+uS")74\YK9*P*daYQA'Xc]hPMnRr`;uH<<fi[pH.1Y#dHd<r``C41=>R:,c2<>>H`VQ/m7l\QuA)
%gKOb4SlMANML#,jj>sU'KSX+;Om@MXqB*9IgW9%Adk]@B%[cZrH6/.MRe<o-:'ME-+i:5FN[Qcnq:1DsG/&@&\aYIj%kDp$o(QmC
%^N?lh:SdJk`iYCt8$%a(&kb!ne5hn"7<=5X0=A9D><JrK1#8&g>D[GE7o6S^O%B9qdf5-qhaO>b-K#pp3<4]9K[tuZ>J'<..0tj;
%Hd#=s8-q)@0r,7>G,ttD]R?]Q*P%!"g[;HA;VbOAj*)VL+WY%sUhHmk2W3df[>7l`22/E)K.%1E$HPFOWt@?m#"d,"5IIltGGO5o
%lO,Vf1^&>a0]5?e4l=n^Tl`!il&e;e7'7\o5-sF\[k_e[&9gPZ44QL_'R6*UZ^2B1.AUfb]5F@Q1^;Hr:4,>MA7rh?^TeemVaTj,
%aETHeq+"rYMihORlKM[T_jQZ):`N@(+'V^P7To3bJ<.qhBsub8OTPg1EEarNgk.uA#be%_$<rHup#(TRA3gEU^6R7HQdQoi'o=Is
%,GWm*b_s7O[;2-=J;l*VVKGg8?[#H&6VX>7@N*g!1_!SVM>1MC(]O5SO%DF'0PUAW0NFXY/.(p)@THLs=[t#F^4Jsu#t]C#B-X$s
%QE,uVH(sDi,1OY@<A>hD-+7#9T?f'FIA)pSq6W8J9uD^:(-bmiWIg5Y(`C@/5`Q'p?Ji`&!BTNS\>5_ZeHj(B1Yhe7@MA9L+mC$K
%HVUqo9`n3DM]12lRe%EbX!XQZP+fn"B_fcA;c^p07kAW(!-lA!Ce)-/#AfN&fJtN)OYGAq)]]RZrehkA=LfFD9*Q,01aQ;EPsZ!0
%B;1F+#hAsbE91]mg`W!sl#<$_ae+$a)OpMR`qiju3F$j&Q*W#[B?!SFZ"<JL4d/8XZ8'XH6feFVp4,I]Nm/nLC5nOq9oEb!&X%_E
%]>p`G*p47/a%U)+:B^#^/>jBEep[eobY_'Eb2Gja-L0b[70*IO'6IZIU)+t7WUoeA@SQC7%21,.j.\BOf/rW(<I%49s7Y<H\$@8N
%e(Zh.s+-XD$3QALrp@FuKfWfk#U%KG0PW";6@i'K$&IdWW`;(#IkQ.TF$KD(nrghFA7Plhn"ttVEK?aP?fkt_B(,&i[K(G1iOUWg
%D$j9.,8NRD*5;/TB$iG)ZGGSVO(6bMMDNW*&U59qPEup#/BrN=B+F:)EHpM\qJ0e'7HuXkYZ7YWg?)@KTGr$GPd3thlHu0#k*E:]
%.4Ur<b#?FD264W/0+eM78t"g.de"8;-M=\^]2ZrB;<pQug`!iP*$IuG'IKD%aluPbM9MBo7I)Xc1JJjcP.YIK;Ki>r"lIe%akY3,
%GUYDg.6)729$<9^#NE_Yp(_ZACWU%U=$&JF2R%CHY"5GPBd&%(,0,^_X>W\=!57u\1?3scEXEZf"_Jct`:(OHb;;L3LicXB$MIV[
%/&;2sP\rW"E"NTi2_ZYp9hm<LVc1,f)'bk^@t5d=63I1'k1Et45#pT+#sn7WZCWln)_(`;4'")27n>:l^fsU_QVhdj)XJs7Ym"d<
%?9Om+Wk/i[54h_3Cgah@>YIS\<`5J@=WY!_aoiNVNYnT,FBjVu"0?&cqp;SlZbmV<$HSUh0ZqTD9VV;kk=4`JSATMQJg>sVSf+KL
%)Ro"o,Oe_JV<L))WKqsiDM?1@.b.<n/\%ea'KiB\K4B&@W`-imj/q?&JEkIf<gc4ll(6,k_D)UYOCS[_16p7>ieN-^0Qjjk`PtJ4
%+lG!'`,l":<V?k0Hpr\FG0pT8Z<QC=LY4t6'F)(+C^Td-_,DM&9I*8#2)n6EG]REK9D^ZREAW0-l:8nEDEQ2M+qkU$n<ud%jc9L_
%h5"=g$3"e;hV;hH.*`d[F=Kmk(P9K$Yl98e>kDK]9:K#b'GCS?/F)&^-1gZTH8q0HHl4Mu/`EQQ*&u*?!'6_5OFJ_(#F_5a$@P"3
%Qe@(0Q@dl>J5AOferToj,T6O#.T,aD7nkS#Wku()5!on<E3hN[5#>u\+Ga-S;/"V,:Cs+7U2JG,[qU=lSM\17f`mJL<Ze\%rX(#'
%5SJj[fJBJMj:)\/"A,@(mXn7>*3eYRhDU7-2"p&E3I_:QmSTY6DI.)?JU;KXpYn+0/aLn`lK`I)Ch8@^W9;D5D'.92m%nK6+YSH]
%AP@,DH2fgR012,Rr5-nCdB_fQj,AeYLJ#0Q4i?VXc6NkUGb$%),7>qRJf=D2Um(/QFokZn8_40$9i>eR*/l>5jT`!&R^4V+NF&$<
%Vcrq':9;tpfIkpc!^c'QS=:pi%W,dC(]14GXh[juRXtnG2Z9Z"Eh;$?(SLT$7DWH+N<L4Rc;<&I#Ig%*<1U;P(?@16%DK"Sji""[
%;i".iP+Zu2,eXA#?eCf0/>?$[jEq6HIYoW1l%oEZ5O7n`4cO<qicgr<fT?QR^Apm)n*/,bXCYAL&'+nu+WeJ=47:*H\c8\^,c>M6
%VWDhK`Y*h>ehX!QkU;^^fU#KYbHl%t-#:K8d&O4ub,jQRTgO20*3UjeNbs)",$/\5cqs*CZk[Bqr4J/ES#:"CXu7&b0,Q[BnKG=/
%a/iN83o$gn*+$\B)lA@;Wc)4`)e&'dW5#p<s/Y(!0<L(,0<>K7jJ(mk,pKDbh+["s'JpBt'h?ZUmHhmUAAXaM_?nRX>+s"<-&p1b
%J28Yd>i75mQ:W(a$1$8ugE@%B9uYa650W0Tnougkn!@/hZ^j[k`nC@!%*1)V&o\CuaI>O,Wt8Pm!H+gff<L'!k`330gZBD6(Z?$8
%XMQQ`dfIH[EBD6n!i]COLD`%#;f6ND84C!aE,+;01(?=K(WE*dZJ-eV'P2QMb*@!C;2F&_F?<J;IAm=@_lW'6A="sDZ$NGiZs*rc
%F"ucfPJrj2Zsc[oMHCO,fbs"@[J[MhN:dt"*o2RcMbbsW[Hd'W8@HD@91\6;E*rktCHJk#X%ESgN%$f$/.V"TWJ"72&/e-1Lu$a"
%4emXJ$\g]]53^Vq+:7SNc=l!e$'FULga7kqG&Y66ff(il9$Tabg58<!Zlin%!"ZH]09"ZKoN33S%%c?(5R2S7I'=l8#Y.`Zg4BC`
%fLhl.KLL3@XgY4jJi:Fn%_0e-/kZs-;nGS?2]Yp"iY7ejc:OLZPdQ=.'tJM5(<ce6mu$2YEF4M=D/rM4S!:Hc('IY^F>j^<;g";3
%%mOH\VA,TArHmQfpMFk93ND+u08#/@WD9op>YNg<eDg9Z?c<F+e6`j\1tG1[6:`m90?kd3PXb6$a]o]ERbZsp"B`"f/q?//#^A64
%LP;T^NCcB#qPnq/>@M[)jllL";-6A?jJ*$%*h0JPh81sS7i'a(E*d8_=*:j4_*lF[hg!tJd#m/@f#A)GC3\Oe(?4,\6[VQ1;7GP`
%+VK\r9bBAV*^-!8Z@lrf`9;u^\Xn5d13:\lrK<\)<:nMFSW^2(YR(o4qIF[OA>F6\'8]UFf,@r9I)IPWK!acdbIdUDQ3!d`%"*nO
%d8A(7#'A54-P87I<hE.egFA=UOEj4S_X\El`!VN<KWReHWp?kh-URr@0&eek4n-dI->mns)Zp;=6;T)LXZA&.U),"+eg_5<E87s^
%@ueJoTiaR='5UEpO&i-]6_GVo/*sgeOhg5n'BkhEI^`0BDk\"7h7#S70BTF-!gM"JIRqDg>WZr)F2%B?ep\",NiDI-[KJDJ<-f;!
%H`cq/VgS`Z?X+aOMIScU?rl!'*kCMiRpl(p33k.FT+9;e'?$%m^%GsY.niPL1h249EPAt:WkDuEd3EfNNkg]k-Rpr#Q/-$n,r^\:
%27r@i)2POl:RF?3Fgq,rEndlXY9G98SsmSLo4/NTH*QD)qb_4ZM3E`g\tphg#SHP?c$s:TX#Q1D<j[W)F<^BA2u@mHIp!?s$k73Z
%RMlLX/,SS*oV5'5a$DN!o1B&=b4FJ'`j%fDOU;+ZESg;mg)N?eI:M0oanL#0[1^[o%aY7GUUJ7,4\W%gT"KiNp;tR[86BpY^@"[6
%/n64l/.]aU"EEphPq_1'Tp-*%m8)3D9aYf(!9&1rHFr2*U+p`:rgc^EhoQb.NkZRpZFZWe2D;rA!-L/p`@%oa]B8=Eda@Z.Wct3%
%`8%S<>;X`&5bVoF*TEu\jZ*RO6#?pc,_5ZCo>Y#JqqB'C;KNl%[#$Bk<`XaL#L^!=*I<_r]i(A*:g7Gag'jWt^M@YD;*a&pId>0^
%7&L[u=`lo%3(>8k,@9:E=*Edf%1!eH]1bnI0&+7MCm-+B8Nct;5bR#<1sJG6H()/BCa`Y5[e7(SlfDYb>1h-d88i)o$96KsmfEOk
%q5fX_c^3UKa>@N&i<[>>/I=UTK]!a6F*Rn90'u$bkrOXLn-^&SC*_AU5p\[!T!k!6mQcn/";H>5]38NsW6q#t2UbTXLniurpV]'+
%T@KaeE>I4I"2MbgKP+8"0?^ZPcno*?'4q_1\bJMUdnUB<q'h_bIFmbs#%r:PWQ<i5gZp81qP"p7LRV2%dt)Pq@YUHKL?C`N$:49f
%LCkeP_q\M'lr\auqu&OmV-&efnnW1^(W#(FI(Pm88@CZ_#:')qQm4Fr/[U0&r_.(HUB6bULZ^>4%Ssil1t";Q,gL^1)C_iIF-u^Z
%B+jIkdrJ/+rK\n.327a(?W0M19a^-F\rSn@-;;>fCgJp*@5<Uj;!bmGrCtrk]7;D31Vtk(:,4GpXjR$@X?,o8<j<MX1[icIa`rGL
%8>uM1U1t"8Gh_fB&%O@Dfmdc),arZMi#PqJq0i!MdYKI^2)&:cM@e2l@:1.3A;Z%a&36o5nV<f3"M@ZS-dc@-:=9DpFIX_p6#%c'
%M%Q9DZ?^R(<"d'P'!"pUG*0KCHZShc+"e\t6ZXX&I':7r8^GE=,[F?m#FbFt2D-PI&'k;$rr$%C\sOc!F&R\&laCt.XA$M-gSL%"
%9:#rRU&eB07hH>PLFYNS6<Bh4p`p<dl)H!'l>]9+[@/>L1?0L%i'H@p.r0D/b`&=Eo3#;0BY@B;Eg5hkn'@i+>?ftj,O+'P=KII_
%_mh60+%+b4DUM9EXEYCN86`2:,_og]V/D1o+-qP$1-gH>kI8E-Yk.#2.5I[^`\-7\C782fiJ/\T-mRd%gds?[X05[SZ]R7=f,P/d
%fIs8V8pIpX?<k6XVW6E">?IZJ(+IG>.P^)76-(AF5lCnm\t.Tkrln[X=1c&sfHnDO72_nRO?;!LUHRAc-2T27r9@;!/isJhC2YQR
%5B+NS?FTq26/^CZj(-=+mp:u9mG3!4<Yo)]<d0t6m1N><iP1AYla'i=0E(Ajam.S6/M0;Xc]cm:0Q:k:?"V:W/]m9!F"omgUH^>X
%E^,a(V8VXapEq-;-W(;o%>oGGfl>-e_I#V2LG1QfQ>!5I_a`Aa%q8]bpmb*r8A5?ark4jK3505GmN8jGFSbR+*P@2**T"He-PW^/
%iFj?H@VfEbIl\7,I`W08TTU(tpFVllku3hCSdFEDZA4:L>R1t4IMk]ep/7U;hCdJgX@K1QoJ^Z*p9oR5p?hY'>pM\mom*GWm[_uL
%]?o<5HMYn:P@Bl^i6imm<8:a9\U$;S"4Jj<qWO;5\/`Xhh8LNE8VcLMJR;8iT1%j(@>Q.GX;Pl^g*=M6DK&+<p;.GV05q2\L3rc*
%fpYijm&fZ<o@KSPqZlQ6*VscLbJ01^;H@kn<1F%LmUY'9La-Hj)qR:kTO,8O8VJdSY3.pbot*oK:aBs)VrLQ/=jpZ^]ucISJ%HXu
%92'Z&Wr;W,V=>8k?E[[uFa^6-gjaM4akkU&5$o&VDl^B/%Rkl4>m5FFW\9NUIi"".\/35eV5V[T8(pWYh8Qj+=#e?B-ZYk8]3TNm
%'m;>(0O'sS]&"R==`l78D7Du?oa3=b$=)0nUSA8<>2(?9YMH&PpRN3aFlPfLIk/34+==9honhb@\Cru7CNUPJgX9(-9[^!te!.kR
%]QroTG+%d9#?_FIinL>N=(NTD9cdj:j[uK*V5[:F5oR\u?j^n:XIS.\b<0?\IHKdlVs`n'54/(d:N^Mbq=N!KXquQ]ea2C,K0)R-
%H;8HkQrH\)8]cB&MX.Vn_=^WtkEC'V,^20h`25G3[mlaQ]d.\?A]NW291d+lXJ&RNM6rRGcF2^bdrlRN<ct$`>/X=4/+C6oPO/)8
%K67.;;i@RA>j1u^"nnesCSuP%;L%dq,9S2$BlZ"NL'eSm3(K*og:F1,-r!GK;6SuL`Fn<@b\Z4%]k6LE%*9'G8edLMWm&>k1(=TD
%1N`n&L[ko/b,nI8p!.*;2Y-rnfu)q.Hos+>4C)\>/ki,;(&ieSlP%V].eh6ol2=JJagr!STKoCj/k_6W]Rr<&^6QS%5)Z^hVC(Y_
%GZQi:U`tQim-Wj+Nq\N@K"P(NHH#c@YB[f"V-T-Mj\u<q4iI*Z+=+!j*5u/8VW(j.cUdd7mOu!E5'19"<7.1nn@H7K]YjFmN61F!
%f_;*[Tr1NURK2qrQ)!#()aqtQmJ)[VK&?PG7Go;[hcrn)AnBCI==n*u0&cb+#[@s]duR!B5Z<>!W/)":9_-tPEn@qo@@"j:IIGtM
%=Mg+#CT!J?*2JA9>O<M#lT6.?p>\YB^d%m:cU'pHZ!e":BQt:IrXD/BU&D@9r+0jD?Ou`)Rk!>L(qd'%_I&5ibItnSYYi.a]^Ip[
%_A)i_Wn9T$^jl7GO>47UpI?*$VH"-'.4(*;4*0DHhNnpQ+<N6d40[V-TR3"O;J+l$.7t9K_pRN7n^@a200+FOr0E+r4aAtYZVqS;
%3kE`/_J],u>kI4:qkbiaU>u/:.e=#Pml+:8+D-dgG1E#<g9(BE"P"ICbT7daG:NMj7Q;e)90!VH32TfA3Xku*GqO9.C"uJs[-u>;
%HRAK@I.,78iD25MT4F?S8O\,nT!%kWnIQ";.E0Sb9&g(j+t,_sje7bm3O15]-J/M@Ot*RXET^;d8\PgW40SoJ??!I"+1:&E7fZ86
%gGr32CP-d`3;ste\Ul\%81I]d1[4eAnDfq@=P([B#1Ie^1TS"9i+^pr)(tBF@KI'WFf'QHrm1o9CiY@<1G156LM&DTO7s1B.Ws=T
%TZs1=8p$jP&cnCa%j`glrD?0=I](WXrn,)!l*5s:E.SVC!_7\WeUF(IeE5k*isO[X4?a7i!kX2W^1GA7[:erBY48CX58k&UGQdmj
%P7[n+e#.h[o%e/`h,PIT;#M9jrqQGg2Le,cpl8kS=2fED`P6cUq"Ct;(bUD--37(4hQiASSj7b:o_qNV?=42!THC#?;-UUTs0npn
%"!"0@ifkR:*ALuZ./*`#@lsQ2/[fYcZ\S#$j/:5Y?ZH_&YBdY1T-$oB^Xni85%;!hq2k_Pf9lIX;]/)66V1!`d"8ah[Ah8&X`i\%
%;4-o[6mmIH$KH*j+Yhf/gOu4d0>f<)e$b.Y-$o',mRL.n/H%3q'nGhp:Z&[sj<RnNo5LrjmmqAS:$Y:Zb=>&\pjog72(\b4<L_l.
%/.^#n*j-L!XIU]?l.3*i8"ns9h$S:sJ8GD;odD$<i8nj;U`^r>T1K-8L(gm[T[kAmP7I_tKqi!.M40pfq=(_5'V&@\%u9u#%qd6o
%U%U;a*?tQ=`@Argdf"?U]#.hpF/.5&3#C-1lrP"X!&q9=U;f`-HJIYZD$@_@_kr-mLkF]ge1SPlY9.r'^`st7bqG]?;)NRp+G+?9
%)o\Ft,5la=2?0@/:;756E:D0h&0kQ2gK99SJBXu]!3c?eTpb?]RX3u/MhjV0^T]Cu(SLg*&Y\;*"f2:M6A^OU#:J,l]I4Q$'<qD$
%nGXi;V!@^E7+_O0#b]'B)Am]ihuY4X\C+KB%n\F5:(k!gC<Zt/7X5uF/Ke5OEbPIqd:[io%n_*?_5bA.mBZ5_(V?p/22XOjdVK4d
%MAts9829N.i$Hct=4`bba/![T'+W?k5sD]k99-]14;[b<Y*3dGGn[,lR1o`u<qL*(hKNtK\;XXofPS^(-js8s,*9;9atFkY;=AlF
%O];hCL5Mjp'U(12%V3ZM@alAM$hrgKSk8Ym!W8R*(oOQ_dZH2dB6tT0;Wpp&VS#&ZoR*@2rl#g$/k4aGN=f6o5d.n,T(8oaUL.bn
%D-pd/I9g7Q$Wb6M0&qJI'E$e_'d!>%aU;H3H#F?;c!8LQ$58XBd?S=MUB0AG-+lGL+fd@5jf3D/1[+@Z3t[@W1VDV\/d1qiZt=d`
%/;YJpJF::m=@1W"d7FuFBD9a,gYX=C1EJ1AidH(2?`#AaF?8>=;O4,9N8MDeD]L\,:gSF2oKIZm0,V@Zg)#N0]%+8kR9+&!+.RF!
%VbZpW-Jjm4Vp/BlF)#"KpJ;/Q(2FQ-;%mA,4sN*Nfn6L7;PEXFBOiaSrD@ghant*7Knm]u3+\HsORZToNa$OkU[*p9eRj3\)K:VV
%@uUIS7d#0dfmJB-c@W4_A1'jTdhNEAqr^2]P'!Q)CUr2_#Qlk[7<dR/?@Y.2.N=Me?D4t`Bulr+PiU=_Z8@W:c&%*b-LT:hc0=Fj
%?U@I9m#-eMe\]@Jl2I[u-\CgOK:__u4aHN.Y.g"<q+)#$kG!?*MO9=8nSHk:lG:6/2?jY[+QN>s`p^s!ha"O!2,=Kt;^aMkA[G2*
%9sh,!!=>\/RA[Y`Frn%>L"uN%*A;@-Q<L\Q]b#]5m%]l1o_qN&\k([BSdG4BC'6r74quJjS%-j>]iQSYg-oXoJR*R;(cXXlJ)pTh
%>r"Y+iF60NM)G3"=r;K@atqmYBRj3b.`efeJ_qS,&-`(,ggFJ6"2A"SJ#eLQPLUNYoGMd$jCQRgl2A0bW2<?B>aCsbq!jRnFQ9RI
%_#KEG<6i*oD5$sf6Nur-3.4:8nH+sNaqM:=:U&H-AA1^]]2-95@j$pH[js;n6($RUdniuS7"UX8%]h;JpE-Q.LdQ6qBYF0!QooAX
%c&GH73FC#g3.(c"hd<u@%V.@[n+<s"&#Zk-FS66#9UkNA_I[]=ZOQWFn%K]<3sqMM1>M71/c^Jtq)dR;TO]ZDjnP5MZ/t5tXc/WP
%-H'ZAU<$Ak9c"8IhZ!>srTMVEKt<8d10:>bo1]IKH%ama8ah^<dVqTeI",tkZLledHa"TZm8Q7OFEG$:/[1,H0*?e4H1nQ=C-]ED
%Q/l6;=8Ut2AZ(Wa\O@&XJf2M3f0.+%V.RN>;>0q29g$uCL$SR3MllupeQ011D0sR]\E^5tm^h\dfB]S(BfEFs%kmf"q>4YT.9CR1
%+;)^f_k-Ur93@!#-*lQGo\'PUM+^fo>f!0QjWnl`VK+UNfK5uQ-Fgp&3&\7(enasF/ktDR/(2-j2g+NH[8XA?q>P[:cW1iW9g.q/
%+3m4T<N;n=>X%>P6dPf#X$*6mmomi"R>`248=*e'5E(@#]3c7>ECidanf;@IA)!r4>13:(BaT'XU_uh]>IZ4I[.#,1%;*5WTjN*D
%Pd^L%f2'/@Q'"Vl\71GI@k/dFgg"p*^6saEWfa=%i5(7)ZtV!@.@9C4El(1i0K=i[OffJf0=L`_='XXNO*&oY=7,[0[FZ5l8<7MD
%\$nkM.bKU)KE9K2.!B)1UkEcr<:26DXt^OZ(3SVKDqGD]o[@rn2$<;"kIt$5%hZDgnTU=E'B+eni8E/1'[PFs%ENe&_Gm.";0mD!
%&`W)KK\fbZYl0d.d5McdD=.%[+b"CQ=>Lgk_*kV+1reL@*k)TWfM88-(?rgr<6GDuC)*"YlWehj+Pk#rF]:nQJet.=Hc3Yh#-=gu
%ZJ]R=d9^Jc(q27nbU)iVFRXE7*hgcUMjF_%ni#2BT720lq:OqaU!qNCRC'C0d<WF[MLO1jE4ec:#Zu#?2Jc]r+fl:JJ/5`pNr!tJ
%K8'9ITL@$8DJ17#=?F%n%[CfmU"4RMZ(6"rJn`J8KTtUGpB$5<r>W[nQ)WTZ7*MqOP*B36-6,:Pp73GL'*g+^-<9'[=Grt.Z?R^H
%J6550cf8W<+UWR(1FF.<2J1N;!Gi>m0s@9SCL45Pn+tT=+q(>:bpqATTgkj.-MW*=lhKGulMc$bQ1XNa*3uZ#!#Po8Pa`ArPq[b+
%Je8*CF"_8",X.Q,'iflFT^lXt>"bEl-EP9sIroJgK:W;,CocF?gh2ft,[&NJEs>>SmTPk:@\Zc2[YESA4Jo2sakMLE%n&R;dqJ>?
%8Q6I)K#FdlhV.hXR;]qYUR'uHZF/bc'XMY-&+f=Q>4W4XD6)(B(_N"##N*S1g/tUDI#3kg(t&pJ=As^dZ*b)]YLSY>;/`Kn!M'7Y
%#.N'VbaF*6V$M8HE=^3k[#\st-hSq6rg>Wsq<>^C1M%Y4PM%u+P>qC1=9CmlH`>!'Tp>VIpu<!VDYEfR&("jqb/aG2OLSN-d&l1U
%S_b-*8Zr4KgX2>>eLfn7Q8QAFJhqa16'(hH0&LSaO7j,FMop+,oT,VBrrjq5f*C`gg3CmVq-K'/GE>]%-Z(:oZ!XPTV-2(27'DGo
%G)NuL%7(i%=;5=JNb77H;Ppte.G`*p$\[Kn&jL+,,mX@+^\nf.0pe^C7%bM[b=u>nRKr,:cuXAiH1JqddIT1lat>;-]&nS#;I&3/
%/\d?[Js:I$jd"5H%ZSH.cqM/0m;3)Jhk'e<CGb!e'_egPna'0M?5<3]LaIMSnpA9iJZ1tWejG8]KZTGT1c8fDC)h1tD0J@Ai9O'O
%[P,@M90q8Nc!@pjE2!0P/\`743H04LBCcb+W37]4s3@tuNb%D+HN%i`2$j[R)pZ35c/6t)73<84EEW99fem'1A5hJW;UMZ4L5X:Y
%*c7F3>"Y"QUXp,Siq'V9PHK7L-.7.jFIC7]g4ra(pBT,g6\0CWX&cF6FA5itopWCLg3-3BOs9[S>.9en.]p*>`;g"t?Z,a(BtF3n
%cM*BolbZrNT?/1blFO%!qiPukht6uOPZnJB>rP_'L3Qp(3Ja0mbYl'r@J=QrM,<Ik@NpI!QeQsb\h8FY,kgYK>p`Y2[4E1s?$FhA
%5D$$O&S2;nOo1QBl?Z2u*-O\$3d645'<*YDUsgf[fb/A.It+`fGGOI)j;pOoVB_R<>Wp`?VYfCe\sQ#\"H71:0qD9Lmr=6FiB"IF
%D$;%ZWRb@Q`;o:Q()uU3dlhIB4fLL6e:2F;QQ_<8\OcLqlE7/TLJi7kOdSD%,d0kkNMMM/'5L)h<B$k72_hs=olU3F+UsW;M:hQh
%gO;r00#&#Li;MrPGZW>"AN<gtGL^h#R'%[[^XSYk?`7W:1t/_AkId.neERC`4dLP%dd5sgV6[D`6,G.>Klt#N&OKc&?S;cN+Y2@^
%^U]nP\[]"_gMA]JYh/F[7uI<=Xf;ig708I[o_f;e]Cg'kCq1MXGr"],8<u?,KX]2:I'LdPK^.s59(-5=Xf?dk:q^3iGeYt4DnBf\
%g&(In;X\P'E"i/V_j+?kESUbY]@ODG`VJRJQR4Z&<=",PD+THSTF=HP^/r99C&6X6]m:LDZ\>ZFCs1'RoA6*Z=m\m%f9kMU2D2h@
%hQA`ehh/),`7&N]06chA/4UUZjKY_XW=!f1'#nZ$D^(M;LFgq724Y)@>um\MI+oZack#a4F6REq:aZQ)H(aZW?W3t_H;th9+-cA[
%;9Sd>5!KIl"-\!dK""n(acQslGh.np=jpghUfOB=/,t\4?:pV-Aprtin])pk#nd+eUK=WrXZ=VqkUhIW9-a:[PqLc=IN];be9hVf
%Q,PDHLTa#`I(bhqodBc3e$`+^Q!RV+psl8/Dd0pMlENuhr5>f%W/Prjq0:A4C>SrG'o^3(s6WcRmV!@Bj]0nQ3Ha"P"lH<9jcNNC
%D4<]q#V?cH"7+4X;W>UrMT!UFhbe8D[JJ'>jc&/9MffF+$\H/3-j49;\c3L&2*JB03tWk]O52XtaQ0'Q?M)FZC]'ZS*@.maTdKpb
%gS,at`pKQHIR0M\WU)eW\Yf<^.kR^C%1@Yde";-;)u&"1Rgrs0"erQ/[&n'jkb\E-hCem-C52(UZ[WrbXa46ao4")ocVd\PW=o,#
%:taGGFGtHWm7EW32TVZk@'oMVcoSijRD\[](VSI2Ln74Qjf:+Dh@BRHj1Nk0#-4BN4UUO`9e=ur5un#4n`n[Pj9d/:[cV?,3CNdq
%\_/^H2\!^D0VdaIL"ElmpQfB)NV_F<o@Ij@(>m&X@^Y/e5^%C($F<h_8[a]'Yg=A$l\eIAO!,"jhCWNXE:^^9]:32<K<LuRIP0;#
%4HQX'55DG9pG\Ve5!*07*^i,4^!&-4UAL.q^/le9??2MHg.gT@b_g95/u3@>R!g*=T"X+L!0A:o^?b0!E_XUNc;035MNAE3D@4:Q
%b`=O*>ZRf,bUA,`>IC;G]$X\[P)/<_e`@FG?MTd.=hC`p[\u96@1CH@Du/r+9I<GdVJekZA1oP]So<7eAfVfZg6jE1M>0[Jm`rfV
%4IL6d:X`g!fJDaT--L*-&7&<]]3r=/VfirV(UbgfAf.2'np8d]:O?^RQmFh:@5d\P:ObJTggFGkqE.nO[oHPf(^V";-C3\g-dFl*
%f"ip*h[^@&koT*WgHLtTVk\(nk6<FG<@<3tY"C;T._VI?>NIC\M/gWErcLB3ZN'Z5@4r3&J#;&P#-__`TADC(gE,%_AW$2B?#;^g
%d<-u;Q<QWd?*Dui9f,BorUr2+$7!arXi%]RbEba*=XnKt\WhQ`>WiErUP0qnSR`l&!TLOHZO79>qBVP&I;`_srV^#WZXNm,,s-6Z
%2Y3_Of+%8@Sdc^5]DgW&#]l70dfD/Obf,_'!Oc!>T/l::JB<SfJ^"1IOE\ds`r&FaZ!3Dl)NUue+PCT=qMpbJ](sq0A[p8p_Ki5C
%,.n$r]Jh3-haP[l]NK*=B'Gf<`p5eR^Nh"5/e,fQj)TI5EAa6<s7>`C.6;muC1I:p-QR6.2Ve5n;eKrsQgPoK2(lf(-*]FF(4Pij
%`p(66T<L_mPYh$j<qL4ff)1P*c14&H_%`iOFlI[!Tm6uhXeg#PBU9]#]Z]FRm1%;nIaf\4m!njrAB(r,rm1UVp:r+:oUkrOIsL'3
%'G:G%TG/!-oopH0H;*qA1l%.iaS_Gt@-^-a'"cLcWY$2e#S4?Fr_M;HpuXbC%!eRl<^7/#Is1pG'D0cgR&T.3g*TMDfa.\u6oK"Y
%X.*+cGd;JIZMb4P,:Ykb5]sl:X](pG6MpDW5&#K_%Cl'fj#_rLW*:JhAZfH]0A<uQnZ]s?IA-^#YNp]6Zb74`nCS6B@ZT5*MpEW0
%0Bq*F_*%b0TUVO_e[oGnAp]LVOMDGul0PiE/lM(qCg1pqZUI)U9klb<E')!9,W.A7gTd$r<.JMtL+/L6BKo,_Donm++^tNhGMn(C
%+=*-ab]U9W_5b`81YTb!9_V'NGd,*&*(f<W)4S9L(s308<-)hBc[:-U.l`CQp;n+sr$"Vnm7%ib<aQ;EX>dNIK4c^I9s"%(c0qgR
%cf/Q[3SP'\9S]6"[qpfQ2o`Cp$*`.(%`E)9K$n[kPd(l?BoK$nHe(N^jQt2I'rN@%nL_41VX6"i]!qciQ;e#,e%c,j'.&V%aMaJ"
%98Qs.R'I(*O(f]R0*6(&441@A0eKgpZ$i@[GU&l+WQT3AW#)sb3[hSX28]XqV@TtHHIG^/5XSuP=@1i(Ju$:5%)UVne*M_Q"L&8!
%P"r)d)[]M)Q)JR#&@gC;$Z33N8`7YonGZ$ikVn_YU!s)uDl`kZ!'42LFJ]lT;\#H;O%A'Q``Lj52G)Tr]m[Dmj#PK[]7BS\BSt%0
%a`iS?[#fmVH17WM5DX;mbI?[(C'tWZ<L\`h>)4j1m]0(#C3lsD@s:*\dP3ms-Z8t_WCFWpLG^_#e4'^$#M3D;'Lm*t#7T@F^!J!K
%eXX^+'P(WnluLu*;\O`3Xep!H8jGVorb-B/F'LZ]*U)S=i$P%6%QeU?(B,G03HkPEa__2F1LYgf#<?L;fXfsSkZL!T!d;mAL/O&/
%fM!H!p+\=$Ys$'q9Ds9C"njOnDEFY85WRSEX8'*"BOaG_41R4.`10E,DNglq<k?M#M$gSe`VUqfPAiV1@r86a%:+]Bfi\o`&CX<r
%)!E3)n?r?MO7?s/WPB&@5UM9)i6aMsS17+n+NGDK>j\.X`8fNTXRnn)S*H^AZ68ck->_Un$^lD&`@Bm::/#g/A5qF`GjebpXEUb2
%189gk\T/_.eP>VGZ&Rndig+_5DP"sZU'ZpAOV5hW-o7W-o@:ksR]Mg2-\(4`Ne+@r4/[hT^b%4i&$o6C`_E=YnM!27A#:Ge)<SCd
%5ciK_Z+nMER^,n(K@k(_PeQ@N7eDoaqpKj9\n[ZD).+sTg:^ZDLM-C<j@q#_dntGU[/,Z*5R3ZF.GZ^3CHkN,Z3OM4)fAU(?&bp.
%0n`2);FK-<M__]%C6L2ihoTP>TXO*qf'M?45C2)*r3Fc&k[pbF8'^fhiV=eK<QYPpC7]c-R'iEfY4PHT:lJ>K2'j:5XI[n?^sl&t
%!1*HO39&GFR]SWc<,cY#CD3j6aND<V^+`<#]HbeVUIZ?YSco=$'7kTEH(]s@E*p5F;E+ul*>4'Zar)>AGNo,_>+A732F1)?PE7mX
%'fLTuQ.5N=Gp;,%FL?BV0S#Tt:*/uJo&dZ/hhl>?1'+lp1J+(j2%J5$&s^B\ULs)dWS=*0d+MpObbn1A;#G(WNk=M9@SEMfi+]\T
%,]C<k+5`4@'c28j&E5&"2oS&u^J5Qi&nE"!366C&O-d.l]L3bnm;TVYs)0iY!5U=0Njh:Q>M-G**-k;"\grk1Ql+ShbW3p?NSl'7
%r+.W=/,DB!V3[sP0QNACl_FZG1)ihI$+)jAnC-'WOu9ql\H.el;X`0TcP3NQ'3WrB/n_Y_`$PJW<EUO$h>)AIk(2.cbS>AplCbi-
%3bV<*,PIU"IK&"Qg5`Mqq"gPFMBB!5&=H"Z-TDLi<U;Vh5CEFa_;;-R6%bR-VI?ku:Hm9,Yt.6kiP2\OSgW\D^Tf\81U!KMoYni"
%(8rS*<5(K,d<u9AVT*hC)Z'M5RHk\eG^t?"k>GX;UTSu>aaEVT7IbBQ&q1FSqPX./0tCJc5Kh&sS0kc^a!'g*Hfp>3K@md0K<+KU
%TSNim4"Nb(CF,3BYa+S4;q&)6q^2h9i?pJTQuT'[3Hlbr+2ZIh!qc.JE7_@\Sp'5WZ,30='Dg6.6e[)7phhmQ@)q6?YQcUECL\lg
%HdAE.6FMJdBYLFnE2/rNot*<qFbqkO[\Q`OO6JdZD"pqMCEQ@^)A^oTqn<'te;YC3ME92L`sk\dL+!\Oe6n+;#Z1dNs'`'XB<F%)
%Pnf!k[umc1i.lPuWQTcbmhetV?7't]9=TBKB>;GF[`.g#^O,)^fCI-CchHfG+-58+a7.i;T)JTCk4s@naFI>uAuM1hmlj<Z)mGY_
%`AisgM$+J<"<t2$&A(FeC[N;jj!90C8E-M6BiR!Y?W'\F6.+uITnm`R]'maVmJUJJ^KmiA5Grep+L\<*'9gQ$;rZ_)^5lgUf^Qo^
%&QZ%PD^kpo"IYH'nNH%"PptH9(?!Ys3Lp(n_E?^fcU[a%<5K=J;j\t$H5*V.7[UKISENQ(WlK\bQ7b2?3-a]AiGi>KAu!SZmr'CY
%2Xo)PMia3Krp_0pZ5HbmTD\m=[!R8`4s!%Vo&8AZ/s:)ak0s2MRri8smW2g2<[jh(9Uj/bm.n#j#u8=3`Q)Ni%YElWSlSP9#r\D>
%/[!kK60>Z_OYsec_g:E2"D@\N>fNnh\tb2cYOYAAZ>2Cc<r7eFA0C/F$L$##V@]ChD??'aBcaN"i=f!2ilDqn5#Z:'[Z&YW2-Z@T
%=,k?<6HpuN;%Lbq:4Aj26E#752t")Ye-N$DEMITC-%p*[7]ip0iAr4Kd?VnQ'\jBF(/Vjb&P^?ebY'+$6=sCF>0eU734RX_$Yl1^
%`D0uG$Kh?IRcmu"[^8X"N8^3')``M...KQL`0Z=Jm%+>AaS_1JD:7M>']enRbF8BbINR$NbhPU'dc<8jgcfr["t>.[!mL_70PbBT
%]o@,li'rk)#.#Srk%F*+o+#>:ghP'hGqc5"+9aQ;r)A=uOdB6\etgudZB?mLD#=%<5f[PESZW:#QeWKn?s&8i>FE"33IM9*@hg4.
%9@6lU+U6`u<&:ZO"g4Ym;9m#bR$H(kV'b5=/Nm6[HWoNpqq/[P\$9kmAAM?l+9Pcj@Aa$^mP&l]VcX%tbYrqkDC.1a\`rO8Z\/H7
%NN'Dm[hUpfPM@@V'(WEQRbqLad_BbuE)db$9_=A0jmLV)'\/fD1d]Ge_oZEmQA2Lu-Q7jjF_q8;q0WRiWlQP<Qf[5S(6]*&3G=9H
%V-??-a_9c-;iDuBGGqc\b1-0^(7QmqKnnF*HK0d?;@&S5;%Oq[V74QJ@-%9%:]iMqXi3Ig#"LOrQ4Xp#F:Pf4]%QCK!jORXAf.b+
%GW*o#r/dLbK_M4(1k%qObKXJQJOO7%h/.R=7:e*!qnZ1<)[(QbRQb=l+!+!F$m!*!WHV_1mPmcqqWT!USbI864J8QoisLZ4hL_B<
%VmZ/-ftF?6TnbJTR_HQkHa8-5HLa#I6=U(2fFieZo@(7SY3U._=gadh:H0pMmcESYW@i5)g/U4TqOM_Pm"`SU&qB)^ddU+UZ#8-`
%>-`;68&OSN9B:"rT6C(ihLSU@O$!2jGZCqC8?3`KQ^sS?6Y5EiaR='4:h;nknmsKA;*J/h>3P^(W)hRaC+g+&(*@_@8\"4#C6;JX
%FkS#&Eoh\=m1?@W;"E9MW?)h9n_W%mFP7ufiFuTdXdrMmrn=\qZ@CcrLO1[LbrtL^FdmcNgOr4`EK5&3]5A9SokKD&s5l#9q[QLV
%W9%<R.la`^lZ/L&#u'S+dYUfj1q'_4f'YJALZV@+q-JPo8XlAHoY]4L=]Ic]gZcCEUhBE44T06f`i6KrrVaY$P^r^u5G,^]ddOn6
%`>N"E(14IN<6j3)g/l%3MY!oTL-`4i=fKMZdosa"L7-.U+k]G7S$7\`d"k(dK!J1rHObZf6R7pN,WDfGm%gu`I<cWLA?%0,U(Ta<
%S"=/%2PZ%'iY6#nrR>52c=MKMoq2\a(j#ICC(@gQIeUQQ7$HWTU!ls2iG9cYQA<?k-1!dk&l53L8Y(YSJHRcHH]GD<Nh"#imnPUE
%]tpY3NjGol,'>0"FfjTAr^.)bYOOW\GEAq.b;mDD%/h<^5EkMV5WEA1cdl&->Hi"q7rq;h`-'IAqA#nYkH!\.JpQ9$5;/m`lW!+T
%8K?*J.-V\.8TE4Ym+Nbt5KG6=ChJn<S4=`<^8!tD`@:ME<p.6pIp**!'iKa)>A[@!5_Lap;Z$C.C2t,Te]'4%Hs:0I/!+t:ETJHA
%A]i.t5Dm^$nkYG05G<aVQZ;+shk6.h>o47nZL9l_*p2o$+0e5sT,UN7*i*>nZrmgN99lk)2f!MpcYX*^L\i3c6k&H$m$!Y_=u12D
%I%T0l-&:_+LDE\6_j;I2b>HE-].(b,UqNCLk[Se!N77QlKP@'iPAJLnTmcskP?%Kg<I6r&g[uX(cgMt+E@i%DO!$(6rBY[3i(G8M
%_I@"F$mqCk/rRV2B-6dm3%jbJUF#N#Q!_79b\MfhE&G<::()JANZ[MDXL3*m.<o&Xa]P*R)iFH[l=jmoICr<1c,Wl:[W*JLj?ruX
%Dk;e"4PT*NG1"tJn'_(hl#E[EUfb];[&l(2_G&de_S]8YU@Y4qUmeAF2i#HJBg05k+?D(HPP"A+VknGeD6prhQa/YV;t+L\fh&Qj
%p4MfH(EV0(8N*L3oR\rk:Y5*9+S+Nm2oGj_afUFeSOJfbOG9L-I@&b3A?C-!rr2ER-/%81G5t%`8K(L&r)F#&/A1Nnb1#sJoC%K$
%BY$?P;8<p!n5Y9D?].3@8gntp<trM1L8:8%g9+gSoq*\t]5h)\UVb1.iZ$Pm]c]?uGu[r'K=W7LlXbOlX0T;dX7r?i-nA="nPNNX
%_P=]",a5*H>O%C<q!_9nI0UZ`Fi5Q1>]nUtBDiB&X&Ah8mL_));.JE/8mgjC=&0WdVl-^Jl[)H2WEakgX319i<#/IlUUG67[=i0b
%X$o<!S>iDZZGXR]Sb5/0XAZ6^iDjCd0H)Io)6E_q1R5@@cZBrs&*qgCd)'AYTnTQ,qAp>PX&o>jWk.'#l3\I9/EI*..mUhb7CBfj
%ns4LQrBWnJIeNp8q;bJriOS]UX4#YgilbZWHe)00D-g^rePoUEo`Jm-(kATAB:<SWNg_F"[o:^P0jP>2T"O?ghd9HEmA3O!eQ#[V
%or`De/PrL>Zaf=t,s/H5mWol9<n.l*iOQ"dqV="DR(,/0X&X;m<'Q,7K%sk1`10fW&fu01E-a+fF5:q0G'Ne^Y^V(UQ/^=']IL!)
%7pu]legpPk\nMJs'GeYY1%[9`F@gY#po:QIIt^m/gdtS$F]DQ494<NFeW=9V*k]<84]>KKAp,YOcQ'`Y_SbtHXnDR,/HDEGIc4:B
%]lU;u83NW_&^lO-P_LKt5Ek6leWBN</R4S_>'LR8lc2e8+?AkY5C-=8mp'ue:.s7!bX1#k)VamSggV&Npf9;O>K&5R<RtknDj8a\
%.25o$&WBXt%Je3KEMM(B1`S*b-00jb"k__W$#T6F]'pq\kp0dIA?eR%F=k<?.tic(5q[Wk>$qG!8XWrD%<jND<l"U'D_(qq!^3;4
%fL8FKXkh^:5@1J:5WO/m<s7[-(abt1U;A.i337Zj6VQ4(MR76<)1=d?/StVJ#UHE+)eFh32M`NKLhI@>9[W]i%(\ftI1?W'Qo#?c
%=r[**_HdmI1OLH4T03[h@3#!46lH#VOpOh=)T&-l`lZOLQ"gdpDhBX=PG8BrQS#=@CdDldn9BU-m"\Ej5p-e]!e&UKR%"Th=IC:e
%mSfWDSRB?^OoWF_U2[&+_?d4q"P)eE:pmFWiZMg2i$-B3`aO*a[>k9Rj:%su+b0dgo<E)Qrn:7`2b+Go/U!*Pib/Wn4L[s$Hsg\X
%3s,P%"IW;\5['OhlV=:tHQ\^/L+jeTTkkh#`^17P;,'c2c^9)Oi89AcV2H3@:LIAR"'C1]'U3%C!"6WP#@$5XY_f"V#[OL.;jt<)
%c<)VS!LDhrQQqm0N3+3LBe_5TA"\oBGZJ2b2"uc<Kn:>q@,1I,FQ#ai*!_-fXJr>m3VF%h%YkYFG6_J-[gDh3B)7,CQ]")h4\cq?
%88OcWOdf!P=qV$<hL,,ig/`uF!s5<6_?#1n!tkq)ai<urK(j6pn4@pE?t"+j`^IaV5O;s&<HAP7BFBhWgb[_C2>Dn<oUW,^a[X+$
%fha#:Ek:aB6\B$loFLm9Ff[R%lA.W?J1s'!'):#aA<+CNPst'?>Pg(fd%IeV'li?$[EPrK_pY,-8,M'5D@gnHL`?m',jejkpAp:/
%g&h7uO_RG^nU`Oq-u3jZe]FMg#8?9gD'j*g!)?'nT91P3TUH$0JRdG,<0Nt>ON%joPCT,5kq\%PNi#&f&2t&]gmq6d]_OYQ*X*`F
%i:e:3DT4lfE>u9&5I!2*A'Nc(S&Up_]>GCL86$N*)jD*si3APAM[5jWaT[TtD%<m*;#"F5EX7G'YcoQ<Vp9f?<,KI&B&fb;_11,@
%UE/=^Z@:cJ6HH-S-WoL=KDBI1R'dfgagpY6jU]1o7#`fH;LncX:j/>eb/)e>&.2k+AF4#3<`Sq;C#Z$Z.&q+7.bMdEHrd@20)\'=
%3]7B=kHc63J@pT*V\33('kD_)Nj)*`&E6DqfZH,JCBoR'ZtB^lMj,Zr0hh2p8<e7G`8QJj[G@@B0#>=)_s2a0=dqkcoh!7S#A\j]
%c*>5a`>Je/N]3gk>/PIrApQ`Vf.'VZi$u+d^r.khk/QANNY8kYnjrcDOsWG92OhA-33ms<%O_-'^lXR?HrY'0^)"*eh4Q?oaL;9*
%"fAV,]q&Q*P:a3LRo$#bUNUO/\=U*.1s%#k2Lr?lS:&h`T*5b!['ekn)/@.Mm(XOgVONLE`G!iSNS#B:'!.bahnU+t=IhK<1K:=a
%DE:K=L*ZIW!=hg0GT_;lOAD%`Z?P<dK=&G\A;[VFC6,LZ6XNtH%?7m^nL?/sO"Mt4:&YH=#ZoSmo@L2_K?g\.B:m\Y5,[$U<-WCM
%Rc!IF:M>oYl9W>i!^FAUcsm"u8D`)X)$CPs(KQQ:]fB+@ZJcJE@R@<\fG@o^ZmqV!-^r$dD#ZdHC/*SV-_YZZgsp@#k:FPV>L/iX
%k2i+%RrH`@'V0&Uce31:dA,;fk=(U\@emSMZHkioQ"fiV2-k8j_#3!c-)Q-sYhDe@[q:@_KiPosqF/M*FGtab<h+YtWuP@4_Ohe#
%d0-5.9@aSGP76D)q0<kG5,j"%j)["dpjtF#7;<>Kjq/BZiNB%;J])+#l\QL^ZA1*GmGl/$r7ln4Gn]QW<g`*WBc8Sjb:#Gnil?m6
%2rP(^T;93pD6C]A#.=`43sR+u+8p]eRIqFCJmWo)Np9hs8j=An6N77An`.TLr4()aO7Y=3i7tR(_!'r('X.-HH"ke0_<Knk0]0=.
%s7).^7-)J[BaPc]lU`tJ@E/h4VW>gUn83"C^rc"$LgkBr-H%YJ:3OY<2^]ZN+%,fKV@qr)CG]io0,#^i*AF-oQC@p0S3r!I2Mt^]
%aLfjS7"u-.L#G!"W#UC+*c/[&%JpgRN*ns;QNccFWlOPDl#4l.#a`5WD+Qi]f>K&q>uU!qa>-+X:*T9c5IU;3ps>/X6H(_/3']*p
%msq:T9TP)Vl/t!sKq82_cS=$gX3ND7:5o(kG-(40ah4s].Df;$7[^9N\MEL%-<"e%+TF/kp@=4&n003J?2d^l3,.FTVP>1iTl&sT
%1jilE7aWm.(Q,GDd-tJPm,4fCMV\>=#'B!OFs-%iRIq"n3^X^R/R:`!3U@-Hm4NV&*GKC3M9dHg4dJA==ag"sis[S9BeplILgI)m
%YHfbEelIph*/*usdsl(>5$Zef?aW>`%Z#;iCj1hgq`3q]F-ufI?9e-QG)@Vq[n';gF)AXq+[9*K_kcF[hSA?h9nq"`+POd7>f2d4
%=]J:[]9r@_Nja"jQ+hrB)[#W=k4#`47U6j]a*iLqCi^cDD1Q!K0lP?]KrN'\ICa>(L2(%pm<dj@n@dM@kQ9Vbp!K'Bi5%KRlu>P:
%O4a;K5@AEq%dC2<pmKSFTC%A1Vt*&gL/E-BhL.%j]R2XZG/B'_^&-8B^n\<RCr_O.8_c`$ESLi5F1B9.5(K<WS>:,Z#F@p?ks"mR
%9`XtNAu=.]c,s=FCJ1Z4B]"L-RINjIS66o-CZX&$cVeQ%'LA9e$gZ9t+9qA>;QXLO*2Ne!q.l[J5UgVEg>!qH;[%?l>?_P\n<5uY
%Mch4;(:3QH_[Gu'Rct-_1.7>#h@9?BQH(gFGhNAD*+_SsO7'^1.HC9Ir)/S7W(B'#](\[S[m-IS_q;p,8QlokqeccR`%e:8P/s("
%Uf5s'/<PfIg)cjKAKZZiNbL42U8WfW=`MZ;X%W(^O.1C.gI]caU,n?8RY2_bb?%>-/N.3E:Q$.t[;&'DL.^%?dj0W*/((qD0+,L+
%%rkE#^70BhoApS\Qg40@"Tl`6Em<G'8%bbr+DDDa?%tQqm9Oq9q80.E/,Pg!B/15N4-P.kQJkkBpG:U^cHSHV=M]1o)f-Wl,_)hu
%4bfCN&;W&Y.r04$?]RR"f"8lRJQ;ge^OFBAi`-DSkpk/I@eM:9ZG\^-hSq9Mj_J&sZ4DT'9sqWY4@e?%2Sb-F?;#k0B6(\'n2Lk?
%%P\iU]54;%'JQs\3`250La%Fm=pW,cc="dL(Sh4l9Pnmrdr"p09>!Er/o4%2p0-=E?`Be"oY:F:.KY_IgU@jU&:k+!H4G!K4O-oC
%NYA#)-]bO.%7OPs.4F2nfbC^.MWdF%a'b49M2E'hd]eK$/UY&f\t_q.@Ol'1UYs#=G]S\#0KGE&/$uto]O4Jak1nkfk>/BoL<o8G
%Cj/N-GsH^A0>^"k,+-V/jTePgrK!G1+<$/XN&j8p1"[p",%Z@@WTi_udCY2VE@Tq>HcQTC>#G6!>IWbT%U$IiqeisH`3+q`?Pq4`
%kAb9tD6Jg8M6bgSN'ELrMl6g]p6VC/lN*4$20l'gD"8_<>>mIs@&+9M/%PK*H-%8I1Va$m"C6!9#:iuIeJ`Q5D+5O`E"Ug?X(<3-
%=sWi_E6pCgE?-i"W>ka=i?7)Z`<L<O)&SbV6Mq"crKbf[c*fm1J+jdc;hV84UbJ91kkX&s)KtThU;oW=5&83Ips1!Y()cf45\m'(
%h6O%a45=u32Lr?o\]=tV.M+o;Go_kimTZ.tl,^caD9#0hAm[61&Um6ZTrfPsT<i?.=0Om`RWXOL/S"`ifbY60]D8=,c>/T6d-\]W
%gs;t/hh-fF-!*Y@^tYlBWjL6b&`W0I3+<:b2??iBE6'Ck&K^*Em?Q`Lb`#@.c`iBH&]O.7pK@.GVZ1KZgRMZoCX*ZB&'Lb@1\dZe
%T40j-AE&9"]PNd7:$L0\D`8f0GHs(7TY;lSB'LLN9MI.cP!J;j=G:Y(N`knC^fnA[faYBmjqMG\C5/-\4`/J%Gaeg)J@<f&Y(V6i
%((iPGH$7s)MU"XYg%bipm3H_Hgmr'8L0lr:GTf>)NP`#q:P5jl.'Suj=CNi<6Kp2lrD5>U=$Im<o8)A`n#DQk)UR'?P;_2rCdgG)
%[)bqjk7n\<-h_a)4!@:92^_nLapZNG#R@mQZ+WdDr"9/A"MNq-[.%i,CJ`4f#;s:9K7LV['<T?N$-I9FUPsH!W?Ia9dmMNsMaO:'
%3CI7#/Plsi%WXo&T6tK9Kln`&M*]&Iea8ZZ@(ET]*GL7V,oSR9b1cDr+Y0@\d4&ZZBRN:u0CE"1<T*pdT-u[VQ@YM_D9HhLCl<FU
%K?=fM/iq3%rDuMW+/R*gZLPu/7b!1ZXUR33%[m.3/HIp^o^NHpUMAP\`?DF[6Qj,-CMIq@1LQVPn>(0/R%2NYojnn&8ci%5U?OY4
%)1?1U)nWEOeVQff.jMk&-Vb(Y@kjD:\:LQB1%gpCR<3>hUZ(1lN*,3p`=GGVh5cJ'l4NhUoO#k1O"Ej>MirtKS28hi'R;>J/<:9$
%8%[s6-`L@:TmC<$g-/<Q8C;Oej@:s!10cDA_ONYFT.Zk1(/Mg!L".$AiLtB\Uh7b_=f+:jqFk:iB%Lr^Vep8[0(%K.-<Ga#->/I<
%Rj/sjM6Rqq:B,sTPjskT9%\:OQsJb5_.D%i&>uV#cK;lp/lD;mV-KPt*m7)8a?IPNN,Gpp/\-M'3g\6`6M2/+p@0qb,,LYsGdX,N
%>^M>HoP.#^G9?G\d%AK<<p]2-XD86UF?uq@/krb.5B9_Qo'\I5Xgljbj[Lb'(BI(n,Rb<"JOm^9kYcE9)5&@HH](7U_G\"S8[u)F
%&G'Z:A3ud@6@A99KC8AJOPlqBKm@)`J%@V.pFa_%<nDb2jdVn7m9bA)'#e3T/2tCY7=7Fs[4Ef1<ti[i,BAjK/#MBOQRl"He<qpT
%CmNOS(:3ig%Pa2@`])@tc<cu!RLGUI-?S*BCHMB5?P@Vkn0J\qSC_:V;EL#g@-#8,D;%:W'Pq'GdngHk*"Wq_oso/1bLS%i6Rn[d
%^uoOJ[mtC]=N>&#GVJ(>'\fqG\RCZPjm]os/l'%Ui:1Sq6Uj-3p]6eW%jl1#Z85ik.Z'<.nrki$`<>jUMr@F(>X_Hea;jdYSDr8r
%RG9!,>.qAV9e#+>i8;lh%k$[d/tnu1G5"M#L/WQTX81`4M3"!QIRXi\7lqCYL@fFJE,NR`r-<TJZV39dk^IGr\3F\Tc'j'oJbX"D
%'op5#&O[s3T%5%CX\jjd&(r<F"m0T+KP;`WNZ]CD)dI2?ZTbsuOncBQdj=h/m3o_!eR^cR0,,TE14DICaKCpYH*,NU!>UsWaa*N<
%^V$\>rH/nsAR1=c\i"!IK/!r%CeAGUKS'ueYENN[[5rAU@[p-HYiEhp7(\-??A(n*F6;_?Le>3mPEo#;rOOlE%6FM1r.ZItSK!iY
%V8;qEPE6a`c5]NI)m[df?9&Y&orRm;%]f4,K$?]EPY/ukk5<\d-f'4@OO1\)H2$4QL4SKJk_oRp\mtOm_dDsBiLQ.*U*tU["4`^9
%bS_GEN)Gr**^!:0$Ce%0=7Tf&="kju:T(]KXXh^'UE)KtG':de^l]UA,*GWB90T7_=Y+4s3go*rHKJYugf6eK'XR*'k!DR%\'2<&
%9Aa'(%,:-k>qlkW,R_ZJ2PWK^&BW.CU:lDQfkoOU(U?ou2B;fSfS!.<%QG%>C`$@cDKSp,Iua(4e]_k>o@@]Z15.2mR/S:2GWD\g
%cBW)/EQjrFhKFKhQ8r-[%`2H)\F:Yfeu&2)8D3Nt9+`Y[qf:'nLsd5HS%PqLq-:uj$J()]&FMMu!T`Z%!Vts,o?IIDg&8@]'qsOp
%^,E:!YZ?Wg9^0!=m&f6?CL#.3Q,Phq4?ui610"%BiRbD%c+dpp,26\CVIWC2GqI-ZTe9$nMsGtd"LFY+Iu)$N\s=2@/afPoF>H&$
%aC'^]i+-1\'Wu7:o6E;aD!@(*+^K>4AR4TEj"CAuWlr;;aM_6%):GuB&OmiSh2UA?2O1h%B2RVFKOmN>L@qbegO(8l0:d>j>Y[ZV
%i"),sgMfhe@Q]\u/9n;Yc=t:bfS9*DQj4kBhP<R+Yje7XpVi&D0A`^9V%!a1qs>M46>%Wf4ck*8S=E[KAuh)r1Thd-P+Pff.[PnC
%L.7"X3+[0Yg3Ks2H0F#C;>S->#LURH*_JHbR8.ng,27_lmVKN&D>'Vh=Zf?;YatarR[q3`:kDinY*QQ._MK*N_=O!jem#._qOnTF
%\.oV2n^D(Ic[H3sPno0!\K\hL(t9^r[(GRr;XP_VdC-AA69Z#X#P(<=rC_>SB;t'C&UFbT+i-/55ubq0-aTM9460rX,WCJ:[kN]%
%bMt#5Ua.]0\IfAV[I1W%NmWSd*@bkkWhiC?c4,0M*H7&\V56U@6DaP=6sB+gIEeOgm@[C8r6t-6>TDeI=8eK?@H?+`QK#8C[CZT(
%nD?QVWA;X%%eZ^/SP=U`oQ*af+Z5Q_R.nQ>F$Wm`l93;.:W_>RLf?HIr1;*ug<e5*Q2;PQG`">)i[Ao7WiP[-e!BXQ[8!%.M6>lT
%=%O0U8Lc3\$%#:QeMO&Lg[nNh?'0)A-'R:g@7#sr/IRdM\J7EEGb)B:`9E]0>=^\CBqBaL+9`CCD!33?f1m[!SSpPs5"oeDmp(GD
%$4<]_)4`,^RdFnQ"e/l+f1>V.r:bU`&i&A(Rnb+Fqj"_RVLL^3R\r?P&0,26p.U4>mVV/&O)u@`*NYV:gU]u!_4u7`Ps$nVQ"8nU
%hDmDl(2P1Rjs"+IX<Q$-Q\PXc`3D@K0?TY6#t(q<nR,;D8+O:f&o2[AbuOF&P"+J@):QuK4phG'gn=5=WXS;^Qm')dh(e)&F^_>'
%GI0@t7Hn(b]6+Wh=hf^;l@YuIg&C=jeMYPn\DrP@`4D0O:N$t?6"Dn?%+)8oa)J@eTmW#DL@R2=;3@T)IG\O9F'2Qj+8hS<_5a4q
%c?4^lE@9s"Jbg_TS5Es#PZ]_Q8WE.ulal-805gH*n)\g#B&EDcPD'X7ft^7LVrSs0ni\9>:/OHIV(;9CRurqEh+qs3XTK1:&1R9S
%,1ag?Ir_Cj+CrhF;Y3L(;AjrSGYdo:r\eoi:aXRJ7@k5_L7Va1;ddJ=jc$jS7"m<.'t>fUC\.i=Rm:"+,Pk5021P*g6<1D6(!s&c
%j6("`do8=ph&N%k32iirC'n`t8:?n.aV`H)>G6QC7WL8[V`Zb(>mYu?Tq+>Os)9WX\*?"GQB-bj"Y`h<FUN9ejRoV/1NsNFb=>BD
%m(B?lPZN'Ie7Fc./Q&]/c4%cVNPRA^d[m@nqM$!-N=+o+@<h#]jjQCe?UdRHY,N--kOqCPk:"9biZW_n<8G#k5JkI>#ocJmG?(^M
%`JD5h,a'K`B)M?gXX2<f+(KR"8<rVBamlG8AGUb'?K)SbT=:sB2ilN^&!N3[M+L-]!&B0rF+()`V^9aar\iXEmPBT?X6D&N<U&p'
%q-83>*&<N#_b<$j1uB)aX_MBHG,7VW*NJqik2TBGX`Hd"f"P$oU+`NErq(r+d+%-Dl!)5n*2^8Ij]Ir1Ok[OFXhMKio\qu8k=T1]
%E)(W"LSQ@upV^dKrU@#gOR+)S\[aBQ!.&B%r;;tuKpe(re\UXfItN)O:9VCR`%tu."8A"KBa&RnbV+"n7GtfcqFhFpXE0CiNmXTF
%aYAjV2M[Pfh;u$Hb4>a,/5rD51WS:)oC2"<H22EUrjI(B)@:JnS(4pDRsA":VOIsaI@>od,UKeMjL^g.mcedK&J(./BHbjIl.RA[
%+IO>6H&uq.'\!h(q$Dst(C@X+^=!M\4dAHdou;E<h^4cgSuBMVqR\/*,c`\]MD7#Zhg6lQ`p^qmW@Z2DbN<3$.8k(.8l?%cQOs+P
%GT-0HZ9)>S)HaXpHG'[<?0I*""%&nB3QW]Zn=Srk.bN^U8i$"U![Vj;_m06g*$*chhF%*ICf:1>I3g(SFqYU(cJ+bC3,VXTngL'N
%LFR)/n$NhH:/p=i*I^!GU?`qr.&!!7^1Ks[[!'jC9m=GGBm*`meP.9!;j8a<Nn>(PY,@.%]H3UV*L5R8$D4k^Vfsg=+a.e.Y,NS6
%OLP:%1N&?H__u,#6g*/c7[HTM<^*,$JltrUL46cp2bsf[mf1rsb5_+KQN-9cr;1uUs3!'FrS-_A$3'1=qocbQotULn0E9A=^]*UB
%s5Dl7j"EXsp#[q-rpT'F^])"A:H/=I\%hp_s7bFNp=Gf6pqQk+s$4FgqZHlj:]KN`ro\e/L]8Il2AtB~>
%AI9_PrivateDataEnd
